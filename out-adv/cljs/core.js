// Compiled by ClojureScript 0.0-2755 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2755";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$77,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$78,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$79,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$80,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$81,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__18289__delegate = function (args){
return console.log.apply(console,(function (){var G__18288 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__18288) : cljs.core.into_array.call(null,G__18288));
})());
};
var G__18289 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__18290__i = 0, G__18290__a = new Array(arguments.length -  0);
while (G__18290__i < G__18290__a.length) {G__18290__a[G__18290__i] = arguments[G__18290__i + 0]; ++G__18290__i;}
  args = new cljs.core.IndexedSeq(G__18290__a,0);
} 
return G__18289__delegate.call(this,args);};
G__18289.cljs$lang$maxFixedArity = 0;
G__18289.cljs$lang$applyTo = (function (arglist__18291){
var args = cljs.core.seq(arglist__18291);
return G__18289__delegate(args);
});
G__18289.cljs$core$IFn$_invoke$arity$variadic = G__18289__delegate;
return G__18289;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__18293 = x;
return goog.isString(G__18293);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__18295 = x__$1;
return goog.typeOf(G__18295);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3760__auto__ = ty;
if(cljs.core.truth_(and__3760__auto__)){
return ty.cljs$lang$type;
} else {
return and__3760__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__18297 = obj;
return goog.typeOf(G__18297);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__18299 = Symbol;
return goog.typeOf(G__18299);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4659__auto___18301 = len;
var i_18302 = (0);
while(true){
if((i_18302 < n__4659__auto___18301)){
(new_arr[i_18302] = (arr[i_18302]));

var G__18303 = (i_18302 + (1));
i_18302 = G__18303;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__18304 = (i + (1));
i = G__18304;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__18313__delegate = function (array,i,idxs){
var G__18310 = aget;
var G__18311 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__18312 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__18310,G__18311,G__18312) : cljs.core.apply.call(null,G__18310,G__18311,G__18312));
};
var G__18313 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__18314__i = 0, G__18314__a = new Array(arguments.length -  2);
while (G__18314__i < G__18314__a.length) {G__18314__a[G__18314__i] = arguments[G__18314__i + 2]; ++G__18314__i;}
  idxs = new cljs.core.IndexedSeq(G__18314__a,0);
} 
return G__18313__delegate.call(this,array,i,idxs);};
G__18313.cljs$lang$maxFixedArity = 2;
G__18313.cljs$lang$applyTo = (function (arglist__18315){
var array = cljs.core.first(arglist__18315);
arglist__18315 = cljs.core.next(arglist__18315);
var i = cljs.core.first(arglist__18315);
var idxs = cljs.core.rest(arglist__18315);
return G__18313__delegate(array,i,idxs);
});
G__18313.cljs$core$IFn$_invoke$arity$variadic = G__18313__delegate;
return G__18313;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__18316 = null;
if (arguments.length > 2) {
var G__18317__i = 0, G__18317__a = new Array(arguments.length -  2);
while (G__18317__i < G__18317__a.length) {G__18317__a[G__18317__i] = arguments[G__18317__i + 2]; ++G__18317__i;}
G__18316 = new cljs.core.IndexedSeq(G__18317__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__18316);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__18326__delegate = function (array,idx,idx2,idxv){
var G__18322 = aset;
var G__18323 = (array[idx]);
var G__18324 = idx2;
var G__18325 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__18322,G__18323,G__18324,G__18325) : cljs.core.apply.call(null,G__18322,G__18323,G__18324,G__18325));
};
var G__18326 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__18327__i = 0, G__18327__a = new Array(arguments.length -  3);
while (G__18327__i < G__18327__a.length) {G__18327__a[G__18327__i] = arguments[G__18327__i + 3]; ++G__18327__i;}
  idxv = new cljs.core.IndexedSeq(G__18327__a,0);
} 
return G__18326__delegate.call(this,array,idx,idx2,idxv);};
G__18326.cljs$lang$maxFixedArity = 3;
G__18326.cljs$lang$applyTo = (function (arglist__18328){
var array = cljs.core.first(arglist__18328);
arglist__18328 = cljs.core.next(arglist__18328);
var idx = cljs.core.first(arglist__18328);
arglist__18328 = cljs.core.next(arglist__18328);
var idx2 = cljs.core.first(arglist__18328);
var idxv = cljs.core.rest(arglist__18328);
return G__18326__delegate(array,idx,idx2,idxv);
});
G__18326.cljs$core$IFn$_invoke$arity$variadic = G__18326__delegate;
return G__18326;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__18329 = null;
if (arguments.length > 3) {
var G__18330__i = 0, G__18330__a = new Array(arguments.length -  3);
while (G__18330__i < G__18330__a.length) {G__18330__a[G__18330__i] = arguments[G__18330__i + 3]; ++G__18330__i;}
G__18329 = new cljs.core.IndexedSeq(G__18330__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__18329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__18336 = (function (a,x){
a.push(x);

return a;
});
var G__18337 = [];
var G__18338 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18336,G__18337,G__18338) : cljs.core.reduce.call(null,G__18336,G__18337,G__18338));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__18339__i = 0, G__18339__a = new Array(arguments.length -  2);
while (G__18339__i < G__18339__a.length) {G__18339__a[G__18339__i] = arguments[G__18339__i + 2]; ++G__18339__i;}
  args = new cljs.core.IndexedSeq(G__18339__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__18340){
var obj = cljs.core.first(arglist__18340);
arglist__18340 = cljs.core.next(arglist__18340);
var s = cljs.core.first(arglist__18340);
var args = cljs.core.rest(arglist__18340);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj18342 = {};
return obj18342;
})();


cljs.core.IFn = (function (){var obj18344 = {};
return obj18344;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18390 = x__4416__auto__;
return goog.typeOf(G__18390);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18392 = x__4416__auto__;
return goog.typeOf(G__18392);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18394 = x__4416__auto__;
return goog.typeOf(G__18394);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18396 = x__4416__auto__;
return goog.typeOf(G__18396);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18398 = x__4416__auto__;
return goog.typeOf(G__18398);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18400 = x__4416__auto__;
return goog.typeOf(G__18400);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18402 = x__4416__auto__;
return goog.typeOf(G__18402);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18404 = x__4416__auto__;
return goog.typeOf(G__18404);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18406 = x__4416__auto__;
return goog.typeOf(G__18406);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18408 = x__4416__auto__;
return goog.typeOf(G__18408);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18410 = x__4416__auto__;
return goog.typeOf(G__18410);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18412 = x__4416__auto__;
return goog.typeOf(G__18412);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18414 = x__4416__auto__;
return goog.typeOf(G__18414);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18416 = x__4416__auto__;
return goog.typeOf(G__18416);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18418 = x__4416__auto__;
return goog.typeOf(G__18418);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18420 = x__4416__auto__;
return goog.typeOf(G__18420);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18422 = x__4416__auto__;
return goog.typeOf(G__18422);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18424 = x__4416__auto__;
return goog.typeOf(G__18424);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18426 = x__4416__auto__;
return goog.typeOf(G__18426);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18428 = x__4416__auto__;
return goog.typeOf(G__18428);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18430 = x__4416__auto__;
return goog.typeOf(G__18430);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18432 = x__4416__auto__;
return goog.typeOf(G__18432);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj18434 = {};
return obj18434;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3760__auto__ = value;
if(and__3760__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3760__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4416__auto__ = (((value == null))?null:value);
return (function (){var or__3772__auto__ = (cljs.core._clone[(function (){var G__18438 = x__4416__auto__;
return goog.typeOf(G__18438);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._clone["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj18440 = {};
return obj18440;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._count[(function (){var G__18444 = x__4416__auto__;
return goog.typeOf(G__18444);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._count["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj18446 = {};
return obj18446;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._empty[(function (){var G__18450 = x__4416__auto__;
return goog.typeOf(G__18450);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._empty["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj18452 = {};
return obj18452;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._conj[(function (){var G__18456 = x__4416__auto__;
return goog.typeOf(G__18456);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._conj["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj18458 = {};
return obj18458;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._nth[(function (){var G__18464 = x__4416__auto__;
return goog.typeOf(G__18464);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._nth["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._nth[(function (){var G__18466 = x__4416__auto__;
return goog.typeOf(G__18466);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._nth["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj18468 = {};
return obj18468;
})();


cljs.core.ISeq = (function (){var obj18470 = {};
return obj18470;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._first[(function (){var G__18474 = x__4416__auto__;
return goog.typeOf(G__18474);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._first["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._rest[(function (){var G__18478 = x__4416__auto__;
return goog.typeOf(G__18478);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._rest["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj18480 = {};
return obj18480;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._next[(function (){var G__18484 = x__4416__auto__;
return goog.typeOf(G__18484);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._next["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj18486 = {};
return obj18486;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._lookup[(function (){var G__18492 = x__4416__auto__;
return goog.typeOf(G__18492);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._lookup["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._lookup[(function (){var G__18494 = x__4416__auto__;
return goog.typeOf(G__18494);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._lookup["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj18496 = {};
return obj18496;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__18500 = x__4416__auto__;
return goog.typeOf(G__18500);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._assoc[(function (){var G__18504 = x__4416__auto__;
return goog.typeOf(G__18504);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj18506 = {};
return obj18506;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._dissoc[(function (){var G__18510 = x__4416__auto__;
return goog.typeOf(G__18510);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj18512 = {};
return obj18512;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._key[(function (){var G__18516 = x__4416__auto__;
return goog.typeOf(G__18516);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._key["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._val[(function (){var G__18520 = x__4416__auto__;
return goog.typeOf(G__18520);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._val["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj18522 = {};
return obj18522;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._disjoin[(function (){var G__18526 = x__4416__auto__;
return goog.typeOf(G__18526);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj18528 = {};
return obj18528;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._peek[(function (){var G__18532 = x__4416__auto__;
return goog.typeOf(G__18532);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._peek["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._pop[(function (){var G__18536 = x__4416__auto__;
return goog.typeOf(G__18536);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._pop["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj18538 = {};
return obj18538;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._assoc_n[(function (){var G__18542 = x__4416__auto__;
return goog.typeOf(G__18542);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj18544 = {};
return obj18544;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._deref[(function (){var G__18548 = x__4416__auto__;
return goog.typeOf(G__18548);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._deref["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj18550 = {};
return obj18550;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._deref_with_timeout[(function (){var G__18554 = x__4416__auto__;
return goog.typeOf(G__18554);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj18556 = {};
return obj18556;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._meta[(function (){var G__18560 = x__4416__auto__;
return goog.typeOf(G__18560);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._meta["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj18562 = {};
return obj18562;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._with_meta[(function (){var G__18566 = x__4416__auto__;
return goog.typeOf(G__18566);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj18568 = {};
return obj18568;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._reduce[(function (){var G__18574 = x__4416__auto__;
return goog.typeOf(G__18574);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reduce["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._reduce[(function (){var G__18576 = x__4416__auto__;
return goog.typeOf(G__18576);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reduce["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj18578 = {};
return obj18578;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._kv_reduce[(function (){var G__18582 = x__4416__auto__;
return goog.typeOf(G__18582);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj18584 = {};
return obj18584;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._equiv[(function (){var G__18588 = x__4416__auto__;
return goog.typeOf(G__18588);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._equiv["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj18590 = {};
return obj18590;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._hash[(function (){var G__18594 = x__4416__auto__;
return goog.typeOf(G__18594);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._hash["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj18596 = {};
return obj18596;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._seq[(function (){var G__18600 = x__4416__auto__;
return goog.typeOf(G__18600);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._seq["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj18602 = {};
return obj18602;
})();


cljs.core.IList = (function (){var obj18604 = {};
return obj18604;
})();


cljs.core.IRecord = (function (){var obj18606 = {};
return obj18606;
})();


cljs.core.IReversible = (function (){var obj18608 = {};
return obj18608;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._rseq[(function (){var G__18612 = x__4416__auto__;
return goog.typeOf(G__18612);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._rseq["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj18614 = {};
return obj18614;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._sorted_seq[(function (){var G__18618 = x__4416__auto__;
return goog.typeOf(G__18618);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._sorted_seq_from[(function (){var G__18622 = x__4416__auto__;
return goog.typeOf(G__18622);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._entry_key[(function (){var G__18626 = x__4416__auto__;
return goog.typeOf(G__18626);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._comparator[(function (){var G__18630 = x__4416__auto__;
return goog.typeOf(G__18630);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._comparator["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj18632 = {};
return obj18632;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3760__auto__ = writer;
if(and__3760__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3760__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4416__auto__ = (((writer == null))?null:writer);
return (function (){var or__3772__auto__ = (cljs.core._write[(function (){var G__18636 = x__4416__auto__;
return goog.typeOf(G__18636);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._write["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3760__auto__ = writer;
if(and__3760__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3760__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4416__auto__ = (((writer == null))?null:writer);
return (function (){var or__3772__auto__ = (cljs.core._flush[(function (){var G__18640 = x__4416__auto__;
return goog.typeOf(G__18640);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._flush["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj18642 = {};
return obj18642;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._pr_writer[(function (){var G__18646 = x__4416__auto__;
return goog.typeOf(G__18646);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj18648 = {};
return obj18648;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3760__auto__ = d;
if(and__3760__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3760__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4416__auto__ = (((d == null))?null:d);
return (function (){var or__3772__auto__ = (cljs.core._realized_QMARK_[(function (){var G__18652 = x__4416__auto__;
return goog.typeOf(G__18652);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj18654 = {};
return obj18654;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._notify_watches[(function (){var G__18658 = x__4416__auto__;
return goog.typeOf(G__18658);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._add_watch[(function (){var G__18662 = x__4416__auto__;
return goog.typeOf(G__18662);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._remove_watch[(function (){var G__18666 = x__4416__auto__;
return goog.typeOf(G__18666);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj18668 = {};
return obj18668;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._as_transient[(function (){var G__18672 = x__4416__auto__;
return goog.typeOf(G__18672);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj18674 = {};
return obj18674;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._conj_BANG_[(function (){var G__18678 = x__4416__auto__;
return goog.typeOf(G__18678);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._persistent_BANG_[(function (){var G__18682 = x__4416__auto__;
return goog.typeOf(G__18682);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj18684 = {};
return obj18684;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._assoc_BANG_[(function (){var G__18688 = x__4416__auto__;
return goog.typeOf(G__18688);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj18690 = {};
return obj18690;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__18694 = x__4416__auto__;
return goog.typeOf(G__18694);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj18696 = {};
return obj18696;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__18700 = x__4416__auto__;
return goog.typeOf(G__18700);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._pop_BANG_[(function (){var G__18704 = x__4416__auto__;
return goog.typeOf(G__18704);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj18706 = {};
return obj18706;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__18710 = x__4416__auto__;
return goog.typeOf(G__18710);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj18712 = {};
return obj18712;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._compare[(function (){var G__18716 = x__4416__auto__;
return goog.typeOf(G__18716);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._compare["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj18718 = {};
return obj18718;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._drop_first[(function (){var G__18722 = x__4416__auto__;
return goog.typeOf(G__18722);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj18724 = {};
return obj18724;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._chunked_first[(function (){var G__18728 = x__4416__auto__;
return goog.typeOf(G__18728);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._chunked_rest[(function (){var G__18732 = x__4416__auto__;
return goog.typeOf(G__18732);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj18734 = {};
return obj18734;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._chunked_next[(function (){var G__18738 = x__4416__auto__;
return goog.typeOf(G__18738);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj18740 = {};
return obj18740;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._name[(function (){var G__18744 = x__4416__auto__;
return goog.typeOf(G__18744);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._name["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._namespace[(function (){var G__18748 = x__4416__auto__;
return goog.typeOf(G__18748);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._namespace["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj18750 = {};
return obj18750;
})();


cljs.core.IReset = (function (){var obj18752 = {};
return obj18752;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._reset_BANG_[(function (){var G__18756 = x__4416__auto__;
return goog.typeOf(G__18756);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj18758 = {};
return obj18758;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__18768 = x__4416__auto__;
return goog.typeOf(G__18768);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__18770 = x__4416__auto__;
return goog.typeOf(G__18770);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__18772 = x__4416__auto__;
return goog.typeOf(G__18772);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__18774 = x__4416__auto__;
return goog.typeOf(G__18774);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj18776 = {};
return obj18776;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._vreset_BANG_[(function (){var G__18780 = x__4416__auto__;
return goog.typeOf(G__18780);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj18782 = {};
return obj18782;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._iterator[(function (){var G__18786 = x__4416__auto__;
return goog.typeOf(G__18786);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._iterator["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__18789 = (4294967295);
var G__18790 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18789,G__18790) : Math.imul.call(null,G__18789,G__18790));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__18793 = a;
var G__18794 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18793,G__18794) : Math.imul.call(null,G__18793,G__18794));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__18795 = (i + (2));
var G__18796 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__18795;
h1 = G__18796;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj18798 = {};
return obj18798;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__18799 = (i + (1));
var G__18800 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__18799;
hash = G__18800;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj18804 = {};
return obj18804;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__18807 = o;
if(G__18807){
var bit__4446__auto__ = (G__18807.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4446__auto__) || (G__18807.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__18808 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18808) : Math.floor.call(null,G__18808));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3760__auto__ = cljs.core.not(a.ns);
if(and__3760__auto__){
return b.ns;
} else {
return and__3760__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__18815 = a.ns;
var G__18816 = b.ns;
return goog.array.defaultCompare(G__18815,G__18816);
})();
if(((0) === nsc)){
var G__18817 = a.name;
var G__18818 = b.name;
return goog.array.defaultCompare(G__18817,G__18818);
} else {
return nsc;
}
}
} else {
var G__18819 = a.name;
var G__18820 = b.name;
return goog.array.defaultCompare(G__18819,G__18820);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4193__auto__ = self__._hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__18822 = null;
var G__18822__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__18822__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__18822 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__18822__2.call(this,self__,coll);
case 3:
return G__18822__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18822.cljs$core$IFn$_invoke$arity$2 = G__18822__2;
G__18822.cljs$core$IFn$_invoke$arity$3 = G__18822__3;
return G__18822;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args18821){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18821)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__18870 = null;
var G__18870__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__18870__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__18870__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__18870__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__18870__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__18870__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__18870__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__18870__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__18870__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__18870__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__18870__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__18870__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__18870__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__18870__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__18870__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__18870__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__18870__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__18870__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__18870__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__18870__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__18870__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__18870__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18826 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__18827 = a;
var G__18828 = b;
var G__18829 = c;
var G__18830 = d;
var G__18831 = e;
var G__18832 = f;
var G__18833 = g;
var G__18834 = h;
var G__18835 = i;
var G__18836 = j;
var G__18837 = k;
var G__18838 = l;
var G__18839 = m;
var G__18840 = n;
var G__18841 = o;
var G__18842 = p;
var G__18843 = q;
var G__18844 = r;
var G__18845 = s;
var G__18846 = t;
var G__18847 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18826,G__18827,G__18828,G__18829,G__18830,G__18831,G__18832,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840,G__18841,G__18842,G__18843,G__18844,G__18845,G__18846,G__18847) : cljs.core.apply.call(null,G__18826,G__18827,G__18828,G__18829,G__18830,G__18831,G__18832,G__18833,G__18834,G__18835,G__18836,G__18837,G__18838,G__18839,G__18840,G__18841,G__18842,G__18843,G__18844,G__18845,G__18846,G__18847));
});
G__18870 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__18870__1.call(this,self__);
case 2:
return G__18870__2.call(this,self__,a);
case 3:
return G__18870__3.call(this,self__,a,b);
case 4:
return G__18870__4.call(this,self__,a,b,c);
case 5:
return G__18870__5.call(this,self__,a,b,c,d);
case 6:
return G__18870__6.call(this,self__,a,b,c,d,e);
case 7:
return G__18870__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__18870__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__18870__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__18870__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__18870__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__18870__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__18870__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__18870__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__18870__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__18870__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__18870__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__18870__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__18870__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__18870__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__18870__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__18870__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18870.cljs$core$IFn$_invoke$arity$1 = G__18870__1;
G__18870.cljs$core$IFn$_invoke$arity$2 = G__18870__2;
G__18870.cljs$core$IFn$_invoke$arity$3 = G__18870__3;
G__18870.cljs$core$IFn$_invoke$arity$4 = G__18870__4;
G__18870.cljs$core$IFn$_invoke$arity$5 = G__18870__5;
G__18870.cljs$core$IFn$_invoke$arity$6 = G__18870__6;
G__18870.cljs$core$IFn$_invoke$arity$7 = G__18870__7;
G__18870.cljs$core$IFn$_invoke$arity$8 = G__18870__8;
G__18870.cljs$core$IFn$_invoke$arity$9 = G__18870__9;
G__18870.cljs$core$IFn$_invoke$arity$10 = G__18870__10;
G__18870.cljs$core$IFn$_invoke$arity$11 = G__18870__11;
G__18870.cljs$core$IFn$_invoke$arity$12 = G__18870__12;
G__18870.cljs$core$IFn$_invoke$arity$13 = G__18870__13;
G__18870.cljs$core$IFn$_invoke$arity$14 = G__18870__14;
G__18870.cljs$core$IFn$_invoke$arity$15 = G__18870__15;
G__18870.cljs$core$IFn$_invoke$arity$16 = G__18870__16;
G__18870.cljs$core$IFn$_invoke$arity$17 = G__18870__17;
G__18870.cljs$core$IFn$_invoke$arity$18 = G__18870__18;
G__18870.cljs$core$IFn$_invoke$arity$19 = G__18870__19;
G__18870.cljs$core$IFn$_invoke$arity$20 = G__18870__20;
G__18870.cljs$core$IFn$_invoke$arity$21 = G__18870__21;
G__18870.cljs$core$IFn$_invoke$arity$22 = G__18870__22;
return G__18870;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args18825){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18825)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__18848 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__18849 = a;
var G__18850 = b;
var G__18851 = c;
var G__18852 = d;
var G__18853 = e;
var G__18854 = f;
var G__18855 = g;
var G__18856 = h;
var G__18857 = i;
var G__18858 = j;
var G__18859 = k;
var G__18860 = l;
var G__18861 = m;
var G__18862 = n;
var G__18863 = o;
var G__18864 = p;
var G__18865 = q;
var G__18866 = r;
var G__18867 = s;
var G__18868 = t;
var G__18869 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18848,G__18849,G__18850,G__18851,G__18852,G__18853,G__18854,G__18855,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861,G__18862,G__18863,G__18864,G__18865,G__18866,G__18867,G__18868,G__18869) : cljs.core.apply.call(null,G__18848,G__18849,G__18850,G__18851,G__18852,G__18853,G__18854,G__18855,G__18856,G__18857,G__18858,G__18859,G__18860,G__18861,G__18862,G__18863,G__18864,G__18865,G__18866,G__18867,G__18868,G__18869));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__18872 = x;
if(G__18872){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__18872.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__18872.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18872);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__18872);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__18874 = value;
if(G__18874){
var bit__4453__auto__ = (G__18874.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4453__auto__) || (G__18874.cljs$core$ICloneable$)){
return true;
} else {
if((!G__18874.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18874);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__18874);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18876 = coll;
if(G__18876){
var bit__4446__auto__ = (G__18876.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4446__auto__) || (G__18876.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18878 = coll;
if(G__18878){
var bit__4446__auto__ = (G__18878.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__18878.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__18880 = coll;
if(G__18880){
var bit__4446__auto__ = (G__18880.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__18880.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__18882 = coll;
if(G__18882){
var bit__4446__auto__ = (G__18882.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4446__auto__) || (G__18882.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__18887__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__18888 = y;
var G__18889 = cljs.core.first(more);
var G__18890 = cljs.core.next(more);
x = G__18888;
y = G__18889;
more = G__18890;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__18887 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__18891__i = 0, G__18891__a = new Array(arguments.length -  2);
while (G__18891__i < G__18891__a.length) {G__18891__a[G__18891__i] = arguments[G__18891__i + 2]; ++G__18891__i;}
  more = new cljs.core.IndexedSeq(G__18891__a,0);
} 
return G__18887__delegate.call(this,x,y,more);};
G__18887.cljs$lang$maxFixedArity = 2;
G__18887.cljs$lang$applyTo = (function (arglist__18892){
var x = cljs.core.first(arglist__18892);
arglist__18892 = cljs.core.next(arglist__18892);
var y = cljs.core.first(arglist__18892);
var more = cljs.core.rest(arglist__18892);
return G__18887__delegate(x,y,more);
});
G__18887.cljs$core$IFn$_invoke$arity$variadic = G__18887__delegate;
return G__18887;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__18893 = null;
if (arguments.length > 2) {
var G__18894__i = 0, G__18894__a = new Array(arguments.length -  2);
while (G__18894__i < G__18894__a.length) {G__18894__a[G__18894__i] = arguments[G__18894__i + 2]; ++G__18894__i;}
G__18893 = new cljs.core.IndexedSeq(G__18894__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__18893);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__18895 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__18895) : cljs.core.es6_iterator_seq.call(null,G__18895));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18896 = (n + (1));
var G__18897 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18898 = cljs.core.next(coll__$1);
n = G__18896;
hash_code = G__18897;
coll__$1 = G__18898;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__18899 = (n + (1));
var G__18900 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__18901 = cljs.core.next(coll__$1);
n = G__18899;
hash_code = G__18900;
coll__$1 = G__18901;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__18902 = o;
return goog.getUid(G__18902);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__18904 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__18904) : cljs.core.deref.call(null,G__18904));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18911 = val;
var G__18912 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18911,G__18912) : f.call(null,G__18911,G__18912));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18917 = nval;
var G__18918 = (n + (1));
val = G__18917;
n = G__18918;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18913 = val__$1;
var G__18914 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18913,G__18914) : f.call(null,G__18913,G__18914));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18919 = nval;
var G__18920 = (n + (1));
val__$1 = G__18919;
n = G__18920;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18915 = val__$1;
var G__18916 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18915,G__18916) : f.call(null,G__18915,G__18916));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18921 = nval;
var G__18922 = (n + (1));
val__$1 = G__18921;
n = G__18922;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__18929 = val;
var G__18930 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18929,G__18930) : f.call(null,G__18929,G__18930));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18935 = nval;
var G__18936 = (n + (1));
val = G__18935;
n = G__18936;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__18931 = val__$1;
var G__18932 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18931,G__18932) : f.call(null,G__18931,G__18932));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18937 = nval;
var G__18938 = (n + (1));
val__$1 = G__18937;
n = G__18938;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__18933 = val__$1;
var G__18934 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__18933,G__18934) : f.call(null,G__18933,G__18934));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__18939 = nval;
var G__18940 = (n + (1));
val__$1 = G__18939;
n = G__18940;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__18942 = x;
if(G__18942){
var bit__4453__auto__ = (G__18942.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4453__auto__) || (G__18942.cljs$core$ICounted$)){
return true;
} else {
if((!G__18942.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18942);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__18942);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__18944 = x;
if(G__18944){
var bit__4453__auto__ = (G__18944.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4453__auto__) || (G__18944.cljs$core$IIndexed$)){
return true;
} else {
if((!G__18944.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18944);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__18944);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18945 = coll__$1;
var G__18946 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18945,G__18946) : cljs.core.equiv_sequential.call(null,G__18945,G__18946));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18947 = o;
var G__18948 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18947,G__18948) : cljs.core.cons.call(null,G__18947,G__18948));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__18951 = coll__$1;
var G__18952 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__18951,G__18952) : cljs.core.equiv_sequential.call(null,G__18951,G__18952));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__18953 = cljs.core.List.EMPTY;
var G__18954 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__18953,G__18954) : cljs.core.with_meta.call(null,G__18953,G__18954));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__18955 = f;
var G__18956 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__18955,G__18956) : cljs.core.seq_reduce.call(null,G__18955,G__18956));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__18957 = f;
var G__18958 = start;
var G__18959 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__18957,G__18958,G__18959) : cljs.core.seq_reduce.call(null,G__18957,G__18958,G__18959));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__18960 = o;
var G__18961 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__18960,G__18961) : cljs.core.cons.call(null,G__18960,G__18961));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__18962 = sn;
s = G__18962;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__18967__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__18968 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__18969 = cljs.core.first(xs);
var G__18970 = cljs.core.next(xs);
coll = G__18968;
x = G__18969;
xs = G__18970;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__18967 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__18971__i = 0, G__18971__a = new Array(arguments.length -  2);
while (G__18971__i < G__18971__a.length) {G__18971__a[G__18971__i] = arguments[G__18971__i + 2]; ++G__18971__i;}
  xs = new cljs.core.IndexedSeq(G__18971__a,0);
} 
return G__18967__delegate.call(this,coll,x,xs);};
G__18967.cljs$lang$maxFixedArity = 2;
G__18967.cljs$lang$applyTo = (function (arglist__18972){
var coll = cljs.core.first(arglist__18972);
arglist__18972 = cljs.core.next(arglist__18972);
var x = cljs.core.first(arglist__18972);
var xs = cljs.core.rest(arglist__18972);
return G__18967__delegate(coll,x,xs);
});
G__18967.cljs$core$IFn$_invoke$arity$variadic = G__18967__delegate;
return G__18967;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__18973 = null;
if (arguments.length > 2) {
var G__18974__i = 0, G__18974__a = new Array(arguments.length -  2);
while (G__18974__i < G__18974__a.length) {G__18974__a[G__18974__i] = arguments[G__18974__i + 2]; ++G__18974__i;}
G__18973 = new cljs.core.IndexedSeq(G__18974__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__18973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__18975 = cljs.core.next(s);
var G__18976 = (acc + (1));
s = G__18975;
acc = G__18976;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__18978 = coll;
if(G__18978){
var bit__4446__auto__ = (G__18978.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4446__auto__) || (G__18978.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__18979 = cljs.core.next(coll);
var G__18980 = (n - (1));
coll = G__18979;
n = G__18980;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__18981 = cljs.core.next(coll);
var G__18982 = (n - (1));
var G__18983 = not_found;
coll = G__18981;
n = G__18982;
not_found = G__18983;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__18988 = coll;
if(G__18988){
var bit__4446__auto__ = (G__18988.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4446__auto__) || (G__18988.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18989 = coll;
if(G__18989){
var bit__4453__auto__ = (G__18989.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4453__auto__) || (G__18989.cljs$core$ISeq$)){
return true;
} else {
if((!G__18989.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18989);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18989);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__18990 = coll;
if(G__18990){
var bit__4446__auto__ = (G__18990.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4446__auto__) || (G__18990.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__18991 = coll;
if(G__18991){
var bit__4453__auto__ = (G__18991.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4453__auto__) || (G__18991.cljs$core$ISeq$)){
return true;
} else {
if((!G__18991.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18991);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__18991);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__18992 = (n__$1 - (1));
var G__18993 = cljs.core.rest(xs);
n__$1 = G__18992;
xs = G__18993;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__18996 = o;
if(G__18996){
var bit__4446__auto__ = (G__18996.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4446__auto__) || (G__18996.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__18997 = o;
if(G__18997){
var bit__4446__auto__ = (G__18997.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4446__auto__) || (G__18997.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__19001__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__19002 = ret;
var G__19003 = cljs.core.first(kvs);
var G__19004 = cljs.core.second(kvs);
var G__19005 = cljs.core.nnext(kvs);
coll = G__19002;
k = G__19003;
v = G__19004;
kvs = G__19005;
continue;
} else {
return ret;
}
break;
}
};
var G__19001 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19006__i = 0, G__19006__a = new Array(arguments.length -  3);
while (G__19006__i < G__19006__a.length) {G__19006__a[G__19006__i] = arguments[G__19006__i + 3]; ++G__19006__i;}
  kvs = new cljs.core.IndexedSeq(G__19006__a,0);
} 
return G__19001__delegate.call(this,coll,k,v,kvs);};
G__19001.cljs$lang$maxFixedArity = 3;
G__19001.cljs$lang$applyTo = (function (arglist__19007){
var coll = cljs.core.first(arglist__19007);
arglist__19007 = cljs.core.next(arglist__19007);
var k = cljs.core.first(arglist__19007);
arglist__19007 = cljs.core.next(arglist__19007);
var v = cljs.core.first(arglist__19007);
var kvs = cljs.core.rest(arglist__19007);
return G__19001__delegate(coll,k,v,kvs);
});
G__19001.cljs$core$IFn$_invoke$arity$variadic = G__19001__delegate;
return G__19001;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__19008 = null;
if (arguments.length > 3) {
var G__19009__i = 0, G__19009__a = new Array(arguments.length -  3);
while (G__19009__i < G__19009__a.length) {G__19009__a[G__19009__i] = arguments[G__19009__i + 3]; ++G__19009__i;}
G__19008 = new cljs.core.IndexedSeq(G__19009__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__19008);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__19012__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19013 = ret;
var G__19014 = cljs.core.first(ks);
var G__19015 = cljs.core.next(ks);
coll = G__19013;
k = G__19014;
ks = G__19015;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19012 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19016__i = 0, G__19016__a = new Array(arguments.length -  2);
while (G__19016__i < G__19016__a.length) {G__19016__a[G__19016__i] = arguments[G__19016__i + 2]; ++G__19016__i;}
  ks = new cljs.core.IndexedSeq(G__19016__a,0);
} 
return G__19012__delegate.call(this,coll,k,ks);};
G__19012.cljs$lang$maxFixedArity = 2;
G__19012.cljs$lang$applyTo = (function (arglist__19017){
var coll = cljs.core.first(arglist__19017);
arglist__19017 = cljs.core.next(arglist__19017);
var k = cljs.core.first(arglist__19017);
var ks = cljs.core.rest(arglist__19017);
return G__19012__delegate(coll,k,ks);
});
G__19012.cljs$core$IFn$_invoke$arity$variadic = G__19012__delegate;
return G__19012;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__19018 = null;
if (arguments.length > 2) {
var G__19019__i = 0, G__19019__a = new Array(arguments.length -  2);
while (G__19019__i < G__19019__a.length) {G__19019__a[G__19019__i] = arguments[G__19019__i + 2]; ++G__19019__i;}
G__19018 = new cljs.core.IndexedSeq(G__19019__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19018);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3772__auto__ = (function (){var G__19024 = f;
return goog.isFunction(G__19024);
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__19025 = f;
if(G__19025){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto____$1 = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
return G__19025.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__19025.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19025);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19025);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__19491 = null;
var G__19491__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__19491__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19027 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19027) : self__.afn.call(null,G__19027));
});
var G__19491__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19028 = a;
var G__19029 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19028,G__19029) : self__.afn.call(null,G__19028,G__19029));
});
var G__19491__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19030 = a;
var G__19031 = b;
var G__19032 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19030,G__19031,G__19032) : self__.afn.call(null,G__19030,G__19031,G__19032));
});
var G__19491__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19033 = a;
var G__19034 = b;
var G__19035 = c;
var G__19036 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19033,G__19034,G__19035,G__19036) : self__.afn.call(null,G__19033,G__19034,G__19035,G__19036));
});
var G__19491__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19037 = a;
var G__19038 = b;
var G__19039 = c;
var G__19040 = d;
var G__19041 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19037,G__19038,G__19039,G__19040,G__19041) : self__.afn.call(null,G__19037,G__19038,G__19039,G__19040,G__19041));
});
var G__19491__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19042 = a;
var G__19043 = b;
var G__19044 = c;
var G__19045 = d;
var G__19046 = e;
var G__19047 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19042,G__19043,G__19044,G__19045,G__19046,G__19047) : self__.afn.call(null,G__19042,G__19043,G__19044,G__19045,G__19046,G__19047));
});
var G__19491__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19048 = a;
var G__19049 = b;
var G__19050 = c;
var G__19051 = d;
var G__19052 = e;
var G__19053 = f;
var G__19054 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19048,G__19049,G__19050,G__19051,G__19052,G__19053,G__19054) : self__.afn.call(null,G__19048,G__19049,G__19050,G__19051,G__19052,G__19053,G__19054));
});
var G__19491__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19055 = a;
var G__19056 = b;
var G__19057 = c;
var G__19058 = d;
var G__19059 = e;
var G__19060 = f;
var G__19061 = g;
var G__19062 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19055,G__19056,G__19057,G__19058,G__19059,G__19060,G__19061,G__19062) : self__.afn.call(null,G__19055,G__19056,G__19057,G__19058,G__19059,G__19060,G__19061,G__19062));
});
var G__19491__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19063 = a;
var G__19064 = b;
var G__19065 = c;
var G__19066 = d;
var G__19067 = e;
var G__19068 = f;
var G__19069 = g;
var G__19070 = h;
var G__19071 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19063,G__19064,G__19065,G__19066,G__19067,G__19068,G__19069,G__19070,G__19071) : self__.afn.call(null,G__19063,G__19064,G__19065,G__19066,G__19067,G__19068,G__19069,G__19070,G__19071));
});
var G__19491__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19072 = a;
var G__19073 = b;
var G__19074 = c;
var G__19075 = d;
var G__19076 = e;
var G__19077 = f;
var G__19078 = g;
var G__19079 = h;
var G__19080 = i;
var G__19081 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19072,G__19073,G__19074,G__19075,G__19076,G__19077,G__19078,G__19079,G__19080,G__19081) : self__.afn.call(null,G__19072,G__19073,G__19074,G__19075,G__19076,G__19077,G__19078,G__19079,G__19080,G__19081));
});
var G__19491__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19082 = a;
var G__19083 = b;
var G__19084 = c;
var G__19085 = d;
var G__19086 = e;
var G__19087 = f;
var G__19088 = g;
var G__19089 = h;
var G__19090 = i;
var G__19091 = j;
var G__19092 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19082,G__19083,G__19084,G__19085,G__19086,G__19087,G__19088,G__19089,G__19090,G__19091,G__19092) : self__.afn.call(null,G__19082,G__19083,G__19084,G__19085,G__19086,G__19087,G__19088,G__19089,G__19090,G__19091,G__19092));
});
var G__19491__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19093 = a;
var G__19094 = b;
var G__19095 = c;
var G__19096 = d;
var G__19097 = e;
var G__19098 = f;
var G__19099 = g;
var G__19100 = h;
var G__19101 = i;
var G__19102 = j;
var G__19103 = k;
var G__19104 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19093,G__19094,G__19095,G__19096,G__19097,G__19098,G__19099,G__19100,G__19101,G__19102,G__19103,G__19104) : self__.afn.call(null,G__19093,G__19094,G__19095,G__19096,G__19097,G__19098,G__19099,G__19100,G__19101,G__19102,G__19103,G__19104));
});
var G__19491__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19105 = a;
var G__19106 = b;
var G__19107 = c;
var G__19108 = d;
var G__19109 = e;
var G__19110 = f;
var G__19111 = g;
var G__19112 = h;
var G__19113 = i;
var G__19114 = j;
var G__19115 = k;
var G__19116 = l;
var G__19117 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__19105,G__19106,G__19107,G__19108,G__19109,G__19110,G__19111,G__19112,G__19113,G__19114,G__19115,G__19116,G__19117) : self__.afn.call(null,G__19105,G__19106,G__19107,G__19108,G__19109,G__19110,G__19111,G__19112,G__19113,G__19114,G__19115,G__19116,G__19117));
});
var G__19491__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19118 = a;
var G__19119 = b;
var G__19120 = c;
var G__19121 = d;
var G__19122 = e;
var G__19123 = f;
var G__19124 = g;
var G__19125 = h;
var G__19126 = i;
var G__19127 = j;
var G__19128 = k;
var G__19129 = l;
var G__19130 = m;
var G__19131 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__19118,G__19119,G__19120,G__19121,G__19122,G__19123,G__19124,G__19125,G__19126,G__19127,G__19128,G__19129,G__19130,G__19131) : self__.afn.call(null,G__19118,G__19119,G__19120,G__19121,G__19122,G__19123,G__19124,G__19125,G__19126,G__19127,G__19128,G__19129,G__19130,G__19131));
});
var G__19491__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19132 = a;
var G__19133 = b;
var G__19134 = c;
var G__19135 = d;
var G__19136 = e;
var G__19137 = f;
var G__19138 = g;
var G__19139 = h;
var G__19140 = i;
var G__19141 = j;
var G__19142 = k;
var G__19143 = l;
var G__19144 = m;
var G__19145 = n;
var G__19146 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__19132,G__19133,G__19134,G__19135,G__19136,G__19137,G__19138,G__19139,G__19140,G__19141,G__19142,G__19143,G__19144,G__19145,G__19146) : self__.afn.call(null,G__19132,G__19133,G__19134,G__19135,G__19136,G__19137,G__19138,G__19139,G__19140,G__19141,G__19142,G__19143,G__19144,G__19145,G__19146));
});
var G__19491__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19147 = a;
var G__19148 = b;
var G__19149 = c;
var G__19150 = d;
var G__19151 = e;
var G__19152 = f;
var G__19153 = g;
var G__19154 = h;
var G__19155 = i;
var G__19156 = j;
var G__19157 = k;
var G__19158 = l;
var G__19159 = m;
var G__19160 = n;
var G__19161 = o;
var G__19162 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__19147,G__19148,G__19149,G__19150,G__19151,G__19152,G__19153,G__19154,G__19155,G__19156,G__19157,G__19158,G__19159,G__19160,G__19161,G__19162) : self__.afn.call(null,G__19147,G__19148,G__19149,G__19150,G__19151,G__19152,G__19153,G__19154,G__19155,G__19156,G__19157,G__19158,G__19159,G__19160,G__19161,G__19162));
});
var G__19491__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19163 = a;
var G__19164 = b;
var G__19165 = c;
var G__19166 = d;
var G__19167 = e;
var G__19168 = f;
var G__19169 = g;
var G__19170 = h;
var G__19171 = i;
var G__19172 = j;
var G__19173 = k;
var G__19174 = l;
var G__19175 = m;
var G__19176 = n;
var G__19177 = o;
var G__19178 = p;
var G__19179 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__19163,G__19164,G__19165,G__19166,G__19167,G__19168,G__19169,G__19170,G__19171,G__19172,G__19173,G__19174,G__19175,G__19176,G__19177,G__19178,G__19179) : self__.afn.call(null,G__19163,G__19164,G__19165,G__19166,G__19167,G__19168,G__19169,G__19170,G__19171,G__19172,G__19173,G__19174,G__19175,G__19176,G__19177,G__19178,G__19179));
});
var G__19491__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19180 = a;
var G__19181 = b;
var G__19182 = c;
var G__19183 = d;
var G__19184 = e;
var G__19185 = f;
var G__19186 = g;
var G__19187 = h;
var G__19188 = i;
var G__19189 = j;
var G__19190 = k;
var G__19191 = l;
var G__19192 = m;
var G__19193 = n;
var G__19194 = o;
var G__19195 = p;
var G__19196 = q;
var G__19197 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__19180,G__19181,G__19182,G__19183,G__19184,G__19185,G__19186,G__19187,G__19188,G__19189,G__19190,G__19191,G__19192,G__19193,G__19194,G__19195,G__19196,G__19197) : self__.afn.call(null,G__19180,G__19181,G__19182,G__19183,G__19184,G__19185,G__19186,G__19187,G__19188,G__19189,G__19190,G__19191,G__19192,G__19193,G__19194,G__19195,G__19196,G__19197));
});
var G__19491__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19198 = a;
var G__19199 = b;
var G__19200 = c;
var G__19201 = d;
var G__19202 = e;
var G__19203 = f;
var G__19204 = g;
var G__19205 = h;
var G__19206 = i;
var G__19207 = j;
var G__19208 = k;
var G__19209 = l;
var G__19210 = m;
var G__19211 = n;
var G__19212 = o;
var G__19213 = p;
var G__19214 = q;
var G__19215 = r;
var G__19216 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__19198,G__19199,G__19200,G__19201,G__19202,G__19203,G__19204,G__19205,G__19206,G__19207,G__19208,G__19209,G__19210,G__19211,G__19212,G__19213,G__19214,G__19215,G__19216) : self__.afn.call(null,G__19198,G__19199,G__19200,G__19201,G__19202,G__19203,G__19204,G__19205,G__19206,G__19207,G__19208,G__19209,G__19210,G__19211,G__19212,G__19213,G__19214,G__19215,G__19216));
});
var G__19491__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19217 = a;
var G__19218 = b;
var G__19219 = c;
var G__19220 = d;
var G__19221 = e;
var G__19222 = f;
var G__19223 = g;
var G__19224 = h;
var G__19225 = i;
var G__19226 = j;
var G__19227 = k;
var G__19228 = l;
var G__19229 = m;
var G__19230 = n;
var G__19231 = o;
var G__19232 = p;
var G__19233 = q;
var G__19234 = r;
var G__19235 = s;
var G__19236 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__19217,G__19218,G__19219,G__19220,G__19221,G__19222,G__19223,G__19224,G__19225,G__19226,G__19227,G__19228,G__19229,G__19230,G__19231,G__19232,G__19233,G__19234,G__19235,G__19236) : self__.afn.call(null,G__19217,G__19218,G__19219,G__19220,G__19221,G__19222,G__19223,G__19224,G__19225,G__19226,G__19227,G__19228,G__19229,G__19230,G__19231,G__19232,G__19233,G__19234,G__19235,G__19236));
});
var G__19491__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19237 = self__.afn;
var G__19238 = a;
var G__19239 = b;
var G__19240 = c;
var G__19241 = d;
var G__19242 = e;
var G__19243 = f;
var G__19244 = g;
var G__19245 = h;
var G__19246 = i;
var G__19247 = j;
var G__19248 = k;
var G__19249 = l;
var G__19250 = m;
var G__19251 = n;
var G__19252 = o;
var G__19253 = p;
var G__19254 = q;
var G__19255 = r;
var G__19256 = s;
var G__19257 = t;
var G__19258 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19237,G__19238,G__19239,G__19240,G__19241,G__19242,G__19243,G__19244,G__19245,G__19246,G__19247,G__19248,G__19249,G__19250,G__19251,G__19252,G__19253,G__19254,G__19255,G__19256,G__19257,G__19258) : cljs.core.apply.call(null,G__19237,G__19238,G__19239,G__19240,G__19241,G__19242,G__19243,G__19244,G__19245,G__19246,G__19247,G__19248,G__19249,G__19250,G__19251,G__19252,G__19253,G__19254,G__19255,G__19256,G__19257,G__19258));
});
G__19491 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19491__1.call(this,self__);
case 2:
return G__19491__2.call(this,self__,a);
case 3:
return G__19491__3.call(this,self__,a,b);
case 4:
return G__19491__4.call(this,self__,a,b,c);
case 5:
return G__19491__5.call(this,self__,a,b,c,d);
case 6:
return G__19491__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19491__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19491__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19491__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19491__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19491__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19491__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19491__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19491__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19491__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19491__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19491__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19491__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19491__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19491__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19491__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19491__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19491.cljs$core$IFn$_invoke$arity$1 = G__19491__1;
G__19491.cljs$core$IFn$_invoke$arity$2 = G__19491__2;
G__19491.cljs$core$IFn$_invoke$arity$3 = G__19491__3;
G__19491.cljs$core$IFn$_invoke$arity$4 = G__19491__4;
G__19491.cljs$core$IFn$_invoke$arity$5 = G__19491__5;
G__19491.cljs$core$IFn$_invoke$arity$6 = G__19491__6;
G__19491.cljs$core$IFn$_invoke$arity$7 = G__19491__7;
G__19491.cljs$core$IFn$_invoke$arity$8 = G__19491__8;
G__19491.cljs$core$IFn$_invoke$arity$9 = G__19491__9;
G__19491.cljs$core$IFn$_invoke$arity$10 = G__19491__10;
G__19491.cljs$core$IFn$_invoke$arity$11 = G__19491__11;
G__19491.cljs$core$IFn$_invoke$arity$12 = G__19491__12;
G__19491.cljs$core$IFn$_invoke$arity$13 = G__19491__13;
G__19491.cljs$core$IFn$_invoke$arity$14 = G__19491__14;
G__19491.cljs$core$IFn$_invoke$arity$15 = G__19491__15;
G__19491.cljs$core$IFn$_invoke$arity$16 = G__19491__16;
G__19491.cljs$core$IFn$_invoke$arity$17 = G__19491__17;
G__19491.cljs$core$IFn$_invoke$arity$18 = G__19491__18;
G__19491.cljs$core$IFn$_invoke$arity$19 = G__19491__19;
G__19491.cljs$core$IFn$_invoke$arity$20 = G__19491__20;
G__19491.cljs$core$IFn$_invoke$arity$21 = G__19491__21;
G__19491.cljs$core$IFn$_invoke$arity$22 = G__19491__22;
return G__19491;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args19026){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19026)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__19259 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19259) : self__.afn.call(null,G__19259));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__19260 = a;
var G__19261 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19260,G__19261) : self__.afn.call(null,G__19260,G__19261));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__19262 = a;
var G__19263 = b;
var G__19264 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19262,G__19263,G__19264) : self__.afn.call(null,G__19262,G__19263,G__19264));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__19265 = a;
var G__19266 = b;
var G__19267 = c;
var G__19268 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19265,G__19266,G__19267,G__19268) : self__.afn.call(null,G__19265,G__19266,G__19267,G__19268));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__19269 = a;
var G__19270 = b;
var G__19271 = c;
var G__19272 = d;
var G__19273 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19269,G__19270,G__19271,G__19272,G__19273) : self__.afn.call(null,G__19269,G__19270,G__19271,G__19272,G__19273));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__19274 = a;
var G__19275 = b;
var G__19276 = c;
var G__19277 = d;
var G__19278 = e;
var G__19279 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19274,G__19275,G__19276,G__19277,G__19278,G__19279) : self__.afn.call(null,G__19274,G__19275,G__19276,G__19277,G__19278,G__19279));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__19280 = a;
var G__19281 = b;
var G__19282 = c;
var G__19283 = d;
var G__19284 = e;
var G__19285 = f;
var G__19286 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19280,G__19281,G__19282,G__19283,G__19284,G__19285,G__19286) : self__.afn.call(null,G__19280,G__19281,G__19282,G__19283,G__19284,G__19285,G__19286));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__19287 = a;
var G__19288 = b;
var G__19289 = c;
var G__19290 = d;
var G__19291 = e;
var G__19292 = f;
var G__19293 = g;
var G__19294 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19287,G__19288,G__19289,G__19290,G__19291,G__19292,G__19293,G__19294) : self__.afn.call(null,G__19287,G__19288,G__19289,G__19290,G__19291,G__19292,G__19293,G__19294));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__19295 = a;
var G__19296 = b;
var G__19297 = c;
var G__19298 = d;
var G__19299 = e;
var G__19300 = f;
var G__19301 = g;
var G__19302 = h;
var G__19303 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19295,G__19296,G__19297,G__19298,G__19299,G__19300,G__19301,G__19302,G__19303) : self__.afn.call(null,G__19295,G__19296,G__19297,G__19298,G__19299,G__19300,G__19301,G__19302,G__19303));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__19304 = a;
var G__19305 = b;
var G__19306 = c;
var G__19307 = d;
var G__19308 = e;
var G__19309 = f;
var G__19310 = g;
var G__19311 = h;
var G__19312 = i;
var G__19313 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19304,G__19305,G__19306,G__19307,G__19308,G__19309,G__19310,G__19311,G__19312,G__19313) : self__.afn.call(null,G__19304,G__19305,G__19306,G__19307,G__19308,G__19309,G__19310,G__19311,G__19312,G__19313));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__19314 = a;
var G__19315 = b;
var G__19316 = c;
var G__19317 = d;
var G__19318 = e;
var G__19319 = f;
var G__19320 = g;
var G__19321 = h;
var G__19322 = i;
var G__19323 = j;
var G__19324 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19314,G__19315,G__19316,G__19317,G__19318,G__19319,G__19320,G__19321,G__19322,G__19323,G__19324) : self__.afn.call(null,G__19314,G__19315,G__19316,G__19317,G__19318,G__19319,G__19320,G__19321,G__19322,G__19323,G__19324));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__19325 = a;
var G__19326 = b;
var G__19327 = c;
var G__19328 = d;
var G__19329 = e;
var G__19330 = f;
var G__19331 = g;
var G__19332 = h;
var G__19333 = i;
var G__19334 = j;
var G__19335 = k;
var G__19336 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19325,G__19326,G__19327,G__19328,G__19329,G__19330,G__19331,G__19332,G__19333,G__19334,G__19335,G__19336) : self__.afn.call(null,G__19325,G__19326,G__19327,G__19328,G__19329,G__19330,G__19331,G__19332,G__19333,G__19334,G__19335,G__19336));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__19337 = a;
var G__19338 = b;
var G__19339 = c;
var G__19340 = d;
var G__19341 = e;
var G__19342 = f;
var G__19343 = g;
var G__19344 = h;
var G__19345 = i;
var G__19346 = j;
var G__19347 = k;
var G__19348 = l;
var G__19349 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__19337,G__19338,G__19339,G__19340,G__19341,G__19342,G__19343,G__19344,G__19345,G__19346,G__19347,G__19348,G__19349) : self__.afn.call(null,G__19337,G__19338,G__19339,G__19340,G__19341,G__19342,G__19343,G__19344,G__19345,G__19346,G__19347,G__19348,G__19349));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__19350 = a;
var G__19351 = b;
var G__19352 = c;
var G__19353 = d;
var G__19354 = e;
var G__19355 = f;
var G__19356 = g;
var G__19357 = h;
var G__19358 = i;
var G__19359 = j;
var G__19360 = k;
var G__19361 = l;
var G__19362 = m;
var G__19363 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__19350,G__19351,G__19352,G__19353,G__19354,G__19355,G__19356,G__19357,G__19358,G__19359,G__19360,G__19361,G__19362,G__19363) : self__.afn.call(null,G__19350,G__19351,G__19352,G__19353,G__19354,G__19355,G__19356,G__19357,G__19358,G__19359,G__19360,G__19361,G__19362,G__19363));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__19364 = a;
var G__19365 = b;
var G__19366 = c;
var G__19367 = d;
var G__19368 = e;
var G__19369 = f;
var G__19370 = g;
var G__19371 = h;
var G__19372 = i;
var G__19373 = j;
var G__19374 = k;
var G__19375 = l;
var G__19376 = m;
var G__19377 = n;
var G__19378 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__19364,G__19365,G__19366,G__19367,G__19368,G__19369,G__19370,G__19371,G__19372,G__19373,G__19374,G__19375,G__19376,G__19377,G__19378) : self__.afn.call(null,G__19364,G__19365,G__19366,G__19367,G__19368,G__19369,G__19370,G__19371,G__19372,G__19373,G__19374,G__19375,G__19376,G__19377,G__19378));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__19379 = a;
var G__19380 = b;
var G__19381 = c;
var G__19382 = d;
var G__19383 = e;
var G__19384 = f;
var G__19385 = g;
var G__19386 = h;
var G__19387 = i;
var G__19388 = j;
var G__19389 = k;
var G__19390 = l;
var G__19391 = m;
var G__19392 = n;
var G__19393 = o;
var G__19394 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__19379,G__19380,G__19381,G__19382,G__19383,G__19384,G__19385,G__19386,G__19387,G__19388,G__19389,G__19390,G__19391,G__19392,G__19393,G__19394) : self__.afn.call(null,G__19379,G__19380,G__19381,G__19382,G__19383,G__19384,G__19385,G__19386,G__19387,G__19388,G__19389,G__19390,G__19391,G__19392,G__19393,G__19394));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__19395 = a;
var G__19396 = b;
var G__19397 = c;
var G__19398 = d;
var G__19399 = e;
var G__19400 = f;
var G__19401 = g;
var G__19402 = h;
var G__19403 = i;
var G__19404 = j;
var G__19405 = k;
var G__19406 = l;
var G__19407 = m;
var G__19408 = n;
var G__19409 = o;
var G__19410 = p;
var G__19411 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__19395,G__19396,G__19397,G__19398,G__19399,G__19400,G__19401,G__19402,G__19403,G__19404,G__19405,G__19406,G__19407,G__19408,G__19409,G__19410,G__19411) : self__.afn.call(null,G__19395,G__19396,G__19397,G__19398,G__19399,G__19400,G__19401,G__19402,G__19403,G__19404,G__19405,G__19406,G__19407,G__19408,G__19409,G__19410,G__19411));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__19412 = a;
var G__19413 = b;
var G__19414 = c;
var G__19415 = d;
var G__19416 = e;
var G__19417 = f;
var G__19418 = g;
var G__19419 = h;
var G__19420 = i;
var G__19421 = j;
var G__19422 = k;
var G__19423 = l;
var G__19424 = m;
var G__19425 = n;
var G__19426 = o;
var G__19427 = p;
var G__19428 = q;
var G__19429 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__19412,G__19413,G__19414,G__19415,G__19416,G__19417,G__19418,G__19419,G__19420,G__19421,G__19422,G__19423,G__19424,G__19425,G__19426,G__19427,G__19428,G__19429) : self__.afn.call(null,G__19412,G__19413,G__19414,G__19415,G__19416,G__19417,G__19418,G__19419,G__19420,G__19421,G__19422,G__19423,G__19424,G__19425,G__19426,G__19427,G__19428,G__19429));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__19430 = a;
var G__19431 = b;
var G__19432 = c;
var G__19433 = d;
var G__19434 = e;
var G__19435 = f;
var G__19436 = g;
var G__19437 = h;
var G__19438 = i;
var G__19439 = j;
var G__19440 = k;
var G__19441 = l;
var G__19442 = m;
var G__19443 = n;
var G__19444 = o;
var G__19445 = p;
var G__19446 = q;
var G__19447 = r;
var G__19448 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__19430,G__19431,G__19432,G__19433,G__19434,G__19435,G__19436,G__19437,G__19438,G__19439,G__19440,G__19441,G__19442,G__19443,G__19444,G__19445,G__19446,G__19447,G__19448) : self__.afn.call(null,G__19430,G__19431,G__19432,G__19433,G__19434,G__19435,G__19436,G__19437,G__19438,G__19439,G__19440,G__19441,G__19442,G__19443,G__19444,G__19445,G__19446,G__19447,G__19448));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__19449 = a;
var G__19450 = b;
var G__19451 = c;
var G__19452 = d;
var G__19453 = e;
var G__19454 = f;
var G__19455 = g;
var G__19456 = h;
var G__19457 = i;
var G__19458 = j;
var G__19459 = k;
var G__19460 = l;
var G__19461 = m;
var G__19462 = n;
var G__19463 = o;
var G__19464 = p;
var G__19465 = q;
var G__19466 = r;
var G__19467 = s;
var G__19468 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__19449,G__19450,G__19451,G__19452,G__19453,G__19454,G__19455,G__19456,G__19457,G__19458,G__19459,G__19460,G__19461,G__19462,G__19463,G__19464,G__19465,G__19466,G__19467,G__19468) : self__.afn.call(null,G__19449,G__19450,G__19451,G__19452,G__19453,G__19454,G__19455,G__19456,G__19457,G__19458,G__19459,G__19460,G__19461,G__19462,G__19463,G__19464,G__19465,G__19466,G__19467,G__19468));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__19469 = self__.afn;
var G__19470 = a;
var G__19471 = b;
var G__19472 = c;
var G__19473 = d;
var G__19474 = e;
var G__19475 = f;
var G__19476 = g;
var G__19477 = h;
var G__19478 = i;
var G__19479 = j;
var G__19480 = k;
var G__19481 = l;
var G__19482 = m;
var G__19483 = n;
var G__19484 = o;
var G__19485 = p;
var G__19486 = q;
var G__19487 = r;
var G__19488 = s;
var G__19489 = t;
var G__19490 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19469,G__19470,G__19471,G__19472,G__19473,G__19474,G__19475,G__19476,G__19477,G__19478,G__19479,G__19480,G__19481,G__19482,G__19483,G__19484,G__19485,G__19486,G__19487,G__19488,G__19489,G__19490) : cljs.core.apply.call(null,G__19469,G__19470,G__19471,G__19472,G__19473,G__19474,G__19475,G__19476,G__19477,G__19478,G__19479,G__19480,G__19481,G__19482,G__19483,G__19484,G__19485,G__19486,G__19487,G__19488,G__19489,G__19490));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__19495 = o;
if(G__19495){
var bit__4453__auto__ = (G__19495.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4453__auto__) || (G__19495.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__19495.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__19495);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__19495);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3760__auto__ = !((o == null));
if(and__3760__auto__){
var G__19499 = o;
if(G__19499){
var bit__4453__auto__ = (G__19499.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4453__auto__) || (G__19499.cljs$core$IMeta$)){
return true;
} else {
if((!G__19499.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19499);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19499);
}
} else {
return and__3760__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__19502__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19503 = ret;
var G__19504 = cljs.core.first(ks);
var G__19505 = cljs.core.next(ks);
coll = G__19503;
k = G__19504;
ks = G__19505;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19502 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19506__i = 0, G__19506__a = new Array(arguments.length -  2);
while (G__19506__i < G__19506__a.length) {G__19506__a[G__19506__i] = arguments[G__19506__i + 2]; ++G__19506__i;}
  ks = new cljs.core.IndexedSeq(G__19506__a,0);
} 
return G__19502__delegate.call(this,coll,k,ks);};
G__19502.cljs$lang$maxFixedArity = 2;
G__19502.cljs$lang$applyTo = (function (arglist__19507){
var coll = cljs.core.first(arglist__19507);
arglist__19507 = cljs.core.next(arglist__19507);
var k = cljs.core.first(arglist__19507);
var ks = cljs.core.rest(arglist__19507);
return G__19502__delegate(coll,k,ks);
});
G__19502.cljs$core$IFn$_invoke$arity$variadic = G__19502__delegate;
return G__19502;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__19508 = null;
if (arguments.length > 2) {
var G__19509__i = 0, G__19509__a = new Array(arguments.length -  2);
while (G__19509__i < G__19509__a.length) {G__19509__a[G__19509__i] = arguments[G__19509__i + 2]; ++G__19509__i;}
G__19508 = new cljs.core.IndexedSeq(G__19509__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19508);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19511 = x;
if(G__19511){
var bit__4453__auto__ = (G__19511.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4453__auto__) || (G__19511.cljs$core$ICollection$)){
return true;
} else {
if((!G__19511.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__19511);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__19511);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19513 = x;
if(G__19513){
var bit__4453__auto__ = (G__19513.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4453__auto__) || (G__19513.cljs$core$ISet$)){
return true;
} else {
if((!G__19513.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__19513);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__19513);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__19515 = x;
if(G__19515){
var bit__4453__auto__ = (G__19515.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4453__auto__) || (G__19515.cljs$core$IAssociative$)){
return true;
} else {
if((!G__19515.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__19515);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__19515);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__19517 = x;
if(G__19517){
var bit__4453__auto__ = (G__19517.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4453__auto__) || (G__19517.cljs$core$ISequential$)){
return true;
} else {
if((!G__19517.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19517);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19517);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__19519 = x;
if(G__19519){
var bit__4453__auto__ = (G__19519.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4453__auto__) || (G__19519.cljs$core$ISorted$)){
return true;
} else {
if((!G__19519.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19519);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19519);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__19521 = x;
if(G__19521){
var bit__4453__auto__ = (G__19521.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4453__auto__) || (G__19521.cljs$core$IReduce$)){
return true;
} else {
if((!G__19521.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19521);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19521);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19523 = x;
if(G__19523){
var bit__4453__auto__ = (G__19523.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4453__auto__) || (G__19523.cljs$core$IMap$)){
return true;
} else {
if((!G__19523.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19523);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19523);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__19525 = x;
if(G__19525){
var bit__4453__auto__ = (G__19525.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4453__auto__) || (G__19525.cljs$core$IVector$)){
return true;
} else {
if((!G__19525.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19525);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19525);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__19527 = x;
if(G__19527){
var bit__4446__auto__ = (G__19527.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4446__auto__) || (G__19527.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj19533 = {};
return obj19533;
});
var js_obj__1 = (function() { 
var G__19536__delegate = function (keyvals){
var G__19534 = goog.object.create;
var G__19535 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__19534,G__19535) : cljs.core.apply.call(null,G__19534,G__19535));
};
var G__19536 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__19537__i = 0, G__19537__a = new Array(arguments.length -  0);
while (G__19537__i < G__19537__a.length) {G__19537__a[G__19537__i] = arguments[G__19537__i + 0]; ++G__19537__i;}
  keyvals = new cljs.core.IndexedSeq(G__19537__a,0);
} 
return G__19536__delegate.call(this,keyvals);};
G__19536.cljs$lang$maxFixedArity = 0;
G__19536.cljs$lang$applyTo = (function (arglist__19538){
var keyvals = cljs.core.seq(arglist__19538);
return G__19536__delegate(keyvals);
});
G__19536.cljs$core$IFn$_invoke$arity$variadic = G__19536__delegate;
return G__19536;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__19539 = null;
if (arguments.length > 0) {
var G__19540__i = 0, G__19540__a = new Array(arguments.length -  0);
while (G__19540__i < G__19540__a.length) {G__19540__a[G__19540__i] = arguments[G__19540__i + 0]; ++G__19540__i;}
G__19539 = new cljs.core.IndexedSeq(G__19540__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__19539);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__19543_19545 = obj;
var G__19544_19546 = ((function (G__19543_19545,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__19543_19545,keys))
;
goog.object.forEach(G__19543_19545,G__19544_19546);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19547 = (i__$1 + (1));
var G__19548 = (j__$1 + (1));
var G__19549 = (len__$1 - (1));
i__$1 = G__19547;
j__$1 = G__19548;
len__$1 = G__19549;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19550 = (i__$1 - (1));
var G__19551 = (j__$1 - (1));
var G__19552 = (len__$1 - (1));
i__$1 = G__19550;
j__$1 = G__19551;
len__$1 = G__19552;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj19554 = {};
return obj19554;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__19556 = s;
if(G__19556){
var bit__4453__auto__ = (G__19556.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4453__auto__) || (G__19556.cljs$core$ISeq$)){
return true;
} else {
if((!G__19556.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19556);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19556);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__19558 = s;
if(G__19558){
var bit__4453__auto__ = (G__19558.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4453__auto__) || (G__19558.cljs$core$ISeqable$)){
return true;
} else {
if((!G__19558.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19558);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19558);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3772__auto__ = cljs.core.fn_QMARK_(f);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var G__19562 = f;
if(G__19562){
var bit__4453__auto__ = (G__19562.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4453__auto__) || (G__19562.cljs$core$IFn$)){
return true;
} else {
if((!G__19562.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19562);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19562);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__19575 = n;
return isNaN(G__19575);
})())) && (!((n === Infinity))) && (((function (){var G__19576 = n;
return parseFloat(G__19576);
})() === (function (){var G__19577 = n;
var G__19578 = (10);
return parseInt(G__19577,G__19578);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__19579__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__19580 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__19581 = etc;
s = G__19580;
xs = G__19581;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__19579 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19582__i = 0, G__19582__a = new Array(arguments.length -  2);
while (G__19582__i < G__19582__a.length) {G__19582__a[G__19582__i] = arguments[G__19582__i + 2]; ++G__19582__i;}
  more = new cljs.core.IndexedSeq(G__19582__a,0);
} 
return G__19579__delegate.call(this,x,y,more);};
G__19579.cljs$lang$maxFixedArity = 2;
G__19579.cljs$lang$applyTo = (function (arglist__19583){
var x = cljs.core.first(arglist__19583);
arglist__19583 = cljs.core.next(arglist__19583);
var y = cljs.core.first(arglist__19583);
var more = cljs.core.rest(arglist__19583);
return G__19579__delegate(x,y,more);
});
G__19579.cljs$core$IFn$_invoke$arity$variadic = G__19579__delegate;
return G__19579;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__19584 = null;
if (arguments.length > 2) {
var G__19585__i = 0, G__19585__a = new Array(arguments.length -  2);
while (G__19585__i < G__19585__a.length) {G__19585__a[G__19585__i] = arguments[G__19585__i + 2]; ++G__19585__i;}
G__19584 = new cljs.core.IndexedSeq(G__19585__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19584);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__19589 = x;
if(G__19589){
var bit__4446__auto__ = (G__19589.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4446__auto__) || (G__19589.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__19590 = x;
var G__19591 = y;
return goog.array.defaultCompare(G__19590,G__19591);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__19596 = xs;
var G__19597 = ys;
var G__19598 = len;
var G__19599 = (n + (1));
xs = G__19596;
ys = G__19597;
len = G__19598;
n = G__19599;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__19604 = x;
var G__19605 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19604,G__19605) : f.call(null,G__19604,G__19605));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__19606 = y;
var G__19607 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19606,G__19607) : f.call(null,G__19606,G__19607));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__19613 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__19613) : cljs.core.to_array.call(null,G__19613));
})();
var G__19614_19616 = a;
var G__19615_19617 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__19614_19616,G__19615_19617);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__19623 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19623) : keyfn.call(null,G__19623));
})(),(function (){var G__19624 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19624) : keyfn.call(null,G__19624));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__19630 = f;
var G__19631 = cljs.core.first(s);
var G__19632 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__19630,G__19631,G__19632) : cljs.core.reduce.call(null,G__19630,G__19631,G__19632));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__19633 = val__$1;
var G__19634 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19633,G__19634) : f.call(null,G__19633,G__19634));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19635 = nval;
var G__19636 = cljs.core.next(coll__$1);
val__$1 = G__19635;
coll__$1 = G__19636;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__19640 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__19640) : cljs.core.to_array.call(null,G__19640));
})();
var G__19641_19643 = a;
goog.array.shuffle(G__19641_19643);

var G__19642 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__19642) : cljs.core.vec.call(null,G__19642));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__19646 = coll;
if(G__19646){
var bit__4446__auto__ = (G__19646.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4446__auto__) || (G__19646.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__19647 = coll;
if(G__19647){
var bit__4446__auto__ = (G__19647.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4446__auto__) || (G__19647.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__19656 = null;
var G__19656__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__19656__1 = (function (x){
var G__19653 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__19653) : cf.call(null,G__19653));
});
var G__19656__2 = (function (x,y){
var G__19654 = x;
var G__19655 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19654,G__19655) : f.call(null,G__19654,G__19655));
});
G__19656 = function(x,y){
switch(arguments.length){
case 0:
return G__19656__0.call(this);
case 1:
return G__19656__1.call(this,x);
case 2:
return G__19656__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19656.cljs$core$IFn$_invoke$arity$0 = G__19656__0;
G__19656.cljs$core$IFn$_invoke$arity$1 = G__19656__1;
G__19656.cljs$core$IFn$_invoke$arity$2 = G__19656__2;
return G__19656;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__19663 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19663) : xform.call(null,G__19663));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__19664 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__19664) : f__$1.call(null,G__19664));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__19665__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__19665 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19666__i = 0, G__19666__a = new Array(arguments.length -  2);
while (G__19666__i < G__19666__a.length) {G__19666__a[G__19666__i] = arguments[G__19666__i + 2]; ++G__19666__i;}
  more = new cljs.core.IndexedSeq(G__19666__a,0);
} 
return G__19665__delegate.call(this,x,y,more);};
G__19665.cljs$lang$maxFixedArity = 2;
G__19665.cljs$lang$applyTo = (function (arglist__19667){
var x = cljs.core.first(arglist__19667);
arglist__19667 = cljs.core.next(arglist__19667);
var y = cljs.core.first(arglist__19667);
var more = cljs.core.rest(arglist__19667);
return G__19665__delegate(x,y,more);
});
G__19665.cljs$core$IFn$_invoke$arity$variadic = G__19665__delegate;
return G__19665;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__19668 = null;
if (arguments.length > 2) {
var G__19669__i = 0, G__19669__a = new Array(arguments.length -  2);
while (G__19669__i < G__19669__a.length) {G__19669__a[G__19669__i] = arguments[G__19669__i + 2]; ++G__19669__i;}
G__19668 = new cljs.core.IndexedSeq(G__19669__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19668);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__19670__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__19670 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19671__i = 0, G__19671__a = new Array(arguments.length -  2);
while (G__19671__i < G__19671__a.length) {G__19671__a[G__19671__i] = arguments[G__19671__i + 2]; ++G__19671__i;}
  more = new cljs.core.IndexedSeq(G__19671__a,0);
} 
return G__19670__delegate.call(this,x,y,more);};
G__19670.cljs$lang$maxFixedArity = 2;
G__19670.cljs$lang$applyTo = (function (arglist__19672){
var x = cljs.core.first(arglist__19672);
arglist__19672 = cljs.core.next(arglist__19672);
var y = cljs.core.first(arglist__19672);
var more = cljs.core.rest(arglist__19672);
return G__19670__delegate(x,y,more);
});
G__19670.cljs$core$IFn$_invoke$arity$variadic = G__19670__delegate;
return G__19670;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__19673 = null;
if (arguments.length > 2) {
var G__19674__i = 0, G__19674__a = new Array(arguments.length -  2);
while (G__19674__i < G__19674__a.length) {G__19674__a[G__19674__i] = arguments[G__19674__i + 2]; ++G__19674__i;}
G__19673 = new cljs.core.IndexedSeq(G__19674__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19673);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__19675__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__19675 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19676__i = 0, G__19676__a = new Array(arguments.length -  2);
while (G__19676__i < G__19676__a.length) {G__19676__a[G__19676__i] = arguments[G__19676__i + 2]; ++G__19676__i;}
  more = new cljs.core.IndexedSeq(G__19676__a,0);
} 
return G__19675__delegate.call(this,x,y,more);};
G__19675.cljs$lang$maxFixedArity = 2;
G__19675.cljs$lang$applyTo = (function (arglist__19677){
var x = cljs.core.first(arglist__19677);
arglist__19677 = cljs.core.next(arglist__19677);
var y = cljs.core.first(arglist__19677);
var more = cljs.core.rest(arglist__19677);
return G__19675__delegate(x,y,more);
});
G__19675.cljs$core$IFn$_invoke$arity$variadic = G__19675__delegate;
return G__19675;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__19678 = null;
if (arguments.length > 2) {
var G__19679__i = 0, G__19679__a = new Array(arguments.length -  2);
while (G__19679__i < G__19679__a.length) {G__19679__a[G__19679__i] = arguments[G__19679__i + 2]; ++G__19679__i;}
G__19678 = new cljs.core.IndexedSeq(G__19679__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19678);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__19684__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19684 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19685__i = 0, G__19685__a = new Array(arguments.length -  2);
while (G__19685__i < G__19685__a.length) {G__19685__a[G__19685__i] = arguments[G__19685__i + 2]; ++G__19685__i;}
  more = new cljs.core.IndexedSeq(G__19685__a,0);
} 
return G__19684__delegate.call(this,x,y,more);};
G__19684.cljs$lang$maxFixedArity = 2;
G__19684.cljs$lang$applyTo = (function (arglist__19686){
var x = cljs.core.first(arglist__19686);
arglist__19686 = cljs.core.next(arglist__19686);
var y = cljs.core.first(arglist__19686);
var more = cljs.core.rest(arglist__19686);
return G__19684__delegate(x,y,more);
});
G__19684.cljs$core$IFn$_invoke$arity$variadic = G__19684__delegate;
return G__19684;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__19687 = null;
if (arguments.length > 2) {
var G__19688__i = 0, G__19688__a = new Array(arguments.length -  2);
while (G__19688__i < G__19688__a.length) {G__19688__a[G__19688__i] = arguments[G__19688__i + 2]; ++G__19688__i;}
G__19687 = new cljs.core.IndexedSeq(G__19688__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19687);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__19689__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__19690 = y;
var G__19691 = cljs.core.first(more);
var G__19692 = cljs.core.next(more);
x = G__19690;
y = G__19691;
more = G__19692;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19689 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19693__i = 0, G__19693__a = new Array(arguments.length -  2);
while (G__19693__i < G__19693__a.length) {G__19693__a[G__19693__i] = arguments[G__19693__i + 2]; ++G__19693__i;}
  more = new cljs.core.IndexedSeq(G__19693__a,0);
} 
return G__19689__delegate.call(this,x,y,more);};
G__19689.cljs$lang$maxFixedArity = 2;
G__19689.cljs$lang$applyTo = (function (arglist__19694){
var x = cljs.core.first(arglist__19694);
arglist__19694 = cljs.core.next(arglist__19694);
var y = cljs.core.first(arglist__19694);
var more = cljs.core.rest(arglist__19694);
return G__19689__delegate(x,y,more);
});
G__19689.cljs$core$IFn$_invoke$arity$variadic = G__19689__delegate;
return G__19689;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__19695 = null;
if (arguments.length > 2) {
var G__19696__i = 0, G__19696__a = new Array(arguments.length -  2);
while (G__19696__i < G__19696__a.length) {G__19696__a[G__19696__i] = arguments[G__19696__i + 2]; ++G__19696__i;}
G__19695 = new cljs.core.IndexedSeq(G__19696__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19695);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__19697__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__19698 = y;
var G__19699 = cljs.core.first(more);
var G__19700 = cljs.core.next(more);
x = G__19698;
y = G__19699;
more = G__19700;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19697 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19701__i = 0, G__19701__a = new Array(arguments.length -  2);
while (G__19701__i < G__19701__a.length) {G__19701__a[G__19701__i] = arguments[G__19701__i + 2]; ++G__19701__i;}
  more = new cljs.core.IndexedSeq(G__19701__a,0);
} 
return G__19697__delegate.call(this,x,y,more);};
G__19697.cljs$lang$maxFixedArity = 2;
G__19697.cljs$lang$applyTo = (function (arglist__19702){
var x = cljs.core.first(arglist__19702);
arglist__19702 = cljs.core.next(arglist__19702);
var y = cljs.core.first(arglist__19702);
var more = cljs.core.rest(arglist__19702);
return G__19697__delegate(x,y,more);
});
G__19697.cljs$core$IFn$_invoke$arity$variadic = G__19697__delegate;
return G__19697;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__19703 = null;
if (arguments.length > 2) {
var G__19704__i = 0, G__19704__a = new Array(arguments.length -  2);
while (G__19704__i < G__19704__a.length) {G__19704__a[G__19704__i] = arguments[G__19704__i + 2]; ++G__19704__i;}
G__19703 = new cljs.core.IndexedSeq(G__19704__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19703);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__19705__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__19706 = y;
var G__19707 = cljs.core.first(more);
var G__19708 = cljs.core.next(more);
x = G__19706;
y = G__19707;
more = G__19708;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19705 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19709__i = 0, G__19709__a = new Array(arguments.length -  2);
while (G__19709__i < G__19709__a.length) {G__19709__a[G__19709__i] = arguments[G__19709__i + 2]; ++G__19709__i;}
  more = new cljs.core.IndexedSeq(G__19709__a,0);
} 
return G__19705__delegate.call(this,x,y,more);};
G__19705.cljs$lang$maxFixedArity = 2;
G__19705.cljs$lang$applyTo = (function (arglist__19710){
var x = cljs.core.first(arglist__19710);
arglist__19710 = cljs.core.next(arglist__19710);
var y = cljs.core.first(arglist__19710);
var more = cljs.core.rest(arglist__19710);
return G__19705__delegate(x,y,more);
});
G__19705.cljs$core$IFn$_invoke$arity$variadic = G__19705__delegate;
return G__19705;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__19711 = null;
if (arguments.length > 2) {
var G__19712__i = 0, G__19712__a = new Array(arguments.length -  2);
while (G__19712__i < G__19712__a.length) {G__19712__a[G__19712__i] = arguments[G__19712__i + 2]; ++G__19712__i;}
G__19711 = new cljs.core.IndexedSeq(G__19712__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19711);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__19713__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__19714 = y;
var G__19715 = cljs.core.first(more);
var G__19716 = cljs.core.next(more);
x = G__19714;
y = G__19715;
more = G__19716;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19713 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19717__i = 0, G__19717__a = new Array(arguments.length -  2);
while (G__19717__i < G__19717__a.length) {G__19717__a[G__19717__i] = arguments[G__19717__i + 2]; ++G__19717__i;}
  more = new cljs.core.IndexedSeq(G__19717__a,0);
} 
return G__19713__delegate.call(this,x,y,more);};
G__19713.cljs$lang$maxFixedArity = 2;
G__19713.cljs$lang$applyTo = (function (arglist__19718){
var x = cljs.core.first(arglist__19718);
arglist__19718 = cljs.core.next(arglist__19718);
var y = cljs.core.first(arglist__19718);
var more = cljs.core.rest(arglist__19718);
return G__19713__delegate(x,y,more);
});
G__19713.cljs$core$IFn$_invoke$arity$variadic = G__19713__delegate;
return G__19713;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__19719 = null;
if (arguments.length > 2) {
var G__19720__i = 0, G__19720__a = new Array(arguments.length -  2);
while (G__19720__i < G__19720__a.length) {G__19720__a[G__19720__i] = arguments[G__19720__i + 2]; ++G__19720__i;}
G__19719 = new cljs.core.IndexedSeq(G__19720__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4089__auto__ = x;
var y__4090__auto__ = y;
return ((x__4089__auto__ > y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
});
var max__3 = (function() { 
var G__19721__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4089__auto__ = x;
var y__4090__auto__ = y;
return ((x__4089__auto__ > y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
})(),more);
};
var G__19721 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19722__i = 0, G__19722__a = new Array(arguments.length -  2);
while (G__19722__i < G__19722__a.length) {G__19722__a[G__19722__i] = arguments[G__19722__i + 2]; ++G__19722__i;}
  more = new cljs.core.IndexedSeq(G__19722__a,0);
} 
return G__19721__delegate.call(this,x,y,more);};
G__19721.cljs$lang$maxFixedArity = 2;
G__19721.cljs$lang$applyTo = (function (arglist__19723){
var x = cljs.core.first(arglist__19723);
arglist__19723 = cljs.core.next(arglist__19723);
var y = cljs.core.first(arglist__19723);
var more = cljs.core.rest(arglist__19723);
return G__19721__delegate(x,y,more);
});
G__19721.cljs$core$IFn$_invoke$arity$variadic = G__19721__delegate;
return G__19721;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__19724 = null;
if (arguments.length > 2) {
var G__19725__i = 0, G__19725__a = new Array(arguments.length -  2);
while (G__19725__i < G__19725__a.length) {G__19725__a[G__19725__i] = arguments[G__19725__i + 2]; ++G__19725__i;}
G__19724 = new cljs.core.IndexedSeq(G__19725__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19724);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4096__auto__ = x;
var y__4097__auto__ = y;
return ((x__4096__auto__ < y__4097__auto__) ? x__4096__auto__ : y__4097__auto__);
});
var min__3 = (function() { 
var G__19726__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4096__auto__ = x;
var y__4097__auto__ = y;
return ((x__4096__auto__ < y__4097__auto__) ? x__4096__auto__ : y__4097__auto__);
})(),more);
};
var G__19726 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19727__i = 0, G__19727__a = new Array(arguments.length -  2);
while (G__19727__i < G__19727__a.length) {G__19727__a[G__19727__i] = arguments[G__19727__i + 2]; ++G__19727__i;}
  more = new cljs.core.IndexedSeq(G__19727__a,0);
} 
return G__19726__delegate.call(this,x,y,more);};
G__19726.cljs$lang$maxFixedArity = 2;
G__19726.cljs$lang$applyTo = (function (arglist__19728){
var x = cljs.core.first(arglist__19728);
arglist__19728 = cljs.core.next(arglist__19728);
var y = cljs.core.first(arglist__19728);
var more = cljs.core.rest(arglist__19728);
return G__19726__delegate(x,y,more);
});
G__19726.cljs$core$IFn$_invoke$arity$variadic = G__19726__delegate;
return G__19726;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__19729 = null;
if (arguments.length > 2) {
var G__19730__i = 0, G__19730__a = new Array(arguments.length -  2);
while (G__19730__i < G__19730__a.length) {G__19730__a[G__19730__i] = arguments[G__19730__i + 2]; ++G__19730__i;}
G__19729 = new cljs.core.IndexedSeq(G__19730__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__19731__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__19731 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19732__i = 0, G__19732__a = new Array(arguments.length -  2);
while (G__19732__i < G__19732__a.length) {G__19732__a[G__19732__i] = arguments[G__19732__i + 2]; ++G__19732__i;}
  more = new cljs.core.IndexedSeq(G__19732__a,0);
} 
return G__19731__delegate.call(this,x,y,more);};
G__19731.cljs$lang$maxFixedArity = 2;
G__19731.cljs$lang$applyTo = (function (arglist__19733){
var x = cljs.core.first(arglist__19733);
arglist__19733 = cljs.core.next(arglist__19733);
var y = cljs.core.first(arglist__19733);
var more = cljs.core.rest(arglist__19733);
return G__19731__delegate(x,y,more);
});
G__19731.cljs$core$IFn$_invoke$arity$variadic = G__19731__delegate;
return G__19731;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__19734 = null;
if (arguments.length > 2) {
var G__19735__i = 0, G__19735__a = new Array(arguments.length -  2);
while (G__19735__i < G__19735__a.length) {G__19735__a[G__19735__i] = arguments[G__19735__i + 2]; ++G__19735__i;}
G__19734 = new cljs.core.IndexedSeq(G__19735__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19734);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__19736__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__19736 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19737__i = 0, G__19737__a = new Array(arguments.length -  2);
while (G__19737__i < G__19737__a.length) {G__19737__a[G__19737__i] = arguments[G__19737__i + 2]; ++G__19737__i;}
  more = new cljs.core.IndexedSeq(G__19737__a,0);
} 
return G__19736__delegate.call(this,x,y,more);};
G__19736.cljs$lang$maxFixedArity = 2;
G__19736.cljs$lang$applyTo = (function (arglist__19738){
var x = cljs.core.first(arglist__19738);
arglist__19738 = cljs.core.next(arglist__19738);
var y = cljs.core.first(arglist__19738);
var more = cljs.core.rest(arglist__19738);
return G__19736__delegate(x,y,more);
});
G__19736.cljs$core$IFn$_invoke$arity$variadic = G__19736__delegate;
return G__19736;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__19739 = null;
if (arguments.length > 2) {
var G__19740__i = 0, G__19740__a = new Array(arguments.length -  2);
while (G__19740__i < G__19740__a.length) {G__19740__a[G__19740__i] = arguments[G__19740__i + 2]; ++G__19740__i;}
G__19739 = new cljs.core.IndexedSeq(G__19740__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__19745__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19745 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19746__i = 0, G__19746__a = new Array(arguments.length -  2);
while (G__19746__i < G__19746__a.length) {G__19746__a[G__19746__i] = arguments[G__19746__i + 2]; ++G__19746__i;}
  more = new cljs.core.IndexedSeq(G__19746__a,0);
} 
return G__19745__delegate.call(this,x,y,more);};
G__19745.cljs$lang$maxFixedArity = 2;
G__19745.cljs$lang$applyTo = (function (arglist__19747){
var x = cljs.core.first(arglist__19747);
arglist__19747 = cljs.core.next(arglist__19747);
var y = cljs.core.first(arglist__19747);
var more = cljs.core.rest(arglist__19747);
return G__19745__delegate(x,y,more);
});
G__19745.cljs$core$IFn$_invoke$arity$variadic = G__19745__delegate;
return G__19745;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__19748 = null;
if (arguments.length > 2) {
var G__19749__i = 0, G__19749__a = new Array(arguments.length -  2);
while (G__19749__i < G__19749__a.length) {G__19749__a[G__19749__i] = arguments[G__19749__i + 2]; ++G__19749__i;}
G__19748 = new cljs.core.IndexedSeq(G__19749__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__19750__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__19750 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19751__i = 0, G__19751__a = new Array(arguments.length -  2);
while (G__19751__i < G__19751__a.length) {G__19751__a[G__19751__i] = arguments[G__19751__i + 2]; ++G__19751__i;}
  more = new cljs.core.IndexedSeq(G__19751__a,0);
} 
return G__19750__delegate.call(this,x,y,more);};
G__19750.cljs$lang$maxFixedArity = 2;
G__19750.cljs$lang$applyTo = (function (arglist__19752){
var x = cljs.core.first(arglist__19752);
arglist__19752 = cljs.core.next(arglist__19752);
var y = cljs.core.first(arglist__19752);
var more = cljs.core.rest(arglist__19752);
return G__19750__delegate(x,y,more);
});
G__19750.cljs$core$IFn$_invoke$arity$variadic = G__19750__delegate;
return G__19750;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__19753 = null;
if (arguments.length > 2) {
var G__19754__i = 0, G__19754__a = new Array(arguments.length -  2);
while (G__19754__i < G__19754__a.length) {G__19754__a[G__19754__i] = arguments[G__19754__i + 2]; ++G__19754__i;}
G__19753 = new cljs.core.IndexedSeq(G__19754__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19753);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__19755__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__19755 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19756__i = 0, G__19756__a = new Array(arguments.length -  2);
while (G__19756__i < G__19756__a.length) {G__19756__a[G__19756__i] = arguments[G__19756__i + 2]; ++G__19756__i;}
  more = new cljs.core.IndexedSeq(G__19756__a,0);
} 
return G__19755__delegate.call(this,x,y,more);};
G__19755.cljs$lang$maxFixedArity = 2;
G__19755.cljs$lang$applyTo = (function (arglist__19757){
var x = cljs.core.first(arglist__19757);
arglist__19757 = cljs.core.next(arglist__19757);
var y = cljs.core.first(arglist__19757);
var more = cljs.core.rest(arglist__19757);
return G__19755__delegate(x,y,more);
});
G__19755.cljs$core$IFn$_invoke$arity$variadic = G__19755__delegate;
return G__19755;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__19758 = null;
if (arguments.length > 2) {
var G__19759__i = 0, G__19759__a = new Array(arguments.length -  2);
while (G__19759__i < G__19759__a.length) {G__19759__a[G__19759__i] = arguments[G__19759__i + 2]; ++G__19759__i;}
G__19758 = new cljs.core.IndexedSeq(G__19759__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19758);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__19762 = x;
var G__19763 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__19762,G__19763) : cljs.core.mod.call(null,G__19762,G__19763));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__19764__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__19764 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19765__i = 0, G__19765__a = new Array(arguments.length -  2);
while (G__19765__i < G__19765__a.length) {G__19765__a[G__19765__i] = arguments[G__19765__i + 2]; ++G__19765__i;}
  more = new cljs.core.IndexedSeq(G__19765__a,0);
} 
return G__19764__delegate.call(this,x,y,more);};
G__19764.cljs$lang$maxFixedArity = 2;
G__19764.cljs$lang$applyTo = (function (arglist__19766){
var x = cljs.core.first(arglist__19766);
arglist__19766 = cljs.core.next(arglist__19766);
var y = cljs.core.first(arglist__19766);
var more = cljs.core.rest(arglist__19766);
return G__19764__delegate(x,y,more);
});
G__19764.cljs$core$IFn$_invoke$arity$variadic = G__19764__delegate;
return G__19764;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__19767 = null;
if (arguments.length > 2) {
var G__19768__i = 0, G__19768__a = new Array(arguments.length -  2);
while (G__19768__i < G__19768__a.length) {G__19768__a[G__19768__i] = arguments[G__19768__i + 2]; ++G__19768__i;}
G__19767 = new cljs.core.IndexedSeq(G__19768__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19767);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__19769__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__19769 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19770__i = 0, G__19770__a = new Array(arguments.length -  2);
while (G__19770__i < G__19770__a.length) {G__19770__a[G__19770__i] = arguments[G__19770__i + 2]; ++G__19770__i;}
  more = new cljs.core.IndexedSeq(G__19770__a,0);
} 
return G__19769__delegate.call(this,x,y,more);};
G__19769.cljs$lang$maxFixedArity = 2;
G__19769.cljs$lang$applyTo = (function (arglist__19771){
var x = cljs.core.first(arglist__19771);
arglist__19771 = cljs.core.next(arglist__19771);
var y = cljs.core.first(arglist__19771);
var more = cljs.core.rest(arglist__19771);
return G__19769__delegate(x,y,more);
});
G__19769.cljs$core$IFn$_invoke$arity$variadic = G__19769__delegate;
return G__19769;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__19772 = null;
if (arguments.length > 2) {
var G__19773__i = 0, G__19773__a = new Array(arguments.length -  2);
while (G__19773__i < G__19773__a.length) {G__19773__a[G__19773__i] = arguments[G__19773__i + 2]; ++G__19773__i;}
G__19772 = new cljs.core.IndexedSeq(G__19773__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19772);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__19776 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19776) : Math.floor.call(null,G__19776));
} else {
var G__19777 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__19777) : Math.ceil.call(null,G__19777));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__19778__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__19778 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19779__i = 0, G__19779__a = new Array(arguments.length -  2);
while (G__19779__i < G__19779__a.length) {G__19779__a[G__19779__i] = arguments[G__19779__i + 2]; ++G__19779__i;}
  more = new cljs.core.IndexedSeq(G__19779__a,0);
} 
return G__19778__delegate.call(this,x,y,more);};
G__19778.cljs$lang$maxFixedArity = 2;
G__19778.cljs$lang$applyTo = (function (arglist__19780){
var x = cljs.core.first(arglist__19780);
arglist__19780 = cljs.core.next(arglist__19780);
var y = cljs.core.first(arglist__19780);
var more = cljs.core.rest(arglist__19780);
return G__19778__delegate(x,y,more);
});
G__19778.cljs$core$IFn$_invoke$arity$variadic = G__19778__delegate;
return G__19778;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__19781 = null;
if (arguments.length > 2) {
var G__19782__i = 0, G__19782__a = new Array(arguments.length -  2);
while (G__19782__i < G__19782__a.length) {G__19782__a[G__19782__i] = arguments[G__19782__i + 2]; ++G__19782__i;}
G__19781 = new cljs.core.IndexedSeq(G__19782__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19781);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__19783__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__19783 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19784__i = 0, G__19784__a = new Array(arguments.length -  2);
while (G__19784__i < G__19784__a.length) {G__19784__a[G__19784__i] = arguments[G__19784__i + 2]; ++G__19784__i;}
  more = new cljs.core.IndexedSeq(G__19784__a,0);
} 
return G__19783__delegate.call(this,x,y,more);};
G__19783.cljs$lang$maxFixedArity = 2;
G__19783.cljs$lang$applyTo = (function (arglist__19785){
var x = cljs.core.first(arglist__19785);
arglist__19785 = cljs.core.next(arglist__19785);
var y = cljs.core.first(arglist__19785);
var more = cljs.core.rest(arglist__19785);
return G__19783__delegate(x,y,more);
});
G__19783.cljs$core$IFn$_invoke$arity$variadic = G__19783__delegate;
return G__19783;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__19786 = null;
if (arguments.length > 2) {
var G__19787__i = 0, G__19787__a = new Array(arguments.length -  2);
while (G__19787__i < G__19787__a.length) {G__19787__a[G__19787__i] = arguments[G__19787__i + 2]; ++G__19787__i;}
G__19786 = new cljs.core.IndexedSeq(G__19787__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__19788__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__19788 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19789__i = 0, G__19789__a = new Array(arguments.length -  2);
while (G__19789__i < G__19789__a.length) {G__19789__a[G__19789__i] = arguments[G__19789__i + 2]; ++G__19789__i;}
  more = new cljs.core.IndexedSeq(G__19789__a,0);
} 
return G__19788__delegate.call(this,x,y,more);};
G__19788.cljs$lang$maxFixedArity = 2;
G__19788.cljs$lang$applyTo = (function (arglist__19790){
var x = cljs.core.first(arglist__19790);
arglist__19790 = cljs.core.next(arglist__19790);
var y = cljs.core.first(arglist__19790);
var more = cljs.core.rest(arglist__19790);
return G__19788__delegate(x,y,more);
});
G__19788.cljs$core$IFn$_invoke$arity$variadic = G__19788__delegate;
return G__19788;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__19791 = null;
if (arguments.length > 2) {
var G__19792__i = 0, G__19792__a = new Array(arguments.length -  2);
while (G__19792__i < G__19792__a.length) {G__19792__a[G__19792__i] = arguments[G__19792__i + 2]; ++G__19792__i;}
G__19791 = new cljs.core.IndexedSeq(G__19792__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19791);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__19793__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__19793 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19794__i = 0, G__19794__a = new Array(arguments.length -  2);
while (G__19794__i < G__19794__a.length) {G__19794__a[G__19794__i] = arguments[G__19794__i + 2]; ++G__19794__i;}
  more = new cljs.core.IndexedSeq(G__19794__a,0);
} 
return G__19793__delegate.call(this,x,y,more);};
G__19793.cljs$lang$maxFixedArity = 2;
G__19793.cljs$lang$applyTo = (function (arglist__19795){
var x = cljs.core.first(arglist__19795);
arglist__19795 = cljs.core.next(arglist__19795);
var y = cljs.core.first(arglist__19795);
var more = cljs.core.rest(arglist__19795);
return G__19793__delegate(x,y,more);
});
G__19793.cljs$core$IFn$_invoke$arity$variadic = G__19793__delegate;
return G__19793;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__19796 = null;
if (arguments.length > 2) {
var G__19797__i = 0, G__19797__a = new Array(arguments.length -  2);
while (G__19797__i < G__19797__a.length) {G__19797__a[G__19797__i] = arguments[G__19797__i + 2]; ++G__19797__i;}
G__19796 = new cljs.core.IndexedSeq(G__19797__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19796);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__19802__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19803 = y;
var G__19804 = cljs.core.first(more);
var G__19805 = cljs.core.next(more);
x = G__19803;
y = G__19804;
more = G__19805;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19802 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19806__i = 0, G__19806__a = new Array(arguments.length -  2);
while (G__19806__i < G__19806__a.length) {G__19806__a[G__19806__i] = arguments[G__19806__i + 2]; ++G__19806__i;}
  more = new cljs.core.IndexedSeq(G__19806__a,0);
} 
return G__19802__delegate.call(this,x,y,more);};
G__19802.cljs$lang$maxFixedArity = 2;
G__19802.cljs$lang$applyTo = (function (arglist__19807){
var x = cljs.core.first(arglist__19807);
arglist__19807 = cljs.core.next(arglist__19807);
var y = cljs.core.first(arglist__19807);
var more = cljs.core.rest(arglist__19807);
return G__19802__delegate(x,y,more);
});
G__19802.cljs$core$IFn$_invoke$arity$variadic = G__19802__delegate;
return G__19802;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__19808 = null;
if (arguments.length > 2) {
var G__19809__i = 0, G__19809__a = new Array(arguments.length -  2);
while (G__19809__i < G__19809__a.length) {G__19809__a[G__19809__i] = arguments[G__19809__i + 2]; ++G__19809__i;}
G__19808 = new cljs.core.IndexedSeq(G__19809__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19808);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__19810 = (n__$1 - (1));
var G__19811 = cljs.core.next(xs);
n__$1 = G__19810;
xs = G__19811;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__19815 = x;
return goog.string.buildString(G__19815);
}
});
var str__2 = (function() { 
var G__19816__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__19817 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__19818 = cljs.core.next(more);
sb = G__19817;
more = G__19818;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__19816 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__19819__i = 0, G__19819__a = new Array(arguments.length -  1);
while (G__19819__i < G__19819__a.length) {G__19819__a[G__19819__i] = arguments[G__19819__i + 1]; ++G__19819__i;}
  ys = new cljs.core.IndexedSeq(G__19819__a,0);
} 
return G__19816__delegate.call(this,x,ys);};
G__19816.cljs$lang$maxFixedArity = 1;
G__19816.cljs$lang$applyTo = (function (arglist__19820){
var x = cljs.core.first(arglist__19820);
var ys = cljs.core.rest(arglist__19820);
return G__19816__delegate(x,ys);
});
G__19816.cljs$core$IFn$_invoke$arity$variadic = G__19816__delegate;
return G__19816;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__19821 = null;
if (arguments.length > 1) {
var G__19822__i = 0, G__19822__a = new Array(arguments.length -  1);
while (G__19822__i < G__19822__a.length) {G__19822__a[G__19822__i] = arguments[G__19822__i + 1]; ++G__19822__i;}
G__19821 = new cljs.core.IndexedSeq(G__19822__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__19821);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__19823 = cljs.core.next(xs);
var G__19824 = cljs.core.next(ys);
xs = G__19823;
ys = G__19824;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__19825 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__19826 = cljs.core.next(s);
res = G__19825;
s = G__19826;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__19831 = ((h + (cljs.core.hash((function (){var G__19829 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19829) : cljs.core.key.call(null,G__19829));
})()) ^ cljs.core.hash((function (){var G__19830 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19830) : cljs.core.val.call(null,G__19830));
})()))) % (4503599627370496));
var G__19832 = cljs.core.next(s);
h = G__19831;
s = G__19832;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__19833 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__19834 = cljs.core.next(s__$1);
h = G__19833;
s__$1 = G__19834;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__19845_19855 = cljs.core.seq(fn_map);
var chunk__19846_19856 = null;
var count__19847_19857 = (0);
var i__19848_19858 = (0);
while(true){
if((i__19848_19858 < count__19847_19857)){
var vec__19849_19859 = chunk__19846_19856.cljs$core$IIndexed$_nth$arity$2(null,i__19848_19858);
var key_name_19860 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19849_19859,(0),null);
var f_19861 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19849_19859,(1),null);
var str_name_19862 = (function (){var G__19850 = key_name_19860;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19850) : cljs.core.name.call(null,G__19850));
})();
(obj[str_name_19862] = f_19861);

var G__19863 = seq__19845_19855;
var G__19864 = chunk__19846_19856;
var G__19865 = count__19847_19857;
var G__19866 = (i__19848_19858 + (1));
seq__19845_19855 = G__19863;
chunk__19846_19856 = G__19864;
count__19847_19857 = G__19865;
i__19848_19858 = G__19866;
continue;
} else {
var temp__4126__auto___19867 = cljs.core.seq(seq__19845_19855);
if(temp__4126__auto___19867){
var seq__19845_19868__$1 = temp__4126__auto___19867;
if(cljs.core.chunked_seq_QMARK_(seq__19845_19868__$1)){
var c__4559__auto___19869 = (function (){var G__19851 = seq__19845_19868__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__19851) : cljs.core.chunk_first.call(null,G__19851));
})();
var G__19870 = (function (){var G__19852 = seq__19845_19868__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__19852) : cljs.core.chunk_rest.call(null,G__19852));
})();
var G__19871 = c__4559__auto___19869;
var G__19872 = cljs.core.count(c__4559__auto___19869);
var G__19873 = (0);
seq__19845_19855 = G__19870;
chunk__19846_19856 = G__19871;
count__19847_19857 = G__19872;
i__19848_19858 = G__19873;
continue;
} else {
var vec__19853_19874 = cljs.core.first(seq__19845_19868__$1);
var key_name_19875 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19853_19874,(0),null);
var f_19876 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19853_19874,(1),null);
var str_name_19877 = (function (){var G__19854 = key_name_19875;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19854) : cljs.core.name.call(null,G__19854));
})();
(obj[str_name_19877] = f_19876);

var G__19878 = cljs.core.next(seq__19845_19868__$1);
var G__19879 = null;
var G__19880 = (0);
var G__19881 = (0);
seq__19845_19855 = G__19878;
chunk__19846_19856 = G__19879;
count__19847_19857 = G__19880;
i__19848_19858 = G__19881;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__19883 = coll;
if(G__19883){
var bit__4453__auto__ = (G__19883.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4453__auto__) || (G__19883.cljs$core$IReversible$)){
return true;
} else {
if((!G__19883.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19883);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__19883);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__19884 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__19884;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__19885 = (i - (1));
var G__19886 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__19885;
r = G__19886;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__19887__i = 0, G__19887__a = new Array(arguments.length -  0);
while (G__19887__i < G__19887__a.length) {G__19887__a[G__19887__i] = arguments[G__19887__i + 0]; ++G__19887__i;}
  xs = new cljs.core.IndexedSeq(G__19887__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__19888){
var xs = cljs.core.seq(arglist__19888);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3772__auto__ = (coll == null);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var G__19892 = coll;
if(G__19892){
var bit__4446__auto__ = (G__19892.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__19892.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__19894 = x;
if(G__19894){
var bit__4453__auto__ = (G__19894.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4453__auto__) || (G__19894.cljs$core$IList$)){
return true;
} else {
if((!G__19894.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19894);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__19894);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3760__auto__ = cljs.core.not(a.ns);
if(and__3760__auto__){
return b.ns;
} else {
return and__3760__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__19901 = a.ns;
var G__19902 = b.ns;
return goog.array.defaultCompare(G__19901,G__19902);
})();
if(((0) === nsc)){
var G__19903 = a.name;
var G__19904 = b.name;
return goog.array.defaultCompare(G__19903,G__19904);
} else {
return nsc;
}
}
} else {
var G__19905 = a.name;
var G__19906 = b.name;
return goog.array.defaultCompare(G__19905,G__19906);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4193__auto__ = self__._hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__19908 = null;
var G__19908__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__19908__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__19908 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__19908__2.call(this,self__,coll);
case 3:
return G__19908__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19908.cljs$core$IFn$_invoke$arity$2 = G__19908__2;
G__19908.cljs$core$IFn$_invoke$arity$3 = G__19908__3;
return G__19908;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args19907){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19907)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__19910 = x;
if(G__19910){
var bit__4446__auto__ = (G__19910.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4446__auto__) || (G__19910.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__19912 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19912) : cljs.core.name.call(null,G__19912));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__19913 = ls.sval();
ls = G__19913;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__19915 = s;
if(G__19915){
var bit__4446__auto__ = (G__19915.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4446__auto__) || (G__19915.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__19916 = cljs.core.next(s__$1);
s__$1 = G__19916;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_19917 = (0);
var xs_19918 = cljs.core.seq(coll);
while(true){
if(xs_19918){
(ret[i_19917] = cljs.core.to_array(cljs.core.first(xs_19918)));

var G__19919 = (i_19917 + (1));
var G__19920 = cljs.core.next(xs_19918);
i_19917 = G__19919;
xs_19918 = G__19920;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19923 = (i + (1));
var G__19924 = cljs.core.next(s__$1);
i = G__19923;
s__$1 = G__19924;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___19925 = size;
var i_19926 = (0);
while(true){
if((i_19926 < n__4659__auto___19925)){
(a[i_19926] = init_val_or_seq);

var G__19927 = (i_19926 + (1));
i_19926 = G__19927;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19930 = (i + (1));
var G__19931 = cljs.core.next(s__$1);
i = G__19930;
s__$1 = G__19931;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___19932 = size;
var i_19933 = (0);
while(true){
if((i_19933 < n__4659__auto___19932)){
(a[i_19933] = init_val_or_seq);

var G__19934 = (i_19933 + (1));
i_19933 = G__19934;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19937 = (i + (1));
var G__19938 = cljs.core.next(s__$1);
i = G__19937;
s__$1 = G__19938;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___19939 = size;
var i_19940 = (0);
while(true){
if((i_19940 < n__4659__auto___19939)){
(a[i_19940] = init_val_or_seq);

var G__19941 = (i_19940 + (1));
i_19940 = G__19941;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__19944 = (i + (1));
var G__19945 = cljs.core.next(s__$1);
i = G__19944;
s__$1 = G__19945;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___19946 = size;
var i_19947 = (0);
while(true){
if((i_19947 < n__4659__auto___19946)){
(a[i_19947] = init_val_or_seq);

var G__19948 = (i_19947 + (1));
i_19947 = G__19948;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__19949 = cljs.core.next(s__$1);
var G__19950 = (i - (1));
var G__19951 = (sum + (1));
s__$1 = G__19949;
i = G__19950;
sum = G__19951;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__19971__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__19971 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__19972__i = 0, G__19972__a = new Array(arguments.length -  2);
while (G__19972__i < G__19972__a.length) {G__19972__a[G__19972__i] = arguments[G__19972__i + 2]; ++G__19972__i;}
  zs = new cljs.core.IndexedSeq(G__19972__a,0);
} 
return G__19971__delegate.call(this,x,y,zs);};
G__19971.cljs$lang$maxFixedArity = 2;
G__19971.cljs$lang$applyTo = (function (arglist__19973){
var x = cljs.core.first(arglist__19973);
arglist__19973 = cljs.core.next(arglist__19973);
var y = cljs.core.first(arglist__19973);
var zs = cljs.core.rest(arglist__19973);
return G__19971__delegate(x,y,zs);
});
G__19971.cljs$core$IFn$_invoke$arity$variadic = G__19971__delegate;
return G__19971;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__19974 = null;
if (arguments.length > 2) {
var G__19975__i = 0, G__19975__a = new Array(arguments.length -  2);
while (G__19975__i < G__19975__a.length) {G__19975__a[G__19975__i] = arguments[G__19975__i + 2]; ++G__19975__i;}
G__19974 = new cljs.core.IndexedSeq(G__19975__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__19976__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__19976 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__19977__i = 0, G__19977__a = new Array(arguments.length -  4);
while (G__19977__i < G__19977__a.length) {G__19977__a[G__19977__i] = arguments[G__19977__i + 4]; ++G__19977__i;}
  more = new cljs.core.IndexedSeq(G__19977__a,0);
} 
return G__19976__delegate.call(this,a,b,c,d,more);};
G__19976.cljs$lang$maxFixedArity = 4;
G__19976.cljs$lang$applyTo = (function (arglist__19978){
var a = cljs.core.first(arglist__19978);
arglist__19978 = cljs.core.next(arglist__19978);
var b = cljs.core.first(arglist__19978);
arglist__19978 = cljs.core.next(arglist__19978);
var c = cljs.core.first(arglist__19978);
arglist__19978 = cljs.core.next(arglist__19978);
var d = cljs.core.first(arglist__19978);
var more = cljs.core.rest(arglist__19978);
return G__19976__delegate(a,b,c,d,more);
});
G__19976.cljs$core$IFn$_invoke$arity$variadic = G__19976__delegate;
return G__19976;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__19979 = null;
if (arguments.length > 4) {
var G__19980__i = 0, G__19980__a = new Array(arguments.length -  4);
while (G__19980__i < G__19980__a.length) {G__19980__a[G__19980__i] = arguments[G__19980__i + 4]; ++G__19980__i;}
G__19979 = new cljs.core.IndexedSeq(G__19980__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__19979);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__19981__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__19982 = ntcoll;
var G__19983 = cljs.core.first(vals);
var G__19984 = cljs.core.next(vals);
tcoll = G__19982;
val = G__19983;
vals = G__19984;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19981 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__19985__i = 0, G__19985__a = new Array(arguments.length -  2);
while (G__19985__i < G__19985__a.length) {G__19985__a[G__19985__i] = arguments[G__19985__i + 2]; ++G__19985__i;}
  vals = new cljs.core.IndexedSeq(G__19985__a,0);
} 
return G__19981__delegate.call(this,tcoll,val,vals);};
G__19981.cljs$lang$maxFixedArity = 2;
G__19981.cljs$lang$applyTo = (function (arglist__19986){
var tcoll = cljs.core.first(arglist__19986);
arglist__19986 = cljs.core.next(arglist__19986);
var val = cljs.core.first(arglist__19986);
var vals = cljs.core.rest(arglist__19986);
return G__19981__delegate(tcoll,val,vals);
});
G__19981.cljs$core$IFn$_invoke$arity$variadic = G__19981__delegate;
return G__19981;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__19987 = null;
if (arguments.length > 2) {
var G__19988__i = 0, G__19988__a = new Array(arguments.length -  2);
while (G__19988__i < G__19988__a.length) {G__19988__a[G__19988__i] = arguments[G__19988__i + 2]; ++G__19988__i;}
G__19987 = new cljs.core.IndexedSeq(G__19988__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__19987);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__19989__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__19990 = ntcoll;
var G__19991 = cljs.core.first(kvs);
var G__19992 = cljs.core.second(kvs);
var G__19993 = cljs.core.nnext(kvs);
tcoll = G__19990;
key = G__19991;
val = G__19992;
kvs = G__19993;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19989 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19994__i = 0, G__19994__a = new Array(arguments.length -  3);
while (G__19994__i < G__19994__a.length) {G__19994__a[G__19994__i] = arguments[G__19994__i + 3]; ++G__19994__i;}
  kvs = new cljs.core.IndexedSeq(G__19994__a,0);
} 
return G__19989__delegate.call(this,tcoll,key,val,kvs);};
G__19989.cljs$lang$maxFixedArity = 3;
G__19989.cljs$lang$applyTo = (function (arglist__19995){
var tcoll = cljs.core.first(arglist__19995);
arglist__19995 = cljs.core.next(arglist__19995);
var key = cljs.core.first(arglist__19995);
arglist__19995 = cljs.core.next(arglist__19995);
var val = cljs.core.first(arglist__19995);
var kvs = cljs.core.rest(arglist__19995);
return G__19989__delegate(tcoll,key,val,kvs);
});
G__19989.cljs$core$IFn$_invoke$arity$variadic = G__19989__delegate;
return G__19989;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__19996 = null;
if (arguments.length > 3) {
var G__19997__i = 0, G__19997__a = new Array(arguments.length -  3);
while (G__19997__i < G__19997__a.length) {G__19997__a[G__19997__i] = arguments[G__19997__i + 3]; ++G__19997__i;}
G__19996 = new cljs.core.IndexedSeq(G__19997__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__19996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__19998__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__19999 = ntcoll;
var G__20000 = cljs.core.first(ks);
var G__20001 = cljs.core.next(ks);
tcoll = G__19999;
key = G__20000;
ks = G__20001;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__19998 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20002__i = 0, G__20002__a = new Array(arguments.length -  2);
while (G__20002__i < G__20002__a.length) {G__20002__a[G__20002__i] = arguments[G__20002__i + 2]; ++G__20002__i;}
  ks = new cljs.core.IndexedSeq(G__20002__a,0);
} 
return G__19998__delegate.call(this,tcoll,key,ks);};
G__19998.cljs$lang$maxFixedArity = 2;
G__19998.cljs$lang$applyTo = (function (arglist__20003){
var tcoll = cljs.core.first(arglist__20003);
arglist__20003 = cljs.core.next(arglist__20003);
var key = cljs.core.first(arglist__20003);
var ks = cljs.core.rest(arglist__20003);
return G__19998__delegate(tcoll,key,ks);
});
G__19998.cljs$core$IFn$_invoke$arity$variadic = G__19998__delegate;
return G__19998;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__20004 = null;
if (arguments.length > 2) {
var G__20005__i = 0, G__20005__a = new Array(arguments.length -  2);
while (G__20005__i < G__20005__a.length) {G__20005__a[G__20005__i] = arguments[G__20005__i + 2]; ++G__20005__i;}
G__20004 = new cljs.core.IndexedSeq(G__20005__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__20004);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__20006__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__20007 = ntcoll;
var G__20008 = cljs.core.first(vals);
var G__20009 = cljs.core.next(vals);
tcoll = G__20007;
val = G__20008;
vals = G__20009;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20006 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__20010__i = 0, G__20010__a = new Array(arguments.length -  2);
while (G__20010__i < G__20010__a.length) {G__20010__a[G__20010__i] = arguments[G__20010__i + 2]; ++G__20010__i;}
  vals = new cljs.core.IndexedSeq(G__20010__a,0);
} 
return G__20006__delegate.call(this,tcoll,val,vals);};
G__20006.cljs$lang$maxFixedArity = 2;
G__20006.cljs$lang$applyTo = (function (arglist__20011){
var tcoll = cljs.core.first(arglist__20011);
arglist__20011 = cljs.core.next(arglist__20011);
var val = cljs.core.first(arglist__20011);
var vals = cljs.core.rest(arglist__20011);
return G__20006__delegate(tcoll,val,vals);
});
G__20006.cljs$core$IFn$_invoke$arity$variadic = G__20006__delegate;
return G__20006;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__20012 = null;
if (arguments.length > 2) {
var G__20013__i = 0, G__20013__a = new Array(arguments.length -  2);
while (G__20013__i < G__20013__a.length) {G__20013__a[G__20013__i] = arguments[G__20013__i + 2]; ++G__20013__i;}
G__20012 = new cljs.core.IndexedSeq(G__20013__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__20012);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4703 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4703);
} else {
var G__20224 = a4703;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20224) : f.call(null,G__20224));
}
} else {
var b4704 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4703,b4704);
} else {
var G__20225 = a4703;
var G__20226 = b4704;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20225,G__20226) : f.call(null,G__20225,G__20226));
}
} else {
var c4705 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4703,b4704,c4705);
} else {
var G__20227 = a4703;
var G__20228 = b4704;
var G__20229 = c4705;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20227,G__20228,G__20229) : f.call(null,G__20227,G__20228,G__20229));
}
} else {
var d4706 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4703,b4704,c4705,d4706);
} else {
var G__20230 = a4703;
var G__20231 = b4704;
var G__20232 = c4705;
var G__20233 = d4706;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20230,G__20231,G__20232,G__20233) : f.call(null,G__20230,G__20231,G__20232,G__20233));
}
} else {
var e4707 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4703,b4704,c4705,d4706,e4707);
} else {
var G__20234 = a4703;
var G__20235 = b4704;
var G__20236 = c4705;
var G__20237 = d4706;
var G__20238 = e4707;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20234,G__20235,G__20236,G__20237,G__20238) : f.call(null,G__20234,G__20235,G__20236,G__20237,G__20238));
}
} else {
var f4708 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4703,b4704,c4705,d4706,e4707,f4708);
} else {
var G__20239 = a4703;
var G__20240 = b4704;
var G__20241 = c4705;
var G__20242 = d4706;
var G__20243 = e4707;
var G__20244 = f4708;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20239,G__20240,G__20241,G__20242,G__20243,G__20244) : f.call(null,G__20239,G__20240,G__20241,G__20242,G__20243,G__20244));
}
} else {
var g4709 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4703,b4704,c4705,d4706,e4707,f4708,g4709);
} else {
var G__20245 = a4703;
var G__20246 = b4704;
var G__20247 = c4705;
var G__20248 = d4706;
var G__20249 = e4707;
var G__20250 = f4708;
var G__20251 = g4709;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__20245,G__20246,G__20247,G__20248,G__20249,G__20250,G__20251) : f.call(null,G__20245,G__20246,G__20247,G__20248,G__20249,G__20250,G__20251));
}
} else {
var h4710 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710);
} else {
var G__20252 = a4703;
var G__20253 = b4704;
var G__20254 = c4705;
var G__20255 = d4706;
var G__20256 = e4707;
var G__20257 = f4708;
var G__20258 = g4709;
var G__20259 = h4710;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__20252,G__20253,G__20254,G__20255,G__20256,G__20257,G__20258,G__20259) : f.call(null,G__20252,G__20253,G__20254,G__20255,G__20256,G__20257,G__20258,G__20259));
}
} else {
var i4711 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711);
} else {
var G__20260 = a4703;
var G__20261 = b4704;
var G__20262 = c4705;
var G__20263 = d4706;
var G__20264 = e4707;
var G__20265 = f4708;
var G__20266 = g4709;
var G__20267 = h4710;
var G__20268 = i4711;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__20260,G__20261,G__20262,G__20263,G__20264,G__20265,G__20266,G__20267,G__20268) : f.call(null,G__20260,G__20261,G__20262,G__20263,G__20264,G__20265,G__20266,G__20267,G__20268));
}
} else {
var j4712 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712);
} else {
var G__20269 = a4703;
var G__20270 = b4704;
var G__20271 = c4705;
var G__20272 = d4706;
var G__20273 = e4707;
var G__20274 = f4708;
var G__20275 = g4709;
var G__20276 = h4710;
var G__20277 = i4711;
var G__20278 = j4712;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__20269,G__20270,G__20271,G__20272,G__20273,G__20274,G__20275,G__20276,G__20277,G__20278) : f.call(null,G__20269,G__20270,G__20271,G__20272,G__20273,G__20274,G__20275,G__20276,G__20277,G__20278));
}
} else {
var k4713 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713);
} else {
var G__20279 = a4703;
var G__20280 = b4704;
var G__20281 = c4705;
var G__20282 = d4706;
var G__20283 = e4707;
var G__20284 = f4708;
var G__20285 = g4709;
var G__20286 = h4710;
var G__20287 = i4711;
var G__20288 = j4712;
var G__20289 = k4713;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__20279,G__20280,G__20281,G__20282,G__20283,G__20284,G__20285,G__20286,G__20287,G__20288,G__20289) : f.call(null,G__20279,G__20280,G__20281,G__20282,G__20283,G__20284,G__20285,G__20286,G__20287,G__20288,G__20289));
}
} else {
var l4714 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714);
} else {
var G__20290 = a4703;
var G__20291 = b4704;
var G__20292 = c4705;
var G__20293 = d4706;
var G__20294 = e4707;
var G__20295 = f4708;
var G__20296 = g4709;
var G__20297 = h4710;
var G__20298 = i4711;
var G__20299 = j4712;
var G__20300 = k4713;
var G__20301 = l4714;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__20290,G__20291,G__20292,G__20293,G__20294,G__20295,G__20296,G__20297,G__20298,G__20299,G__20300,G__20301) : f.call(null,G__20290,G__20291,G__20292,G__20293,G__20294,G__20295,G__20296,G__20297,G__20298,G__20299,G__20300,G__20301));
}
} else {
var m4715 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715);
} else {
var G__20302 = a4703;
var G__20303 = b4704;
var G__20304 = c4705;
var G__20305 = d4706;
var G__20306 = e4707;
var G__20307 = f4708;
var G__20308 = g4709;
var G__20309 = h4710;
var G__20310 = i4711;
var G__20311 = j4712;
var G__20312 = k4713;
var G__20313 = l4714;
var G__20314 = m4715;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__20302,G__20303,G__20304,G__20305,G__20306,G__20307,G__20308,G__20309,G__20310,G__20311,G__20312,G__20313,G__20314) : f.call(null,G__20302,G__20303,G__20304,G__20305,G__20306,G__20307,G__20308,G__20309,G__20310,G__20311,G__20312,G__20313,G__20314));
}
} else {
var n4716 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716);
} else {
var G__20315 = a4703;
var G__20316 = b4704;
var G__20317 = c4705;
var G__20318 = d4706;
var G__20319 = e4707;
var G__20320 = f4708;
var G__20321 = g4709;
var G__20322 = h4710;
var G__20323 = i4711;
var G__20324 = j4712;
var G__20325 = k4713;
var G__20326 = l4714;
var G__20327 = m4715;
var G__20328 = n4716;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__20315,G__20316,G__20317,G__20318,G__20319,G__20320,G__20321,G__20322,G__20323,G__20324,G__20325,G__20326,G__20327,G__20328) : f.call(null,G__20315,G__20316,G__20317,G__20318,G__20319,G__20320,G__20321,G__20322,G__20323,G__20324,G__20325,G__20326,G__20327,G__20328));
}
} else {
var o4717 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717);
} else {
var G__20329 = a4703;
var G__20330 = b4704;
var G__20331 = c4705;
var G__20332 = d4706;
var G__20333 = e4707;
var G__20334 = f4708;
var G__20335 = g4709;
var G__20336 = h4710;
var G__20337 = i4711;
var G__20338 = j4712;
var G__20339 = k4713;
var G__20340 = l4714;
var G__20341 = m4715;
var G__20342 = n4716;
var G__20343 = o4717;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__20329,G__20330,G__20331,G__20332,G__20333,G__20334,G__20335,G__20336,G__20337,G__20338,G__20339,G__20340,G__20341,G__20342,G__20343) : f.call(null,G__20329,G__20330,G__20331,G__20332,G__20333,G__20334,G__20335,G__20336,G__20337,G__20338,G__20339,G__20340,G__20341,G__20342,G__20343));
}
} else {
var p4718 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718);
} else {
var G__20344 = a4703;
var G__20345 = b4704;
var G__20346 = c4705;
var G__20347 = d4706;
var G__20348 = e4707;
var G__20349 = f4708;
var G__20350 = g4709;
var G__20351 = h4710;
var G__20352 = i4711;
var G__20353 = j4712;
var G__20354 = k4713;
var G__20355 = l4714;
var G__20356 = m4715;
var G__20357 = n4716;
var G__20358 = o4717;
var G__20359 = p4718;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__20344,G__20345,G__20346,G__20347,G__20348,G__20349,G__20350,G__20351,G__20352,G__20353,G__20354,G__20355,G__20356,G__20357,G__20358,G__20359) : f.call(null,G__20344,G__20345,G__20346,G__20347,G__20348,G__20349,G__20350,G__20351,G__20352,G__20353,G__20354,G__20355,G__20356,G__20357,G__20358,G__20359));
}
} else {
var q4719 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719);
} else {
var G__20360 = a4703;
var G__20361 = b4704;
var G__20362 = c4705;
var G__20363 = d4706;
var G__20364 = e4707;
var G__20365 = f4708;
var G__20366 = g4709;
var G__20367 = h4710;
var G__20368 = i4711;
var G__20369 = j4712;
var G__20370 = k4713;
var G__20371 = l4714;
var G__20372 = m4715;
var G__20373 = n4716;
var G__20374 = o4717;
var G__20375 = p4718;
var G__20376 = q4719;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__20360,G__20361,G__20362,G__20363,G__20364,G__20365,G__20366,G__20367,G__20368,G__20369,G__20370,G__20371,G__20372,G__20373,G__20374,G__20375,G__20376) : f.call(null,G__20360,G__20361,G__20362,G__20363,G__20364,G__20365,G__20366,G__20367,G__20368,G__20369,G__20370,G__20371,G__20372,G__20373,G__20374,G__20375,G__20376));
}
} else {
var r4720 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719,r4720);
} else {
var G__20377 = a4703;
var G__20378 = b4704;
var G__20379 = c4705;
var G__20380 = d4706;
var G__20381 = e4707;
var G__20382 = f4708;
var G__20383 = g4709;
var G__20384 = h4710;
var G__20385 = i4711;
var G__20386 = j4712;
var G__20387 = k4713;
var G__20388 = l4714;
var G__20389 = m4715;
var G__20390 = n4716;
var G__20391 = o4717;
var G__20392 = p4718;
var G__20393 = q4719;
var G__20394 = r4720;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__20377,G__20378,G__20379,G__20380,G__20381,G__20382,G__20383,G__20384,G__20385,G__20386,G__20387,G__20388,G__20389,G__20390,G__20391,G__20392,G__20393,G__20394) : f.call(null,G__20377,G__20378,G__20379,G__20380,G__20381,G__20382,G__20383,G__20384,G__20385,G__20386,G__20387,G__20388,G__20389,G__20390,G__20391,G__20392,G__20393,G__20394));
}
} else {
var s4721 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719,r4720,s4721);
} else {
var G__20395 = a4703;
var G__20396 = b4704;
var G__20397 = c4705;
var G__20398 = d4706;
var G__20399 = e4707;
var G__20400 = f4708;
var G__20401 = g4709;
var G__20402 = h4710;
var G__20403 = i4711;
var G__20404 = j4712;
var G__20405 = k4713;
var G__20406 = l4714;
var G__20407 = m4715;
var G__20408 = n4716;
var G__20409 = o4717;
var G__20410 = p4718;
var G__20411 = q4719;
var G__20412 = r4720;
var G__20413 = s4721;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__20395,G__20396,G__20397,G__20398,G__20399,G__20400,G__20401,G__20402,G__20403,G__20404,G__20405,G__20406,G__20407,G__20408,G__20409,G__20410,G__20411,G__20412,G__20413) : f.call(null,G__20395,G__20396,G__20397,G__20398,G__20399,G__20400,G__20401,G__20402,G__20403,G__20404,G__20405,G__20406,G__20407,G__20408,G__20409,G__20410,G__20411,G__20412,G__20413));
}
} else {
var t4722 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719,r4720,s4721,t4722);
} else {
var G__20414 = a4703;
var G__20415 = b4704;
var G__20416 = c4705;
var G__20417 = d4706;
var G__20418 = e4707;
var G__20419 = f4708;
var G__20420 = g4709;
var G__20421 = h4710;
var G__20422 = i4711;
var G__20423 = j4712;
var G__20424 = k4713;
var G__20425 = l4714;
var G__20426 = m4715;
var G__20427 = n4716;
var G__20428 = o4717;
var G__20429 = p4718;
var G__20430 = q4719;
var G__20431 = r4720;
var G__20432 = s4721;
var G__20433 = t4722;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__20414,G__20415,G__20416,G__20417,G__20418,G__20419,G__20420,G__20421,G__20422,G__20423,G__20424,G__20425,G__20426,G__20427,G__20428,G__20429,G__20430,G__20431,G__20432,G__20433) : f.call(null,G__20414,G__20415,G__20416,G__20417,G__20418,G__20419,G__20420,G__20421,G__20422,G__20423,G__20424,G__20425,G__20426,G__20427,G__20428,G__20429,G__20430,G__20431,G__20432,G__20433));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__20434__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__20434 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__20435__i = 0, G__20435__a = new Array(arguments.length -  5);
while (G__20435__i < G__20435__a.length) {G__20435__a[G__20435__i] = arguments[G__20435__i + 5]; ++G__20435__i;}
  args = new cljs.core.IndexedSeq(G__20435__a,0);
} 
return G__20434__delegate.call(this,f,a,b,c,d,args);};
G__20434.cljs$lang$maxFixedArity = 5;
G__20434.cljs$lang$applyTo = (function (arglist__20436){
var f = cljs.core.first(arglist__20436);
arglist__20436 = cljs.core.next(arglist__20436);
var a = cljs.core.first(arglist__20436);
arglist__20436 = cljs.core.next(arglist__20436);
var b = cljs.core.first(arglist__20436);
arglist__20436 = cljs.core.next(arglist__20436);
var c = cljs.core.first(arglist__20436);
arglist__20436 = cljs.core.next(arglist__20436);
var d = cljs.core.first(arglist__20436);
var args = cljs.core.rest(arglist__20436);
return G__20434__delegate(f,a,b,c,d,args);
});
G__20434.cljs$core$IFn$_invoke$arity$variadic = G__20434__delegate;
return G__20434;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__20437 = null;
if (arguments.length > 5) {
var G__20438__i = 0, G__20438__a = new Array(arguments.length -  5);
while (G__20438__i < G__20438__a.length) {G__20438__a[G__20438__i] = arguments[G__20438__i + 5]; ++G__20438__i;}
G__20437 = new cljs.core.IndexedSeq(G__20438__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__20437);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__20454 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20454) : f.call(null,G__20454));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__20455 = cljs.core.meta(obj);
var G__20456 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20455,G__20456) : f.call(null,G__20455,G__20456));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__20457 = cljs.core.meta(obj);
var G__20458 = a;
var G__20459 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20457,G__20458,G__20459) : f.call(null,G__20457,G__20458,G__20459));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__20460 = cljs.core.meta(obj);
var G__20461 = a;
var G__20462 = b;
var G__20463 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20460,G__20461,G__20462,G__20463) : f.call(null,G__20460,G__20461,G__20462,G__20463));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__20464 = cljs.core.meta(obj);
var G__20465 = a;
var G__20466 = b;
var G__20467 = c;
var G__20468 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20464,G__20465,G__20466,G__20467,G__20468) : f.call(null,G__20464,G__20465,G__20466,G__20467,G__20468));
})());
});
var vary_meta__7 = (function() { 
var G__20469__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__20469 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__20470__i = 0, G__20470__a = new Array(arguments.length -  6);
while (G__20470__i < G__20470__a.length) {G__20470__a[G__20470__i] = arguments[G__20470__i + 6]; ++G__20470__i;}
  args = new cljs.core.IndexedSeq(G__20470__a,0);
} 
return G__20469__delegate.call(this,obj,f,a,b,c,d,args);};
G__20469.cljs$lang$maxFixedArity = 6;
G__20469.cljs$lang$applyTo = (function (arglist__20471){
var obj = cljs.core.first(arglist__20471);
arglist__20471 = cljs.core.next(arglist__20471);
var f = cljs.core.first(arglist__20471);
arglist__20471 = cljs.core.next(arglist__20471);
var a = cljs.core.first(arglist__20471);
arglist__20471 = cljs.core.next(arglist__20471);
var b = cljs.core.first(arglist__20471);
arglist__20471 = cljs.core.next(arglist__20471);
var c = cljs.core.first(arglist__20471);
arglist__20471 = cljs.core.next(arglist__20471);
var d = cljs.core.first(arglist__20471);
var args = cljs.core.rest(arglist__20471);
return G__20469__delegate(obj,f,a,b,c,d,args);
});
G__20469.cljs$core$IFn$_invoke$arity$variadic = G__20469__delegate;
return G__20469;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__20472 = null;
if (arguments.length > 6) {
var G__20473__i = 0, G__20473__a = new Array(arguments.length -  6);
while (G__20473__i < G__20473__a.length) {G__20473__a[G__20473__i] = arguments[G__20473__i + 6]; ++G__20473__i;}
G__20472 = new cljs.core.IndexedSeq(G__20473__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__20472);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__20474__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__20474 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20475__i = 0, G__20475__a = new Array(arguments.length -  2);
while (G__20475__i < G__20475__a.length) {G__20475__a[G__20475__i] = arguments[G__20475__i + 2]; ++G__20475__i;}
  more = new cljs.core.IndexedSeq(G__20475__a,0);
} 
return G__20474__delegate.call(this,x,y,more);};
G__20474.cljs$lang$maxFixedArity = 2;
G__20474.cljs$lang$applyTo = (function (arglist__20476){
var x = cljs.core.first(arglist__20476);
arglist__20476 = cljs.core.next(arglist__20476);
var y = cljs.core.first(arglist__20476);
var more = cljs.core.rest(arglist__20476);
return G__20474__delegate(x,y,more);
});
G__20474.cljs$core$IFn$_invoke$arity$variadic = G__20474__delegate;
return G__20474;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__20477 = null;
if (arguments.length > 2) {
var G__20478__i = 0, G__20478__a = new Array(arguments.length -  2);
while (G__20478__i < G__20478__a.length) {G__20478__a[G__20478__i] = arguments[G__20478__i + 2]; ++G__20478__i;}
G__20477 = new cljs.core.IndexedSeq(G__20478__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20477);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t20482 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t20482 = (function (nil_iter,meta20483){
this.nil_iter = nil_iter;
this.meta20483 = meta20483;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t20482.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t20482.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t20482.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t20482.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_20484){
var self__ = this;
var _20484__$1 = this;
return self__.meta20483;
});

cljs.core.t20482.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_20484,meta20483__$1){
var self__ = this;
var _20484__$1 = this;
return (new cljs.core.t20482(self__.nil_iter,meta20483__$1));
});

cljs.core.t20482.cljs$lang$type = true;

cljs.core.t20482.cljs$lang$ctorStr = "cljs.core/t20482";

cljs.core.t20482.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/t20482");
});

cljs.core.__GT_t20482 = (function __GT_t20482(nil_iter__$1,meta20483){
return (new cljs.core.t20482(nil_iter__$1,meta20483));
});

}

return (new cljs.core.t20482(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$84,54,cljs.core.constant$keyword$85,3063,cljs.core.constant$keyword$86,3,cljs.core.constant$keyword$87,3059,cljs.core.constant$keyword$88,"/Users/smiller/Projects/testsAndTuts/reactcomparison/out-adv/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3760__auto__ = !((lt.stepper == null));
if(and__3760__auto__){
return self__.iter.hasNext();
} else {
return and__3760__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__20485 = lt;
var G__20486 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__20485,G__20486) : self__.xform.call(null,G__20485,G__20486));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__20487 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__20487) : self__.xform.call(null,G__20487));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__20489 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20489) : xform.call(null,G__20489));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__20491 = cljs.core.next(iters__$1);
iters__$1 = G__20491;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4659__auto___20492 = self__.iters.length;
var i_20493 = (0);
while(true){
if((i_20493 < n__4659__auto___20492)){
(self__.nexts[i_20493] = (self__.iters[i_20493]).next());

var G__20494 = (i_20493 + (1));
i_20493 = G__20494;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3760__auto__ = !((lt.stepper == null));
if(and__3760__auto__){
return this$.hasNext();
} else {
return and__3760__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__20490 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__20490) : self__.xform.call(null,G__20490));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__20499 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20499) : xform.call(null,G__20499));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__20500_20504 = cljs.core.seq(colls);
var chunk__20501_20505 = null;
var count__20502_20506 = (0);
var i__20503_20507 = (0);
while(true){
if((i__20503_20507 < count__20502_20506)){
var coll_20508 = chunk__20501_20505.cljs$core$IIndexed$_nth$arity$2(null,i__20503_20507);
iters.push(cljs.core.iter(coll_20508));

var G__20509 = seq__20500_20504;
var G__20510 = chunk__20501_20505;
var G__20511 = count__20502_20506;
var G__20512 = (i__20503_20507 + (1));
seq__20500_20504 = G__20509;
chunk__20501_20505 = G__20510;
count__20502_20506 = G__20511;
i__20503_20507 = G__20512;
continue;
} else {
var temp__4126__auto___20513 = cljs.core.seq(seq__20500_20504);
if(temp__4126__auto___20513){
var seq__20500_20514__$1 = temp__4126__auto___20513;
if(cljs.core.chunked_seq_QMARK_(seq__20500_20514__$1)){
var c__4559__auto___20515 = cljs.core.chunk_first(seq__20500_20514__$1);
var G__20516 = cljs.core.chunk_rest(seq__20500_20514__$1);
var G__20517 = c__4559__auto___20515;
var G__20518 = cljs.core.count(c__4559__auto___20515);
var G__20519 = (0);
seq__20500_20504 = G__20516;
chunk__20501_20505 = G__20517;
count__20502_20506 = G__20518;
i__20503_20507 = G__20519;
continue;
} else {
var coll_20520 = cljs.core.first(seq__20500_20514__$1);
iters.push(cljs.core.iter(coll_20520));

var G__20521 = cljs.core.next(seq__20500_20514__$1);
var G__20522 = null;
var G__20523 = (0);
var G__20524 = (0);
seq__20500_20504 = G__20521;
chunk__20501_20505 = G__20522;
count__20502_20506 = G__20523;
i__20503_20507 = G__20524;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3772__auto__ = cljs.core.seq(coll);
if(or__3772__auto__){
return or__3772__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__20525__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__20525 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__20526__i = 0, G__20526__a = new Array(arguments.length -  2);
while (G__20526__i < G__20526__a.length) {G__20526__a[G__20526__i] = arguments[G__20526__i + 2]; ++G__20526__i;}
  colls = new cljs.core.IndexedSeq(G__20526__a,0);
} 
return G__20525__delegate.call(this,xform,coll,colls);};
G__20525.cljs$lang$maxFixedArity = 2;
G__20525.cljs$lang$applyTo = (function (arglist__20527){
var xform = cljs.core.first(arglist__20527);
arglist__20527 = cljs.core.next(arglist__20527);
var coll = cljs.core.first(arglist__20527);
var colls = cljs.core.rest(arglist__20527);
return G__20525__delegate(xform,coll,colls);
});
G__20525.cljs$core$IFn$_invoke$arity$variadic = G__20525__delegate;
return G__20525;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__20528 = null;
if (arguments.length > 2) {
var G__20529__i = 0, G__20529__a = new Array(arguments.length -  2);
while (G__20529__i < G__20529__a.length) {G__20529__a[G__20529__i] = arguments[G__20529__i + 2]; ++G__20529__i;}
G__20528 = new cljs.core.IndexedSeq(G__20529__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__20528);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__20531 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20531) : pred.call(null,G__20531));
})())){
var G__20532 = pred;
var G__20533 = cljs.core.next(coll);
pred = G__20532;
coll = G__20533;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3772__auto__ = (function (){var G__20537 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20537) : pred.call(null,G__20537));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__20538 = pred;
var G__20539 = cljs.core.next(coll);
pred = G__20538;
coll = G__20539;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__20546 = null;
var G__20546__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__20546__1 = (function (x){
return cljs.core.not((function (){var G__20543 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20543) : f.call(null,G__20543));
})());
});
var G__20546__2 = (function (x,y){
return cljs.core.not((function (){var G__20544 = x;
var G__20545 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20544,G__20545) : f.call(null,G__20544,G__20545));
})());
});
var G__20546__3 = (function() { 
var G__20547__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__20547 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__20548__i = 0, G__20548__a = new Array(arguments.length -  2);
while (G__20548__i < G__20548__a.length) {G__20548__a[G__20548__i] = arguments[G__20548__i + 2]; ++G__20548__i;}
  zs = new cljs.core.IndexedSeq(G__20548__a,0);
} 
return G__20547__delegate.call(this,x,y,zs);};
G__20547.cljs$lang$maxFixedArity = 2;
G__20547.cljs$lang$applyTo = (function (arglist__20549){
var x = cljs.core.first(arglist__20549);
arglist__20549 = cljs.core.next(arglist__20549);
var y = cljs.core.first(arglist__20549);
var zs = cljs.core.rest(arglist__20549);
return G__20547__delegate(x,y,zs);
});
G__20547.cljs$core$IFn$_invoke$arity$variadic = G__20547__delegate;
return G__20547;
})()
;
G__20546 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__20546__0.call(this);
case 1:
return G__20546__1.call(this,x);
case 2:
return G__20546__2.call(this,x,y);
default:
var G__20550 = null;
if (arguments.length > 2) {
var G__20551__i = 0, G__20551__a = new Array(arguments.length -  2);
while (G__20551__i < G__20551__a.length) {G__20551__a[G__20551__i] = arguments[G__20551__i + 2]; ++G__20551__i;}
G__20550 = new cljs.core.IndexedSeq(G__20551__a,0);
}
return G__20546__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20546.cljs$lang$maxFixedArity = 2;
G__20546.cljs$lang$applyTo = G__20546__3.cljs$lang$applyTo;
G__20546.cljs$core$IFn$_invoke$arity$0 = G__20546__0;
G__20546.cljs$core$IFn$_invoke$arity$1 = G__20546__1;
G__20546.cljs$core$IFn$_invoke$arity$2 = G__20546__2;
G__20546.cljs$core$IFn$_invoke$arity$variadic = G__20546__3.cljs$core$IFn$_invoke$arity$variadic;
return G__20546;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__20552__delegate = function (args){
return x;
};
var G__20552 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20553__i = 0, G__20553__a = new Array(arguments.length -  0);
while (G__20553__i < G__20553__a.length) {G__20553__a[G__20553__i] = arguments[G__20553__i + 0]; ++G__20553__i;}
  args = new cljs.core.IndexedSeq(G__20553__a,0);
} 
return G__20552__delegate.call(this,args);};
G__20552.cljs$lang$maxFixedArity = 0;
G__20552.cljs$lang$applyTo = (function (arglist__20554){
var args = cljs.core.seq(arglist__20554);
return G__20552__delegate(args);
});
G__20552.cljs$core$IFn$_invoke$arity$variadic = G__20552__delegate;
return G__20552;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__20609 = null;
var G__20609__0 = (function (){
var G__20582 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20582) : f.call(null,G__20582));
});
var G__20609__1 = (function (x){
var G__20583 = (function (){var G__20584 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20584) : g.call(null,G__20584));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20583) : f.call(null,G__20583));
});
var G__20609__2 = (function (x,y){
var G__20585 = (function (){var G__20586 = x;
var G__20587 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20586,G__20587) : g.call(null,G__20586,G__20587));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20585) : f.call(null,G__20585));
});
var G__20609__3 = (function (x,y,z){
var G__20588 = (function (){var G__20589 = x;
var G__20590 = y;
var G__20591 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20589,G__20590,G__20591) : g.call(null,G__20589,G__20590,G__20591));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20588) : f.call(null,G__20588));
});
var G__20609__4 = (function() { 
var G__20610__delegate = function (x,y,z,args){
var G__20592 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20592) : f.call(null,G__20592));
};
var G__20610 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20611__i = 0, G__20611__a = new Array(arguments.length -  3);
while (G__20611__i < G__20611__a.length) {G__20611__a[G__20611__i] = arguments[G__20611__i + 3]; ++G__20611__i;}
  args = new cljs.core.IndexedSeq(G__20611__a,0);
} 
return G__20610__delegate.call(this,x,y,z,args);};
G__20610.cljs$lang$maxFixedArity = 3;
G__20610.cljs$lang$applyTo = (function (arglist__20612){
var x = cljs.core.first(arglist__20612);
arglist__20612 = cljs.core.next(arglist__20612);
var y = cljs.core.first(arglist__20612);
arglist__20612 = cljs.core.next(arglist__20612);
var z = cljs.core.first(arglist__20612);
var args = cljs.core.rest(arglist__20612);
return G__20610__delegate(x,y,z,args);
});
G__20610.cljs$core$IFn$_invoke$arity$variadic = G__20610__delegate;
return G__20610;
})()
;
G__20609 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20609__0.call(this);
case 1:
return G__20609__1.call(this,x);
case 2:
return G__20609__2.call(this,x,y);
case 3:
return G__20609__3.call(this,x,y,z);
default:
var G__20613 = null;
if (arguments.length > 3) {
var G__20614__i = 0, G__20614__a = new Array(arguments.length -  3);
while (G__20614__i < G__20614__a.length) {G__20614__a[G__20614__i] = arguments[G__20614__i + 3]; ++G__20614__i;}
G__20613 = new cljs.core.IndexedSeq(G__20614__a,0);
}
return G__20609__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20613);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20609.cljs$lang$maxFixedArity = 3;
G__20609.cljs$lang$applyTo = G__20609__4.cljs$lang$applyTo;
G__20609.cljs$core$IFn$_invoke$arity$0 = G__20609__0;
G__20609.cljs$core$IFn$_invoke$arity$1 = G__20609__1;
G__20609.cljs$core$IFn$_invoke$arity$2 = G__20609__2;
G__20609.cljs$core$IFn$_invoke$arity$3 = G__20609__3;
G__20609.cljs$core$IFn$_invoke$arity$variadic = G__20609__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20609;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__20615 = null;
var G__20615__0 = (function (){
var G__20593 = (function (){var G__20594 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20594) : g.call(null,G__20594));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20593) : f.call(null,G__20593));
});
var G__20615__1 = (function (x){
var G__20595 = (function (){var G__20596 = (function (){var G__20597 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__20597) : h.call(null,G__20597));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20596) : g.call(null,G__20596));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20595) : f.call(null,G__20595));
});
var G__20615__2 = (function (x,y){
var G__20598 = (function (){var G__20599 = (function (){var G__20600 = x;
var G__20601 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__20600,G__20601) : h.call(null,G__20600,G__20601));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20599) : g.call(null,G__20599));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20598) : f.call(null,G__20598));
});
var G__20615__3 = (function (x,y,z){
var G__20602 = (function (){var G__20603 = (function (){var G__20604 = x;
var G__20605 = y;
var G__20606 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__20604,G__20605,G__20606) : h.call(null,G__20604,G__20605,G__20606));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20603) : g.call(null,G__20603));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20602) : f.call(null,G__20602));
});
var G__20615__4 = (function() { 
var G__20616__delegate = function (x,y,z,args){
var G__20607 = (function (){var G__20608 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20608) : g.call(null,G__20608));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20607) : f.call(null,G__20607));
};
var G__20616 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20617__i = 0, G__20617__a = new Array(arguments.length -  3);
while (G__20617__i < G__20617__a.length) {G__20617__a[G__20617__i] = arguments[G__20617__i + 3]; ++G__20617__i;}
  args = new cljs.core.IndexedSeq(G__20617__a,0);
} 
return G__20616__delegate.call(this,x,y,z,args);};
G__20616.cljs$lang$maxFixedArity = 3;
G__20616.cljs$lang$applyTo = (function (arglist__20618){
var x = cljs.core.first(arglist__20618);
arglist__20618 = cljs.core.next(arglist__20618);
var y = cljs.core.first(arglist__20618);
arglist__20618 = cljs.core.next(arglist__20618);
var z = cljs.core.first(arglist__20618);
var args = cljs.core.rest(arglist__20618);
return G__20616__delegate(x,y,z,args);
});
G__20616.cljs$core$IFn$_invoke$arity$variadic = G__20616__delegate;
return G__20616;
})()
;
G__20615 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20615__0.call(this);
case 1:
return G__20615__1.call(this,x);
case 2:
return G__20615__2.call(this,x,y);
case 3:
return G__20615__3.call(this,x,y,z);
default:
var G__20619 = null;
if (arguments.length > 3) {
var G__20620__i = 0, G__20620__a = new Array(arguments.length -  3);
while (G__20620__i < G__20620__a.length) {G__20620__a[G__20620__i] = arguments[G__20620__i + 3]; ++G__20620__i;}
G__20619 = new cljs.core.IndexedSeq(G__20620__a,0);
}
return G__20615__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20615.cljs$lang$maxFixedArity = 3;
G__20615.cljs$lang$applyTo = G__20615__4.cljs$lang$applyTo;
G__20615.cljs$core$IFn$_invoke$arity$0 = G__20615__0;
G__20615.cljs$core$IFn$_invoke$arity$1 = G__20615__1;
G__20615.cljs$core$IFn$_invoke$arity$2 = G__20615__2;
G__20615.cljs$core$IFn$_invoke$arity$3 = G__20615__3;
G__20615.cljs$core$IFn$_invoke$arity$variadic = G__20615__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20615;
})()
});
var comp__4 = (function() { 
var G__20621__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__20622__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__20623 = cljs.core.first(fs__$2).call(null,ret);
var G__20624 = cljs.core.next(fs__$2);
ret = G__20623;
fs__$2 = G__20624;
continue;
} else {
return ret;
}
break;
}
};
var G__20622 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20625__i = 0, G__20625__a = new Array(arguments.length -  0);
while (G__20625__i < G__20625__a.length) {G__20625__a[G__20625__i] = arguments[G__20625__i + 0]; ++G__20625__i;}
  args = new cljs.core.IndexedSeq(G__20625__a,0);
} 
return G__20622__delegate.call(this,args);};
G__20622.cljs$lang$maxFixedArity = 0;
G__20622.cljs$lang$applyTo = (function (arglist__20626){
var args = cljs.core.seq(arglist__20626);
return G__20622__delegate(args);
});
G__20622.cljs$core$IFn$_invoke$arity$variadic = G__20622__delegate;
return G__20622;
})()
;
;})(fs__$1))
};
var G__20621 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__20627__i = 0, G__20627__a = new Array(arguments.length -  3);
while (G__20627__i < G__20627__a.length) {G__20627__a[G__20627__i] = arguments[G__20627__i + 3]; ++G__20627__i;}
  fs = new cljs.core.IndexedSeq(G__20627__a,0);
} 
return G__20621__delegate.call(this,f1,f2,f3,fs);};
G__20621.cljs$lang$maxFixedArity = 3;
G__20621.cljs$lang$applyTo = (function (arglist__20628){
var f1 = cljs.core.first(arglist__20628);
arglist__20628 = cljs.core.next(arglist__20628);
var f2 = cljs.core.first(arglist__20628);
arglist__20628 = cljs.core.next(arglist__20628);
var f3 = cljs.core.first(arglist__20628);
var fs = cljs.core.rest(arglist__20628);
return G__20621__delegate(f1,f2,f3,fs);
});
G__20621.cljs$core$IFn$_invoke$arity$variadic = G__20621__delegate;
return G__20621;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__20629 = null;
if (arguments.length > 3) {
var G__20630__i = 0, G__20630__a = new Array(arguments.length -  3);
while (G__20630__i < G__20630__a.length) {G__20630__a[G__20630__i] = arguments[G__20630__i + 3]; ++G__20630__i;}
G__20629 = new cljs.core.IndexedSeq(G__20630__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__20629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__20715 = null;
var G__20715__0 = (function (){
var G__20673 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20673) : f.call(null,G__20673));
});
var G__20715__1 = (function (x){
var G__20674 = arg1;
var G__20675 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20674,G__20675) : f.call(null,G__20674,G__20675));
});
var G__20715__2 = (function (x,y){
var G__20676 = arg1;
var G__20677 = x;
var G__20678 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20676,G__20677,G__20678) : f.call(null,G__20676,G__20677,G__20678));
});
var G__20715__3 = (function (x,y,z){
var G__20679 = arg1;
var G__20680 = x;
var G__20681 = y;
var G__20682 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20679,G__20680,G__20681,G__20682) : f.call(null,G__20679,G__20680,G__20681,G__20682));
});
var G__20715__4 = (function() { 
var G__20716__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__20716 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20717__i = 0, G__20717__a = new Array(arguments.length -  3);
while (G__20717__i < G__20717__a.length) {G__20717__a[G__20717__i] = arguments[G__20717__i + 3]; ++G__20717__i;}
  args = new cljs.core.IndexedSeq(G__20717__a,0);
} 
return G__20716__delegate.call(this,x,y,z,args);};
G__20716.cljs$lang$maxFixedArity = 3;
G__20716.cljs$lang$applyTo = (function (arglist__20718){
var x = cljs.core.first(arglist__20718);
arglist__20718 = cljs.core.next(arglist__20718);
var y = cljs.core.first(arglist__20718);
arglist__20718 = cljs.core.next(arglist__20718);
var z = cljs.core.first(arglist__20718);
var args = cljs.core.rest(arglist__20718);
return G__20716__delegate(x,y,z,args);
});
G__20716.cljs$core$IFn$_invoke$arity$variadic = G__20716__delegate;
return G__20716;
})()
;
G__20715 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20715__0.call(this);
case 1:
return G__20715__1.call(this,x);
case 2:
return G__20715__2.call(this,x,y);
case 3:
return G__20715__3.call(this,x,y,z);
default:
var G__20719 = null;
if (arguments.length > 3) {
var G__20720__i = 0, G__20720__a = new Array(arguments.length -  3);
while (G__20720__i < G__20720__a.length) {G__20720__a[G__20720__i] = arguments[G__20720__i + 3]; ++G__20720__i;}
G__20719 = new cljs.core.IndexedSeq(G__20720__a,0);
}
return G__20715__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20719);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20715.cljs$lang$maxFixedArity = 3;
G__20715.cljs$lang$applyTo = G__20715__4.cljs$lang$applyTo;
G__20715.cljs$core$IFn$_invoke$arity$0 = G__20715__0;
G__20715.cljs$core$IFn$_invoke$arity$1 = G__20715__1;
G__20715.cljs$core$IFn$_invoke$arity$2 = G__20715__2;
G__20715.cljs$core$IFn$_invoke$arity$3 = G__20715__3;
G__20715.cljs$core$IFn$_invoke$arity$variadic = G__20715__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20715;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__20721 = null;
var G__20721__0 = (function (){
var G__20683 = arg1;
var G__20684 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20683,G__20684) : f.call(null,G__20683,G__20684));
});
var G__20721__1 = (function (x){
var G__20685 = arg1;
var G__20686 = arg2;
var G__20687 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20685,G__20686,G__20687) : f.call(null,G__20685,G__20686,G__20687));
});
var G__20721__2 = (function (x,y){
var G__20688 = arg1;
var G__20689 = arg2;
var G__20690 = x;
var G__20691 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20688,G__20689,G__20690,G__20691) : f.call(null,G__20688,G__20689,G__20690,G__20691));
});
var G__20721__3 = (function (x,y,z){
var G__20692 = arg1;
var G__20693 = arg2;
var G__20694 = x;
var G__20695 = y;
var G__20696 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20692,G__20693,G__20694,G__20695,G__20696) : f.call(null,G__20692,G__20693,G__20694,G__20695,G__20696));
});
var G__20721__4 = (function() { 
var G__20722__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__20722 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20723__i = 0, G__20723__a = new Array(arguments.length -  3);
while (G__20723__i < G__20723__a.length) {G__20723__a[G__20723__i] = arguments[G__20723__i + 3]; ++G__20723__i;}
  args = new cljs.core.IndexedSeq(G__20723__a,0);
} 
return G__20722__delegate.call(this,x,y,z,args);};
G__20722.cljs$lang$maxFixedArity = 3;
G__20722.cljs$lang$applyTo = (function (arglist__20724){
var x = cljs.core.first(arglist__20724);
arglist__20724 = cljs.core.next(arglist__20724);
var y = cljs.core.first(arglist__20724);
arglist__20724 = cljs.core.next(arglist__20724);
var z = cljs.core.first(arglist__20724);
var args = cljs.core.rest(arglist__20724);
return G__20722__delegate(x,y,z,args);
});
G__20722.cljs$core$IFn$_invoke$arity$variadic = G__20722__delegate;
return G__20722;
})()
;
G__20721 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20721__0.call(this);
case 1:
return G__20721__1.call(this,x);
case 2:
return G__20721__2.call(this,x,y);
case 3:
return G__20721__3.call(this,x,y,z);
default:
var G__20725 = null;
if (arguments.length > 3) {
var G__20726__i = 0, G__20726__a = new Array(arguments.length -  3);
while (G__20726__i < G__20726__a.length) {G__20726__a[G__20726__i] = arguments[G__20726__i + 3]; ++G__20726__i;}
G__20725 = new cljs.core.IndexedSeq(G__20726__a,0);
}
return G__20721__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20721.cljs$lang$maxFixedArity = 3;
G__20721.cljs$lang$applyTo = G__20721__4.cljs$lang$applyTo;
G__20721.cljs$core$IFn$_invoke$arity$0 = G__20721__0;
G__20721.cljs$core$IFn$_invoke$arity$1 = G__20721__1;
G__20721.cljs$core$IFn$_invoke$arity$2 = G__20721__2;
G__20721.cljs$core$IFn$_invoke$arity$3 = G__20721__3;
G__20721.cljs$core$IFn$_invoke$arity$variadic = G__20721__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20721;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__20727 = null;
var G__20727__0 = (function (){
var G__20697 = arg1;
var G__20698 = arg2;
var G__20699 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20697,G__20698,G__20699) : f.call(null,G__20697,G__20698,G__20699));
});
var G__20727__1 = (function (x){
var G__20700 = arg1;
var G__20701 = arg2;
var G__20702 = arg3;
var G__20703 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20700,G__20701,G__20702,G__20703) : f.call(null,G__20700,G__20701,G__20702,G__20703));
});
var G__20727__2 = (function (x,y){
var G__20704 = arg1;
var G__20705 = arg2;
var G__20706 = arg3;
var G__20707 = x;
var G__20708 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20704,G__20705,G__20706,G__20707,G__20708) : f.call(null,G__20704,G__20705,G__20706,G__20707,G__20708));
});
var G__20727__3 = (function (x,y,z){
var G__20709 = arg1;
var G__20710 = arg2;
var G__20711 = arg3;
var G__20712 = x;
var G__20713 = y;
var G__20714 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20709,G__20710,G__20711,G__20712,G__20713,G__20714) : f.call(null,G__20709,G__20710,G__20711,G__20712,G__20713,G__20714));
});
var G__20727__4 = (function() { 
var G__20728__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__20728 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20729__i = 0, G__20729__a = new Array(arguments.length -  3);
while (G__20729__i < G__20729__a.length) {G__20729__a[G__20729__i] = arguments[G__20729__i + 3]; ++G__20729__i;}
  args = new cljs.core.IndexedSeq(G__20729__a,0);
} 
return G__20728__delegate.call(this,x,y,z,args);};
G__20728.cljs$lang$maxFixedArity = 3;
G__20728.cljs$lang$applyTo = (function (arglist__20730){
var x = cljs.core.first(arglist__20730);
arglist__20730 = cljs.core.next(arglist__20730);
var y = cljs.core.first(arglist__20730);
arglist__20730 = cljs.core.next(arglist__20730);
var z = cljs.core.first(arglist__20730);
var args = cljs.core.rest(arglist__20730);
return G__20728__delegate(x,y,z,args);
});
G__20728.cljs$core$IFn$_invoke$arity$variadic = G__20728__delegate;
return G__20728;
})()
;
G__20727 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20727__0.call(this);
case 1:
return G__20727__1.call(this,x);
case 2:
return G__20727__2.call(this,x,y);
case 3:
return G__20727__3.call(this,x,y,z);
default:
var G__20731 = null;
if (arguments.length > 3) {
var G__20732__i = 0, G__20732__a = new Array(arguments.length -  3);
while (G__20732__i < G__20732__a.length) {G__20732__a[G__20732__i] = arguments[G__20732__i + 3]; ++G__20732__i;}
G__20731 = new cljs.core.IndexedSeq(G__20732__a,0);
}
return G__20727__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20731);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20727.cljs$lang$maxFixedArity = 3;
G__20727.cljs$lang$applyTo = G__20727__4.cljs$lang$applyTo;
G__20727.cljs$core$IFn$_invoke$arity$0 = G__20727__0;
G__20727.cljs$core$IFn$_invoke$arity$1 = G__20727__1;
G__20727.cljs$core$IFn$_invoke$arity$2 = G__20727__2;
G__20727.cljs$core$IFn$_invoke$arity$3 = G__20727__3;
G__20727.cljs$core$IFn$_invoke$arity$variadic = G__20727__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20727;
})()
});
var partial__5 = (function() { 
var G__20733__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__20734__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__20734 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20735__i = 0, G__20735__a = new Array(arguments.length -  0);
while (G__20735__i < G__20735__a.length) {G__20735__a[G__20735__i] = arguments[G__20735__i + 0]; ++G__20735__i;}
  args = new cljs.core.IndexedSeq(G__20735__a,0);
} 
return G__20734__delegate.call(this,args);};
G__20734.cljs$lang$maxFixedArity = 0;
G__20734.cljs$lang$applyTo = (function (arglist__20736){
var args = cljs.core.seq(arglist__20736);
return G__20734__delegate(args);
});
G__20734.cljs$core$IFn$_invoke$arity$variadic = G__20734__delegate;
return G__20734;
})()
;
};
var G__20733 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__20737__i = 0, G__20737__a = new Array(arguments.length -  4);
while (G__20737__i < G__20737__a.length) {G__20737__a[G__20737__i] = arguments[G__20737__i + 4]; ++G__20737__i;}
  more = new cljs.core.IndexedSeq(G__20737__a,0);
} 
return G__20733__delegate.call(this,f,arg1,arg2,arg3,more);};
G__20733.cljs$lang$maxFixedArity = 4;
G__20733.cljs$lang$applyTo = (function (arglist__20738){
var f = cljs.core.first(arglist__20738);
arglist__20738 = cljs.core.next(arglist__20738);
var arg1 = cljs.core.first(arglist__20738);
arglist__20738 = cljs.core.next(arglist__20738);
var arg2 = cljs.core.first(arglist__20738);
arglist__20738 = cljs.core.next(arglist__20738);
var arg3 = cljs.core.first(arglist__20738);
var more = cljs.core.rest(arglist__20738);
return G__20733__delegate(f,arg1,arg2,arg3,more);
});
G__20733.cljs$core$IFn$_invoke$arity$variadic = G__20733__delegate;
return G__20733;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__20739 = null;
if (arguments.length > 4) {
var G__20740__i = 0, G__20740__a = new Array(arguments.length -  4);
while (G__20740__i < G__20740__a.length) {G__20740__a[G__20740__i] = arguments[G__20740__i + 4]; ++G__20740__i;}
G__20739 = new cljs.core.IndexedSeq(G__20740__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__20739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__20773 = null;
var G__20773__1 = (function (a){
var G__20757 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20757) : f.call(null,G__20757));
});
var G__20773__2 = (function (a,b){
var G__20758 = (((a == null))?x:a);
var G__20759 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20758,G__20759) : f.call(null,G__20758,G__20759));
});
var G__20773__3 = (function (a,b,c){
var G__20760 = (((a == null))?x:a);
var G__20761 = b;
var G__20762 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20760,G__20761,G__20762) : f.call(null,G__20760,G__20761,G__20762));
});
var G__20773__4 = (function() { 
var G__20774__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__20774 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20775__i = 0, G__20775__a = new Array(arguments.length -  3);
while (G__20775__i < G__20775__a.length) {G__20775__a[G__20775__i] = arguments[G__20775__i + 3]; ++G__20775__i;}
  ds = new cljs.core.IndexedSeq(G__20775__a,0);
} 
return G__20774__delegate.call(this,a,b,c,ds);};
G__20774.cljs$lang$maxFixedArity = 3;
G__20774.cljs$lang$applyTo = (function (arglist__20776){
var a = cljs.core.first(arglist__20776);
arglist__20776 = cljs.core.next(arglist__20776);
var b = cljs.core.first(arglist__20776);
arglist__20776 = cljs.core.next(arglist__20776);
var c = cljs.core.first(arglist__20776);
var ds = cljs.core.rest(arglist__20776);
return G__20774__delegate(a,b,c,ds);
});
G__20774.cljs$core$IFn$_invoke$arity$variadic = G__20774__delegate;
return G__20774;
})()
;
G__20773 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__20773__1.call(this,a);
case 2:
return G__20773__2.call(this,a,b);
case 3:
return G__20773__3.call(this,a,b,c);
default:
var G__20777 = null;
if (arguments.length > 3) {
var G__20778__i = 0, G__20778__a = new Array(arguments.length -  3);
while (G__20778__i < G__20778__a.length) {G__20778__a[G__20778__i] = arguments[G__20778__i + 3]; ++G__20778__i;}
G__20777 = new cljs.core.IndexedSeq(G__20778__a,0);
}
return G__20773__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20777);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20773.cljs$lang$maxFixedArity = 3;
G__20773.cljs$lang$applyTo = G__20773__4.cljs$lang$applyTo;
G__20773.cljs$core$IFn$_invoke$arity$1 = G__20773__1;
G__20773.cljs$core$IFn$_invoke$arity$2 = G__20773__2;
G__20773.cljs$core$IFn$_invoke$arity$3 = G__20773__3;
G__20773.cljs$core$IFn$_invoke$arity$variadic = G__20773__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20773;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__20779 = null;
var G__20779__2 = (function (a,b){
var G__20763 = (((a == null))?x:a);
var G__20764 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20763,G__20764) : f.call(null,G__20763,G__20764));
});
var G__20779__3 = (function (a,b,c){
var G__20765 = (((a == null))?x:a);
var G__20766 = (((b == null))?y:b);
var G__20767 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20765,G__20766,G__20767) : f.call(null,G__20765,G__20766,G__20767));
});
var G__20779__4 = (function() { 
var G__20780__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__20780 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20781__i = 0, G__20781__a = new Array(arguments.length -  3);
while (G__20781__i < G__20781__a.length) {G__20781__a[G__20781__i] = arguments[G__20781__i + 3]; ++G__20781__i;}
  ds = new cljs.core.IndexedSeq(G__20781__a,0);
} 
return G__20780__delegate.call(this,a,b,c,ds);};
G__20780.cljs$lang$maxFixedArity = 3;
G__20780.cljs$lang$applyTo = (function (arglist__20782){
var a = cljs.core.first(arglist__20782);
arglist__20782 = cljs.core.next(arglist__20782);
var b = cljs.core.first(arglist__20782);
arglist__20782 = cljs.core.next(arglist__20782);
var c = cljs.core.first(arglist__20782);
var ds = cljs.core.rest(arglist__20782);
return G__20780__delegate(a,b,c,ds);
});
G__20780.cljs$core$IFn$_invoke$arity$variadic = G__20780__delegate;
return G__20780;
})()
;
G__20779 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20779__2.call(this,a,b);
case 3:
return G__20779__3.call(this,a,b,c);
default:
var G__20783 = null;
if (arguments.length > 3) {
var G__20784__i = 0, G__20784__a = new Array(arguments.length -  3);
while (G__20784__i < G__20784__a.length) {G__20784__a[G__20784__i] = arguments[G__20784__i + 3]; ++G__20784__i;}
G__20783 = new cljs.core.IndexedSeq(G__20784__a,0);
}
return G__20779__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20783);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20779.cljs$lang$maxFixedArity = 3;
G__20779.cljs$lang$applyTo = G__20779__4.cljs$lang$applyTo;
G__20779.cljs$core$IFn$_invoke$arity$2 = G__20779__2;
G__20779.cljs$core$IFn$_invoke$arity$3 = G__20779__3;
G__20779.cljs$core$IFn$_invoke$arity$variadic = G__20779__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20779;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__20785 = null;
var G__20785__2 = (function (a,b){
var G__20768 = (((a == null))?x:a);
var G__20769 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20768,G__20769) : f.call(null,G__20768,G__20769));
});
var G__20785__3 = (function (a,b,c){
var G__20770 = (((a == null))?x:a);
var G__20771 = (((b == null))?y:b);
var G__20772 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20770,G__20771,G__20772) : f.call(null,G__20770,G__20771,G__20772));
});
var G__20785__4 = (function() { 
var G__20786__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__20786 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20787__i = 0, G__20787__a = new Array(arguments.length -  3);
while (G__20787__i < G__20787__a.length) {G__20787__a[G__20787__i] = arguments[G__20787__i + 3]; ++G__20787__i;}
  ds = new cljs.core.IndexedSeq(G__20787__a,0);
} 
return G__20786__delegate.call(this,a,b,c,ds);};
G__20786.cljs$lang$maxFixedArity = 3;
G__20786.cljs$lang$applyTo = (function (arglist__20788){
var a = cljs.core.first(arglist__20788);
arglist__20788 = cljs.core.next(arglist__20788);
var b = cljs.core.first(arglist__20788);
arglist__20788 = cljs.core.next(arglist__20788);
var c = cljs.core.first(arglist__20788);
var ds = cljs.core.rest(arglist__20788);
return G__20786__delegate(a,b,c,ds);
});
G__20786.cljs$core$IFn$_invoke$arity$variadic = G__20786__delegate;
return G__20786;
})()
;
G__20785 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20785__2.call(this,a,b);
case 3:
return G__20785__3.call(this,a,b,c);
default:
var G__20789 = null;
if (arguments.length > 3) {
var G__20790__i = 0, G__20790__a = new Array(arguments.length -  3);
while (G__20790__i < G__20790__a.length) {G__20790__a[G__20790__i] = arguments[G__20790__i + 3]; ++G__20790__i;}
G__20789 = new cljs.core.IndexedSeq(G__20790__a,0);
}
return G__20785__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20789);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20785.cljs$lang$maxFixedArity = 3;
G__20785.cljs$lang$applyTo = G__20785__4.cljs$lang$applyTo;
G__20785.cljs$core$IFn$_invoke$arity$2 = G__20785__2;
G__20785.cljs$core$IFn$_invoke$arity$3 = G__20785__3;
G__20785.cljs$core$IFn$_invoke$arity$variadic = G__20785__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20785;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__20821 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__20821) : cljs.core.volatile_BANG_.call(null,G__20821));
})();
return ((function (i){
return (function() {
var G__20851 = null;
var G__20851__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20851__1 = (function (result){
var G__20822 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20822) : rf.call(null,G__20822));
});
var G__20851__2 = (function (result,input){
var G__20823 = result;
var G__20824 = (function (){var G__20825 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__20826 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20825,G__20826) : f.call(null,G__20825,G__20826));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20823,G__20824) : rf.call(null,G__20823,G__20824));
});
G__20851 = function(result,input){
switch(arguments.length){
case 0:
return G__20851__0.call(this);
case 1:
return G__20851__1.call(this,result);
case 2:
return G__20851__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20851.cljs$core$IFn$_invoke$arity$0 = G__20851__0;
G__20851.cljs$core$IFn$_invoke$arity$1 = G__20851__1;
G__20851.cljs$core$IFn$_invoke$arity$2 = G__20851__2;
return G__20851;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___20852 = size;
var i_20853 = (0);
while(true){
if((i_20853 < n__4659__auto___20852)){
cljs.core.chunk_append(b,(function (){var G__20847 = (idx + i_20853);
var G__20848 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20853);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20847,G__20848) : f.call(null,G__20847,G__20848));
})());

var G__20854 = (i_20853 + (1));
i_20853 = G__20854;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__20849 = idx;
var G__20850 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20849,G__20850) : f.call(null,G__20849,G__20850));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__20873 = null;
var G__20873__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20873__1 = (function (result){
var G__20867 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20867) : rf.call(null,G__20867));
});
var G__20873__2 = (function (result,input){
var v = (function (){var G__20868 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20868) : f.call(null,G__20868));
})();
if((v == null)){
return result;
} else {
var G__20869 = result;
var G__20870 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20869,G__20870) : rf.call(null,G__20869,G__20870));
}
});
G__20873 = function(result,input){
switch(arguments.length){
case 0:
return G__20873__0.call(this);
case 1:
return G__20873__1.call(this,result);
case 2:
return G__20873__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20873.cljs$core$IFn$_invoke$arity$0 = G__20873__0;
G__20873.cljs$core$IFn$_invoke$arity$1 = G__20873__1;
G__20873.cljs$core$IFn$_invoke$arity$2 = G__20873__2;
return G__20873;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___20874 = size;
var i_20875 = (0);
while(true){
if((i_20875 < n__4659__auto___20874)){
var x_20876 = (function (){var G__20871 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20875);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20871) : f.call(null,G__20871));
})();
if((x_20876 == null)){
} else {
cljs.core.chunk_append(b,x_20876);
}

var G__20877 = (i_20875 + (1));
i_20875 = G__20877;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__20872 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20872) : f.call(null,G__20872));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__20878 = this$__$1;
return goog.getUid(G__20878);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__20879 = cljs.core.seq(self__.watches);
var chunk__20880 = null;
var count__20881 = (0);
var i__20882 = (0);
while(true){
if((i__20882 < count__20881)){
var vec__20883 = chunk__20880.cljs$core$IIndexed$_nth$arity$2(null,i__20882);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20883,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20883,(1),null);
var G__20884_20893 = key;
var G__20885_20894 = this$__$1;
var G__20886_20895 = oldval;
var G__20887_20896 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20884_20893,G__20885_20894,G__20886_20895,G__20887_20896) : f.call(null,G__20884_20893,G__20885_20894,G__20886_20895,G__20887_20896));

var G__20897 = seq__20879;
var G__20898 = chunk__20880;
var G__20899 = count__20881;
var G__20900 = (i__20882 + (1));
seq__20879 = G__20897;
chunk__20880 = G__20898;
count__20881 = G__20899;
i__20882 = G__20900;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__20879);
if(temp__4126__auto__){
var seq__20879__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__20879__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__20879__$1);
var G__20901 = cljs.core.chunk_rest(seq__20879__$1);
var G__20902 = c__4559__auto__;
var G__20903 = cljs.core.count(c__4559__auto__);
var G__20904 = (0);
seq__20879 = G__20901;
chunk__20880 = G__20902;
count__20881 = G__20903;
i__20882 = G__20904;
continue;
} else {
var vec__20888 = cljs.core.first(seq__20879__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20888,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__20888,(1),null);
var G__20889_20905 = key;
var G__20890_20906 = this$__$1;
var G__20891_20907 = oldval;
var G__20892_20908 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20889_20905,G__20890_20906,G__20891_20907,G__20892_20908) : f.call(null,G__20889_20905,G__20890_20906,G__20891_20907,G__20892_20908));

var G__20909 = cljs.core.next(seq__20879__$1);
var G__20910 = null;
var G__20911 = (0);
var G__20912 = (0);
seq__20879 = G__20909;
chunk__20880 = G__20910;
count__20881 = G__20911;
i__20882 = G__20912;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__20916__delegate = function (x,p__20913){
var map__20915 = p__20913;
var map__20915__$1 = ((cljs.core.seq_QMARK_(map__20915))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__20915):map__20915);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20915__$1,cljs.core.constant$keyword$89);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__20915__$1,cljs.core.constant$keyword$79);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__20916 = function (x,var_args){
var p__20913 = null;
if (arguments.length > 1) {
var G__20917__i = 0, G__20917__a = new Array(arguments.length -  1);
while (G__20917__i < G__20917__a.length) {G__20917__a[G__20917__i] = arguments[G__20917__i + 1]; ++G__20917__i;}
  p__20913 = new cljs.core.IndexedSeq(G__20917__a,0);
} 
return G__20916__delegate.call(this,x,p__20913);};
G__20916.cljs$lang$maxFixedArity = 1;
G__20916.cljs$lang$applyTo = (function (arglist__20918){
var x = cljs.core.first(arglist__20918);
var p__20913 = cljs.core.rest(arglist__20918);
return G__20916__delegate(x,p__20913);
});
G__20916.cljs$core$IFn$_invoke$arity$variadic = G__20916__delegate;
return G__20916;
})()
;
atom = function(x,var_args){
var p__20913 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__20919 = null;
if (arguments.length > 1) {
var G__20920__i = 0, G__20920__a = new Array(arguments.length -  1);
while (G__20920__i < G__20920__a.length) {G__20920__a[G__20920__i] = arguments[G__20920__i + 1]; ++G__20920__i;}
G__20919 = new cljs.core.IndexedSeq(G__20920__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__20919);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__20923 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__20923) : validate.call(null,G__20923));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__20924 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__20924) : cljs.core.pr_str.call(null,G__20924));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20931 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20931) : f.call(null,G__20931));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20932 = a.state;
var G__20933 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20932,G__20933) : f.call(null,G__20932,G__20933));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__20934 = a.state;
var G__20935 = x;
var G__20936 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20934,G__20935,G__20936) : f.call(null,G__20934,G__20935,G__20936));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__20937__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__20937 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__20938__i = 0, G__20938__a = new Array(arguments.length -  4);
while (G__20938__i < G__20938__a.length) {G__20938__a[G__20938__i] = arguments[G__20938__i + 4]; ++G__20938__i;}
  more = new cljs.core.IndexedSeq(G__20938__a,0);
} 
return G__20937__delegate.call(this,a,f,x,y,more);};
G__20937.cljs$lang$maxFixedArity = 4;
G__20937.cljs$lang$applyTo = (function (arglist__20939){
var a = cljs.core.first(arglist__20939);
arglist__20939 = cljs.core.next(arglist__20939);
var f = cljs.core.first(arglist__20939);
arglist__20939 = cljs.core.next(arglist__20939);
var x = cljs.core.first(arglist__20939);
arglist__20939 = cljs.core.next(arglist__20939);
var y = cljs.core.first(arglist__20939);
var more = cljs.core.rest(arglist__20939);
return G__20937__delegate(a,f,x,y,more);
});
G__20937.cljs$core$IFn$_invoke$arity$variadic = G__20937__delegate;
return G__20937;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__20940 = null;
if (arguments.length > 4) {
var G__20941__i = 0, G__20941__a = new Array(arguments.length -  4);
while (G__20941__i < G__20941__a.length) {G__20941__a[G__20941__i] = arguments[G__20941__i + 4]; ++G__20941__i;}
G__20940 = new cljs.core.IndexedSeq(G__20941__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__20940);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__21008 = null;
var G__21008__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21008__1 = (function (result){
var G__20975 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20975) : rf.call(null,G__20975));
});
var G__21008__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__20976 = i;
var G__20977 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20976,G__20977) : f.call(null,G__20976,G__20977));
})();
if((v == null)){
return result;
} else {
var G__20978 = result;
var G__20979 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20978,G__20979) : rf.call(null,G__20978,G__20979));
}
});
G__21008 = function(result,input){
switch(arguments.length){
case 0:
return G__21008__0.call(this);
case 1:
return G__21008__1.call(this,result);
case 2:
return G__21008__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21008.cljs$core$IFn$_invoke$arity$0 = G__21008__0;
G__21008.cljs$core$IFn$_invoke$arity$1 = G__21008__1;
G__21008.cljs$core$IFn$_invoke$arity$2 = G__21008__2;
return G__21008;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___21009 = size;
var i_21010 = (0);
while(true){
if((i_21010 < n__4659__auto___21009)){
var x_21011 = (function (){var G__21004 = (idx + i_21010);
var G__21005 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21010);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21004,G__21005) : f.call(null,G__21004,G__21005));
})();
if((x_21011 == null)){
} else {
cljs.core.chunk_append(b,x_21011);
}

var G__21012 = (i_21010 + (1));
i_21010 = G__21012;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__21006 = idx;
var G__21007 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21006,G__21007) : f.call(null,G__21006,G__21007));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__21226 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21226) : p.call(null,G__21226));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21228 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21228) : p.call(null,G__21228));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__21229 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21229) : p.call(null,G__21229));
} else {
return and__3760__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21231 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21231) : p.call(null,G__21231));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21233 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21233) : p.call(null,G__21233));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__21234 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21234) : p.call(null,G__21234));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__21403__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__21403 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21404__i = 0, G__21404__a = new Array(arguments.length -  3);
while (G__21404__i < G__21404__a.length) {G__21404__a[G__21404__i] = arguments[G__21404__i + 3]; ++G__21404__i;}
  args = new cljs.core.IndexedSeq(G__21404__a,0);
} 
return G__21403__delegate.call(this,x,y,z,args);};
G__21403.cljs$lang$maxFixedArity = 3;
G__21403.cljs$lang$applyTo = (function (arglist__21405){
var x = cljs.core.first(arglist__21405);
arglist__21405 = cljs.core.next(arglist__21405);
var y = cljs.core.first(arglist__21405);
arglist__21405 = cljs.core.next(arglist__21405);
var z = cljs.core.first(arglist__21405);
var args = cljs.core.rest(arglist__21405);
return G__21403__delegate(x,y,z,args);
});
G__21403.cljs$core$IFn$_invoke$arity$variadic = G__21403__delegate;
return G__21403;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__21406 = null;
if (arguments.length > 3) {
var G__21407__i = 0, G__21407__a = new Array(arguments.length -  3);
while (G__21407__i < G__21407__a.length) {G__21407__a[G__21407__i] = arguments[G__21407__i + 3]; ++G__21407__i;}
G__21406 = new cljs.core.IndexedSeq(G__21407__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21266 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21266) : p1.call(null,G__21266));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__21267 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21267) : p2.call(null,G__21267));
} else {
return and__3760__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21269 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21269) : p1.call(null,G__21269));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21271 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21271) : p1.call(null,G__21271));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__21273 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21273) : p2.call(null,G__21273));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var G__21274 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21274) : p2.call(null,G__21274));
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21276 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21276) : p1.call(null,G__21276));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21278 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21278) : p1.call(null,G__21278));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__21280 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21280) : p1.call(null,G__21280));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var and__3760__auto____$3 = (function (){var G__21282 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21282) : p2.call(null,G__21282));
})();
if(cljs.core.truth_(and__3760__auto____$3)){
var and__3760__auto____$4 = (function (){var G__21284 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21284) : p2.call(null,G__21284));
})();
if(cljs.core.truth_(and__3760__auto____$4)){
var G__21285 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21285) : p2.call(null,G__21285));
} else {
return and__3760__auto____$4;
}
} else {
return and__3760__auto____$3;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__21408__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21013_SHARP_){
var and__3760__auto__ = (function (){var G__21290 = p1__21013_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21290) : p1.call(null,G__21290));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__21291 = p1__21013_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21291) : p2.call(null,G__21291));
} else {
return and__3760__auto__;
}
}),args)));
};
var G__21408 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21409__i = 0, G__21409__a = new Array(arguments.length -  3);
while (G__21409__i < G__21409__a.length) {G__21409__a[G__21409__i] = arguments[G__21409__i + 3]; ++G__21409__i;}
  args = new cljs.core.IndexedSeq(G__21409__a,0);
} 
return G__21408__delegate.call(this,x,y,z,args);};
G__21408.cljs$lang$maxFixedArity = 3;
G__21408.cljs$lang$applyTo = (function (arglist__21410){
var x = cljs.core.first(arglist__21410);
arglist__21410 = cljs.core.next(arglist__21410);
var y = cljs.core.first(arglist__21410);
arglist__21410 = cljs.core.next(arglist__21410);
var z = cljs.core.first(arglist__21410);
var args = cljs.core.rest(arglist__21410);
return G__21408__delegate(x,y,z,args);
});
G__21408.cljs$core$IFn$_invoke$arity$variadic = G__21408__delegate;
return G__21408;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__21411 = null;
if (arguments.length > 3) {
var G__21412__i = 0, G__21412__a = new Array(arguments.length -  3);
while (G__21412__i < G__21412__a.length) {G__21412__a[G__21412__i] = arguments[G__21412__i + 3]; ++G__21412__i;}
G__21411 = new cljs.core.IndexedSeq(G__21412__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21411);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21337 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21337) : p1.call(null,G__21337));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21339 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21339) : p2.call(null,G__21339));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__21340 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21340) : p3.call(null,G__21340));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21342 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21342) : p1.call(null,G__21342));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21344 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21344) : p2.call(null,G__21344));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__21346 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21346) : p3.call(null,G__21346));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var and__3760__auto____$3 = (function (){var G__21348 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21348) : p1.call(null,G__21348));
})();
if(cljs.core.truth_(and__3760__auto____$3)){
var and__3760__auto____$4 = (function (){var G__21350 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21350) : p2.call(null,G__21350));
})();
if(cljs.core.truth_(and__3760__auto____$4)){
var G__21351 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21351) : p3.call(null,G__21351));
} else {
return and__3760__auto____$4;
}
} else {
return and__3760__auto____$3;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21353 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21353) : p1.call(null,G__21353));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21355 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21355) : p2.call(null,G__21355));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__21357 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21357) : p3.call(null,G__21357));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var and__3760__auto____$3 = (function (){var G__21359 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21359) : p1.call(null,G__21359));
})();
if(cljs.core.truth_(and__3760__auto____$3)){
var and__3760__auto____$4 = (function (){var G__21361 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21361) : p2.call(null,G__21361));
})();
if(cljs.core.truth_(and__3760__auto____$4)){
var and__3760__auto____$5 = (function (){var G__21363 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21363) : p3.call(null,G__21363));
})();
if(cljs.core.truth_(and__3760__auto____$5)){
var and__3760__auto____$6 = (function (){var G__21365 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21365) : p1.call(null,G__21365));
})();
if(cljs.core.truth_(and__3760__auto____$6)){
var and__3760__auto____$7 = (function (){var G__21367 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21367) : p2.call(null,G__21367));
})();
if(cljs.core.truth_(and__3760__auto____$7)){
var G__21368 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21368) : p3.call(null,G__21368));
} else {
return and__3760__auto____$7;
}
} else {
return and__3760__auto____$6;
}
} else {
return and__3760__auto____$5;
}
} else {
return and__3760__auto____$4;
}
} else {
return and__3760__auto____$3;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__21413__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21014_SHARP_){
var and__3760__auto__ = (function (){var G__21375 = p1__21014_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21375) : p1.call(null,G__21375));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21377 = p1__21014_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21377) : p2.call(null,G__21377));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__21378 = p1__21014_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21378) : p3.call(null,G__21378));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
}),args)));
};
var G__21413 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21414__i = 0, G__21414__a = new Array(arguments.length -  3);
while (G__21414__i < G__21414__a.length) {G__21414__a[G__21414__i] = arguments[G__21414__i + 3]; ++G__21414__i;}
  args = new cljs.core.IndexedSeq(G__21414__a,0);
} 
return G__21413__delegate.call(this,x,y,z,args);};
G__21413.cljs$lang$maxFixedArity = 3;
G__21413.cljs$lang$applyTo = (function (arglist__21415){
var x = cljs.core.first(arglist__21415);
arglist__21415 = cljs.core.next(arglist__21415);
var y = cljs.core.first(arglist__21415);
arglist__21415 = cljs.core.next(arglist__21415);
var z = cljs.core.first(arglist__21415);
var args = cljs.core.rest(arglist__21415);
return G__21413__delegate(x,y,z,args);
});
G__21413.cljs$core$IFn$_invoke$arity$variadic = G__21413__delegate;
return G__21413;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__21416 = null;
if (arguments.length > 3) {
var G__21417__i = 0, G__21417__a = new Array(arguments.length -  3);
while (G__21417__i < G__21417__a.length) {G__21417__a[G__21417__i] = arguments[G__21417__i + 3]; ++G__21417__i;}
G__21416 = new cljs.core.IndexedSeq(G__21417__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21416);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__21418__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21015_SHARP_){
var G__21394 = x;
return (p1__21015_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21015_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21394) : p1__21015_SHARP_.call(null,G__21394));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21016_SHARP_){
var and__3760__auto__ = (function (){var G__21396 = x;
return (p1__21016_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21016_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21396) : p1__21016_SHARP_.call(null,G__21396));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__21397 = y;
return (p1__21016_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21016_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21397) : p1__21016_SHARP_.call(null,G__21397));
} else {
return and__3760__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21017_SHARP_){
var and__3760__auto__ = (function (){var G__21399 = x;
return (p1__21017_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21017_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21399) : p1__21017_SHARP_.call(null,G__21399));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21401 = y;
return (p1__21017_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21017_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21401) : p1__21017_SHARP_.call(null,G__21401));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__21402 = z;
return (p1__21017_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21017_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21402) : p1__21017_SHARP_.call(null,G__21402));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__21419__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21018_SHARP_){
return cljs.core.every_QMARK_(p1__21018_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__21419 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21420__i = 0, G__21420__a = new Array(arguments.length -  3);
while (G__21420__i < G__21420__a.length) {G__21420__a[G__21420__i] = arguments[G__21420__i + 3]; ++G__21420__i;}
  args = new cljs.core.IndexedSeq(G__21420__a,0);
} 
return G__21419__delegate.call(this,x,y,z,args);};
G__21419.cljs$lang$maxFixedArity = 3;
G__21419.cljs$lang$applyTo = (function (arglist__21421){
var x = cljs.core.first(arglist__21421);
arglist__21421 = cljs.core.next(arglist__21421);
var y = cljs.core.first(arglist__21421);
arglist__21421 = cljs.core.next(arglist__21421);
var z = cljs.core.first(arglist__21421);
var args = cljs.core.rest(arglist__21421);
return G__21419__delegate(x,y,z,args);
});
G__21419.cljs$core$IFn$_invoke$arity$variadic = G__21419__delegate;
return G__21419;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__21422 = null;
if (arguments.length > 3) {
var G__21423__i = 0, G__21423__a = new Array(arguments.length -  3);
while (G__21423__i < G__21423__a.length) {G__21423__a[G__21423__i] = arguments[G__21423__i + 3]; ++G__21423__i;}
G__21422 = new cljs.core.IndexedSeq(G__21423__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21422);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__21418 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21424__i = 0, G__21424__a = new Array(arguments.length -  3);
while (G__21424__i < G__21424__a.length) {G__21424__a[G__21424__i] = arguments[G__21424__i + 3]; ++G__21424__i;}
  ps = new cljs.core.IndexedSeq(G__21424__a,0);
} 
return G__21418__delegate.call(this,p1,p2,p3,ps);};
G__21418.cljs$lang$maxFixedArity = 3;
G__21418.cljs$lang$applyTo = (function (arglist__21425){
var p1 = cljs.core.first(arglist__21425);
arglist__21425 = cljs.core.next(arglist__21425);
var p2 = cljs.core.first(arglist__21425);
arglist__21425 = cljs.core.next(arglist__21425);
var p3 = cljs.core.first(arglist__21425);
var ps = cljs.core.rest(arglist__21425);
return G__21418__delegate(p1,p2,p3,ps);
});
G__21418.cljs$core$IFn$_invoke$arity$variadic = G__21418__delegate;
return G__21418;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__21426 = null;
if (arguments.length > 3) {
var G__21427__i = 0, G__21427__a = new Array(arguments.length -  3);
while (G__21427__i < G__21427__a.length) {G__21427__a[G__21427__i] = arguments[G__21427__i + 3]; ++G__21427__i;}
G__21426 = new cljs.core.IndexedSeq(G__21427__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__21633 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21633) : p.call(null,G__21633));
});
var sp1__2 = (function (x,y){
var or__3772__auto__ = (function (){var G__21635 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21635) : p.call(null,G__21635));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__21636 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21636) : p.call(null,G__21636));
}
});
var sp1__3 = (function (x,y,z){
var or__3772__auto__ = (function (){var G__21638 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21638) : p.call(null,G__21638));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21640 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21640) : p.call(null,G__21640));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__21641 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21641) : p.call(null,G__21641));
}
}
});
var sp1__4 = (function() { 
var G__21802__delegate = function (x,y,z,args){
var or__3772__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__21802 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21803__i = 0, G__21803__a = new Array(arguments.length -  3);
while (G__21803__i < G__21803__a.length) {G__21803__a[G__21803__i] = arguments[G__21803__i + 3]; ++G__21803__i;}
  args = new cljs.core.IndexedSeq(G__21803__a,0);
} 
return G__21802__delegate.call(this,x,y,z,args);};
G__21802.cljs$lang$maxFixedArity = 3;
G__21802.cljs$lang$applyTo = (function (arglist__21804){
var x = cljs.core.first(arglist__21804);
arglist__21804 = cljs.core.next(arglist__21804);
var y = cljs.core.first(arglist__21804);
arglist__21804 = cljs.core.next(arglist__21804);
var z = cljs.core.first(arglist__21804);
var args = cljs.core.rest(arglist__21804);
return G__21802__delegate(x,y,z,args);
});
G__21802.cljs$core$IFn$_invoke$arity$variadic = G__21802__delegate;
return G__21802;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__21805 = null;
if (arguments.length > 3) {
var G__21806__i = 0, G__21806__a = new Array(arguments.length -  3);
while (G__21806__i < G__21806__a.length) {G__21806__a[G__21806__i] = arguments[G__21806__i + 3]; ++G__21806__i;}
G__21805 = new cljs.core.IndexedSeq(G__21806__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21805);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3772__auto__ = (function (){var G__21673 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21673) : p1.call(null,G__21673));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__21674 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21674) : p2.call(null,G__21674));
}
});
var sp2__2 = (function (x,y){
var or__3772__auto__ = (function (){var G__21676 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21676) : p1.call(null,G__21676));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21678 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21678) : p1.call(null,G__21678));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__21680 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21680) : p2.call(null,G__21680));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var G__21681 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21681) : p2.call(null,G__21681));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3772__auto__ = (function (){var G__21683 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21683) : p1.call(null,G__21683));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21685 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21685) : p1.call(null,G__21685));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__21687 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21687) : p1.call(null,G__21687));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var or__3772__auto____$3 = (function (){var G__21689 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21689) : p2.call(null,G__21689));
})();
if(cljs.core.truth_(or__3772__auto____$3)){
return or__3772__auto____$3;
} else {
var or__3772__auto____$4 = (function (){var G__21691 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21691) : p2.call(null,G__21691));
})();
if(cljs.core.truth_(or__3772__auto____$4)){
return or__3772__auto____$4;
} else {
var G__21692 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21692) : p2.call(null,G__21692));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__21807__delegate = function (x,y,z,args){
var or__3772__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(((function (or__3772__auto__){
return (function (p1__21428_SHARP_){
var or__3772__auto____$1 = (function (){var G__21694 = p1__21428_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21694) : p1.call(null,G__21694));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__21695 = p1__21428_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21695) : p2.call(null,G__21695));
}
});})(or__3772__auto__))
,args);
}
};
var G__21807 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21808__i = 0, G__21808__a = new Array(arguments.length -  3);
while (G__21808__i < G__21808__a.length) {G__21808__a[G__21808__i] = arguments[G__21808__i + 3]; ++G__21808__i;}
  args = new cljs.core.IndexedSeq(G__21808__a,0);
} 
return G__21807__delegate.call(this,x,y,z,args);};
G__21807.cljs$lang$maxFixedArity = 3;
G__21807.cljs$lang$applyTo = (function (arglist__21809){
var x = cljs.core.first(arglist__21809);
arglist__21809 = cljs.core.next(arglist__21809);
var y = cljs.core.first(arglist__21809);
arglist__21809 = cljs.core.next(arglist__21809);
var z = cljs.core.first(arglist__21809);
var args = cljs.core.rest(arglist__21809);
return G__21807__delegate(x,y,z,args);
});
G__21807.cljs$core$IFn$_invoke$arity$variadic = G__21807__delegate;
return G__21807;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__21810 = null;
if (arguments.length > 3) {
var G__21811__i = 0, G__21811__a = new Array(arguments.length -  3);
while (G__21811__i < G__21811__a.length) {G__21811__a[G__21811__i] = arguments[G__21811__i + 3]; ++G__21811__i;}
G__21810 = new cljs.core.IndexedSeq(G__21811__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21810);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3772__auto__ = (function (){var G__21741 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21741) : p1.call(null,G__21741));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21743 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21743) : p2.call(null,G__21743));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__21744 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21744) : p3.call(null,G__21744));
}
}
});
var sp3__2 = (function (x,y){
var or__3772__auto__ = (function (){var G__21746 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21746) : p1.call(null,G__21746));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21748 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21748) : p2.call(null,G__21748));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__21750 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21750) : p3.call(null,G__21750));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var or__3772__auto____$3 = (function (){var G__21752 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21752) : p1.call(null,G__21752));
})();
if(cljs.core.truth_(or__3772__auto____$3)){
return or__3772__auto____$3;
} else {
var or__3772__auto____$4 = (function (){var G__21754 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21754) : p2.call(null,G__21754));
})();
if(cljs.core.truth_(or__3772__auto____$4)){
return or__3772__auto____$4;
} else {
var G__21755 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21755) : p3.call(null,G__21755));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3772__auto__ = (function (){var G__21757 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21757) : p1.call(null,G__21757));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21759 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21759) : p2.call(null,G__21759));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__21761 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21761) : p3.call(null,G__21761));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var or__3772__auto____$3 = (function (){var G__21763 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21763) : p1.call(null,G__21763));
})();
if(cljs.core.truth_(or__3772__auto____$3)){
return or__3772__auto____$3;
} else {
var or__3772__auto____$4 = (function (){var G__21765 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21765) : p2.call(null,G__21765));
})();
if(cljs.core.truth_(or__3772__auto____$4)){
return or__3772__auto____$4;
} else {
var or__3772__auto____$5 = (function (){var G__21767 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21767) : p3.call(null,G__21767));
})();
if(cljs.core.truth_(or__3772__auto____$5)){
return or__3772__auto____$5;
} else {
var or__3772__auto____$6 = (function (){var G__21769 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21769) : p1.call(null,G__21769));
})();
if(cljs.core.truth_(or__3772__auto____$6)){
return or__3772__auto____$6;
} else {
var or__3772__auto____$7 = (function (){var G__21771 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21771) : p2.call(null,G__21771));
})();
if(cljs.core.truth_(or__3772__auto____$7)){
return or__3772__auto____$7;
} else {
var G__21772 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21772) : p3.call(null,G__21772));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__21812__delegate = function (x,y,z,args){
var or__3772__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(((function (or__3772__auto__){
return (function (p1__21429_SHARP_){
var or__3772__auto____$1 = (function (){var G__21774 = p1__21429_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21774) : p1.call(null,G__21774));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__21776 = p1__21429_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21776) : p2.call(null,G__21776));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var G__21777 = p1__21429_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21777) : p3.call(null,G__21777));
}
}
});})(or__3772__auto__))
,args);
}
};
var G__21812 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21813__i = 0, G__21813__a = new Array(arguments.length -  3);
while (G__21813__i < G__21813__a.length) {G__21813__a[G__21813__i] = arguments[G__21813__i + 3]; ++G__21813__i;}
  args = new cljs.core.IndexedSeq(G__21813__a,0);
} 
return G__21812__delegate.call(this,x,y,z,args);};
G__21812.cljs$lang$maxFixedArity = 3;
G__21812.cljs$lang$applyTo = (function (arglist__21814){
var x = cljs.core.first(arglist__21814);
arglist__21814 = cljs.core.next(arglist__21814);
var y = cljs.core.first(arglist__21814);
arglist__21814 = cljs.core.next(arglist__21814);
var z = cljs.core.first(arglist__21814);
var args = cljs.core.rest(arglist__21814);
return G__21812__delegate(x,y,z,args);
});
G__21812.cljs$core$IFn$_invoke$arity$variadic = G__21812__delegate;
return G__21812;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__21815 = null;
if (arguments.length > 3) {
var G__21816__i = 0, G__21816__a = new Array(arguments.length -  3);
while (G__21816__i < G__21816__a.length) {G__21816__a[G__21816__i] = arguments[G__21816__i + 3]; ++G__21816__i;}
G__21815 = new cljs.core.IndexedSeq(G__21816__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21815);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__21817__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__21430_SHARP_){
var G__21793 = x;
return (p1__21430_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21430_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21793) : p1__21430_SHARP_.call(null,G__21793));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__21431_SHARP_){
var or__3772__auto__ = (function (){var G__21795 = x;
return (p1__21431_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21431_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21795) : p1__21431_SHARP_.call(null,G__21795));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__21796 = y;
return (p1__21431_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21431_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21796) : p1__21431_SHARP_.call(null,G__21796));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__21432_SHARP_){
var or__3772__auto__ = (function (){var G__21798 = x;
return (p1__21432_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21432_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21798) : p1__21432_SHARP_.call(null,G__21798));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21800 = y;
return (p1__21432_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21432_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21800) : p1__21432_SHARP_.call(null,G__21800));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__21801 = z;
return (p1__21432_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21432_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21801) : p1__21432_SHARP_.call(null,G__21801));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__21818__delegate = function (x,y,z,args){
var or__3772__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(((function (or__3772__auto__,ps__$1){
return (function (p1__21433_SHARP_){
return cljs.core.some(p1__21433_SHARP_,args);
});})(or__3772__auto__,ps__$1))
,ps__$1);
}
};
var G__21818 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21819__i = 0, G__21819__a = new Array(arguments.length -  3);
while (G__21819__i < G__21819__a.length) {G__21819__a[G__21819__i] = arguments[G__21819__i + 3]; ++G__21819__i;}
  args = new cljs.core.IndexedSeq(G__21819__a,0);
} 
return G__21818__delegate.call(this,x,y,z,args);};
G__21818.cljs$lang$maxFixedArity = 3;
G__21818.cljs$lang$applyTo = (function (arglist__21820){
var x = cljs.core.first(arglist__21820);
arglist__21820 = cljs.core.next(arglist__21820);
var y = cljs.core.first(arglist__21820);
arglist__21820 = cljs.core.next(arglist__21820);
var z = cljs.core.first(arglist__21820);
var args = cljs.core.rest(arglist__21820);
return G__21818__delegate(x,y,z,args);
});
G__21818.cljs$core$IFn$_invoke$arity$variadic = G__21818__delegate;
return G__21818;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__21821 = null;
if (arguments.length > 3) {
var G__21822__i = 0, G__21822__a = new Array(arguments.length -  3);
while (G__21822__i < G__21822__a.length) {G__21822__a[G__21822__i] = arguments[G__21822__i + 3]; ++G__21822__i;}
G__21821 = new cljs.core.IndexedSeq(G__21822__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21821);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__21817 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21823__i = 0, G__21823__a = new Array(arguments.length -  3);
while (G__21823__i < G__21823__a.length) {G__21823__a[G__21823__i] = arguments[G__21823__i + 3]; ++G__21823__i;}
  ps = new cljs.core.IndexedSeq(G__21823__a,0);
} 
return G__21817__delegate.call(this,p1,p2,p3,ps);};
G__21817.cljs$lang$maxFixedArity = 3;
G__21817.cljs$lang$applyTo = (function (arglist__21824){
var p1 = cljs.core.first(arglist__21824);
arglist__21824 = cljs.core.next(arglist__21824);
var p2 = cljs.core.first(arglist__21824);
arglist__21824 = cljs.core.next(arglist__21824);
var p3 = cljs.core.first(arglist__21824);
var ps = cljs.core.rest(arglist__21824);
return G__21817__delegate(p1,p2,p3,ps);
});
G__21817.cljs$core$IFn$_invoke$arity$variadic = G__21817__delegate;
return G__21817;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__21825 = null;
if (arguments.length > 3) {
var G__21826__i = 0, G__21826__a = new Array(arguments.length -  3);
while (G__21826__i < G__21826__a.length) {G__21826__a[G__21826__i] = arguments[G__21826__i + 3]; ++G__21826__i;}
G__21825 = new cljs.core.IndexedSeq(G__21826__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21825);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__21881 = null;
var G__21881__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21881__1 = (function (result){
var G__21867 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21867) : rf.call(null,G__21867));
});
var G__21881__2 = (function (result,input){
var G__21868 = result;
var G__21869 = (function (){var G__21870 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21870) : f.call(null,G__21870));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21868,G__21869) : rf.call(null,G__21868,G__21869));
});
var G__21881__3 = (function() { 
var G__21882__delegate = function (result,input,inputs){
var G__21871 = result;
var G__21872 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21871,G__21872) : rf.call(null,G__21871,G__21872));
};
var G__21882 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__21883__i = 0, G__21883__a = new Array(arguments.length -  2);
while (G__21883__i < G__21883__a.length) {G__21883__a[G__21883__i] = arguments[G__21883__i + 2]; ++G__21883__i;}
  inputs = new cljs.core.IndexedSeq(G__21883__a,0);
} 
return G__21882__delegate.call(this,result,input,inputs);};
G__21882.cljs$lang$maxFixedArity = 2;
G__21882.cljs$lang$applyTo = (function (arglist__21884){
var result = cljs.core.first(arglist__21884);
arglist__21884 = cljs.core.next(arglist__21884);
var input = cljs.core.first(arglist__21884);
var inputs = cljs.core.rest(arglist__21884);
return G__21882__delegate(result,input,inputs);
});
G__21882.cljs$core$IFn$_invoke$arity$variadic = G__21882__delegate;
return G__21882;
})()
;
G__21881 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__21881__0.call(this);
case 1:
return G__21881__1.call(this,result);
case 2:
return G__21881__2.call(this,result,input);
default:
var G__21885 = null;
if (arguments.length > 2) {
var G__21886__i = 0, G__21886__a = new Array(arguments.length -  2);
while (G__21886__i < G__21886__a.length) {G__21886__a[G__21886__i] = arguments[G__21886__i + 2]; ++G__21886__i;}
G__21885 = new cljs.core.IndexedSeq(G__21886__a,0);
}
return G__21881__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__21885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21881.cljs$lang$maxFixedArity = 2;
G__21881.cljs$lang$applyTo = G__21881__3.cljs$lang$applyTo;
G__21881.cljs$core$IFn$_invoke$arity$0 = G__21881__0;
G__21881.cljs$core$IFn$_invoke$arity$1 = G__21881__1;
G__21881.cljs$core$IFn$_invoke$arity$2 = G__21881__2;
G__21881.cljs$core$IFn$_invoke$arity$variadic = G__21881__3.cljs$core$IFn$_invoke$arity$variadic;
return G__21881;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___21887 = size;
var i_21888 = (0);
while(true){
if((i_21888 < n__4659__auto___21887)){
cljs.core.chunk_append(b,(function (){var G__21873 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21888);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21873) : f.call(null,G__21873));
})());

var G__21889 = (i_21888 + (1));
i_21888 = G__21889;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__21874 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21874) : f.call(null,G__21874));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__21875 = cljs.core.first(s1);
var G__21876 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21875,G__21876) : f.call(null,G__21875,G__21876));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__21877 = cljs.core.first(s1);
var G__21878 = cljs.core.first(s2);
var G__21879 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21877,G__21878,G__21879) : f.call(null,G__21877,G__21878,G__21879));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__21890__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__21827_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__21827_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__21890 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__21891__i = 0, G__21891__a = new Array(arguments.length -  4);
while (G__21891__i < G__21891__a.length) {G__21891__a[G__21891__i] = arguments[G__21891__i + 4]; ++G__21891__i;}
  colls = new cljs.core.IndexedSeq(G__21891__a,0);
} 
return G__21890__delegate.call(this,f,c1,c2,c3,colls);};
G__21890.cljs$lang$maxFixedArity = 4;
G__21890.cljs$lang$applyTo = (function (arglist__21892){
var f = cljs.core.first(arglist__21892);
arglist__21892 = cljs.core.next(arglist__21892);
var c1 = cljs.core.first(arglist__21892);
arglist__21892 = cljs.core.next(arglist__21892);
var c2 = cljs.core.first(arglist__21892);
arglist__21892 = cljs.core.next(arglist__21892);
var c3 = cljs.core.first(arglist__21892);
var colls = cljs.core.rest(arglist__21892);
return G__21890__delegate(f,c1,c2,c3,colls);
});
G__21890.cljs$core$IFn$_invoke$arity$variadic = G__21890__delegate;
return G__21890;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__21893 = null;
if (arguments.length > 4) {
var G__21894__i = 0, G__21894__a = new Array(arguments.length -  4);
while (G__21894__i < G__21894__a.length) {G__21894__a[G__21894__i] = arguments[G__21894__i + 4]; ++G__21894__i;}
G__21893 = new cljs.core.IndexedSeq(G__21894__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__21893);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21903 = null;
var G__21903__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21903__1 = (function (result){
var G__21900 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21900) : rf.call(null,G__21900));
});
var G__21903__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__21901 = result;
var G__21902 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21901,G__21902) : rf.call(null,G__21901,G__21902));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__21903 = function(result,input){
switch(arguments.length){
case 0:
return G__21903__0.call(this);
case 1:
return G__21903__1.call(this,result);
case 2:
return G__21903__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21903.cljs$core$IFn$_invoke$arity$0 = G__21903__0;
G__21903.cljs$core$IFn$_invoke$arity$1 = G__21903__1;
G__21903.cljs$core$IFn$_invoke$arity$2 = G__21903__2;
return G__21903;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__21910 = null;
var G__21910__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21910__1 = (function (result){
var G__21907 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21907) : rf.call(null,G__21907));
});
var G__21910__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__21908 = result;
var G__21909 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21908,G__21909) : rf.call(null,G__21908,G__21909));
}
});
G__21910 = function(result,input){
switch(arguments.length){
case 0:
return G__21910__0.call(this);
case 1:
return G__21910__1.call(this,result);
case 2:
return G__21910__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21910.cljs$core$IFn$_invoke$arity$0 = G__21910__0;
G__21910.cljs$core$IFn$_invoke$arity$1 = G__21910__1;
G__21910.cljs$core$IFn$_invoke$arity$2 = G__21910__2;
return G__21910;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__21911 = (n__$1 - (1));
var G__21912 = cljs.core.rest(s);
n__$1 = G__21911;
coll__$1 = G__21912;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__21915 = cljs.core.next(s);
var G__21916 = cljs.core.next(lead);
s = G__21915;
lead = G__21916;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__21929 = null;
var G__21929__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21929__1 = (function (result){
var G__21923 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21923) : rf.call(null,G__21923));
});
var G__21929__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3760__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3760__auto__)){
var G__21924 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21924) : pred.call(null,G__21924));
} else {
return and__3760__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__21925 = result;
var G__21926 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21925,G__21926) : rf.call(null,G__21925,G__21926));
}
});
G__21929 = function(result,input){
switch(arguments.length){
case 0:
return G__21929__0.call(this);
case 1:
return G__21929__1.call(this,result);
case 2:
return G__21929__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21929.cljs$core$IFn$_invoke$arity$0 = G__21929__0;
G__21929.cljs$core$IFn$_invoke$arity$1 = G__21929__1;
G__21929.cljs$core$IFn$_invoke$arity$2 = G__21929__2;
return G__21929;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3760__auto__ = s;
if(and__3760__auto__){
var G__21928 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__21928) : pred__$1.call(null,G__21928));
} else {
return and__3760__auto__;
}
})())){
var G__21930 = pred__$1;
var G__21931 = cljs.core.rest(s);
pred__$1 = G__21930;
coll__$1 = G__21931;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__21940 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21940) : f.call(null,G__21940));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__21943__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__21943 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__21944__i = 0, G__21944__a = new Array(arguments.length -  2);
while (G__21944__i < G__21944__a.length) {G__21944__a[G__21944__i] = arguments[G__21944__i + 2]; ++G__21944__i;}
  colls = new cljs.core.IndexedSeq(G__21944__a,0);
} 
return G__21943__delegate.call(this,c1,c2,colls);};
G__21943.cljs$lang$maxFixedArity = 2;
G__21943.cljs$lang$applyTo = (function (arglist__21945){
var c1 = cljs.core.first(arglist__21945);
arglist__21945 = cljs.core.next(arglist__21945);
var c2 = cljs.core.first(arglist__21945);
var colls = cljs.core.rest(arglist__21945);
return G__21943__delegate(c1,c2,colls);
});
G__21943.cljs$core$IFn$_invoke$arity$variadic = G__21943__delegate;
return G__21943;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__21946 = null;
if (arguments.length > 2) {
var G__21947__i = 0, G__21947__a = new Array(arguments.length -  2);
while (G__21947__i < G__21947__a.length) {G__21947__a[G__21947__i] = arguments[G__21947__i + 2]; ++G__21947__i;}
G__21946 = new cljs.core.IndexedSeq(G__21947__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__21946);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__21962 = null;
var G__21962__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21962__1 = (function (result){
var G__21955 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21955) : rf.call(null,G__21955));
});
var G__21962__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__21956 = result;
var G__21957 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21956,G__21957) : rf.call(null,G__21956,G__21957));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__21958 = sepr;
var G__21959 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21958,G__21959) : rf.call(null,G__21958,G__21959));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__21960 = result;
var G__21961 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21960,G__21961) : rf.call(null,G__21960,G__21961));
}
});
G__21962 = function(result,input){
switch(arguments.length){
case 0:
return G__21962__0.call(this);
case 1:
return G__21962__1.call(this,result);
case 2:
return G__21962__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21962.cljs$core$IFn$_invoke$arity$0 = G__21962__0;
G__21962.cljs$core$IFn$_invoke$arity$1 = G__21962__1;
G__21962.cljs$core$IFn$_invoke$arity$2 = G__21962__2;
return G__21962;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__21971__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__21971 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__21972__i = 0, G__21972__a = new Array(arguments.length -  1);
while (G__21972__i < G__21972__a.length) {G__21972__a[G__21972__i] = arguments[G__21972__i + 1]; ++G__21972__i;}
  colls = new cljs.core.IndexedSeq(G__21972__a,0);
} 
return G__21971__delegate.call(this,f,colls);};
G__21971.cljs$lang$maxFixedArity = 1;
G__21971.cljs$lang$applyTo = (function (arglist__21973){
var f = cljs.core.first(arglist__21973);
var colls = cljs.core.rest(arglist__21973);
return G__21971__delegate(f,colls);
});
G__21971.cljs$core$IFn$_invoke$arity$variadic = G__21971__delegate;
return G__21971;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__21974 = null;
if (arguments.length > 1) {
var G__21975__i = 0, G__21975__a = new Array(arguments.length -  1);
while (G__21975__i < G__21975__a.length) {G__21975__a[G__21975__i] = arguments[G__21975__i + 1]; ++G__21975__i;}
G__21974 = new cljs.core.IndexedSeq(G__21975__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__21974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__21994 = null;
var G__21994__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21994__1 = (function (result){
var G__21988 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21988) : rf.call(null,G__21988));
});
var G__21994__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__21989 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21989) : pred.call(null,G__21989));
})())){
var G__21990 = result;
var G__21991 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21990,G__21991) : rf.call(null,G__21990,G__21991));
} else {
return result;
}
});
G__21994 = function(result,input){
switch(arguments.length){
case 0:
return G__21994__0.call(this);
case 1:
return G__21994__1.call(this,result);
case 2:
return G__21994__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21994.cljs$core$IFn$_invoke$arity$0 = G__21994__0;
G__21994.cljs$core$IFn$_invoke$arity$1 = G__21994__1;
G__21994.cljs$core$IFn$_invoke$arity$2 = G__21994__2;
return G__21994;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___21995 = size;
var i_21996 = (0);
while(true){
if((i_21996 < n__4659__auto___21995)){
if(cljs.core.truth_((function (){var G__21992 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21996);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21992) : pred.call(null,G__21992));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21996));
} else {
}

var G__21997 = (i_21996 + (1));
i_21996 = G__21997;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__21993 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__21993) : pred.call(null,G__21993));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__22004 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__22004) : branch_QMARK_.call(null,G__22004));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__22005 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__22005) : children.call(null,G__22005));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__22006_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__22006_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__22009 = to;
if(G__22009){
var bit__4446__auto__ = (G__22009.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4446__auto__) || (G__22009.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__22010 = to;
if(G__22010){
var bit__4446__auto__ = (G__22010.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4446__auto__) || (G__22010.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__22012 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22012) : f.call(null,G__22012));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__22013__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__22013 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__22014__i = 0, G__22014__a = new Array(arguments.length -  4);
while (G__22014__i < G__22014__a.length) {G__22014__a[G__22014__i] = arguments[G__22014__i + 4]; ++G__22014__i;}
  colls = new cljs.core.IndexedSeq(G__22014__a,0);
} 
return G__22013__delegate.call(this,f,c1,c2,c3,colls);};
G__22013.cljs$lang$maxFixedArity = 4;
G__22013.cljs$lang$applyTo = (function (arglist__22015){
var f = cljs.core.first(arglist__22015);
arglist__22015 = cljs.core.next(arglist__22015);
var c1 = cljs.core.first(arglist__22015);
arglist__22015 = cljs.core.next(arglist__22015);
var c2 = cljs.core.first(arglist__22015);
arglist__22015 = cljs.core.next(arglist__22015);
var c3 = cljs.core.first(arglist__22015);
var colls = cljs.core.rest(arglist__22015);
return G__22013__delegate(f,c1,c2,c3,colls);
});
G__22013.cljs$core$IFn$_invoke$arity$variadic = G__22013__delegate;
return G__22013;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__22016 = null;
if (arguments.length > 4) {
var G__22017__i = 0, G__22017__a = new Array(arguments.length -  4);
while (G__22017__i < G__22017__a.length) {G__22017__a[G__22017__i] = arguments[G__22017__i + 4]; ++G__22017__i;}
G__22016 = new cljs.core.IndexedSeq(G__22017__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__22016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__22019 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22019) : pred.call(null,G__22019));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__22034 = m__$1;
if(G__22034){
var bit__4453__auto__ = (G__22034.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4453__auto__) || (G__22034.cljs$core$ILookup$)){
return true;
} else {
if((!G__22034.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22034);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22034);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__22035 = sentinel;
var G__22036 = m__$2;
var G__22037 = cljs.core.next(ks__$1);
sentinel = G__22035;
m__$1 = G__22036;
ks__$1 = G__22037;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__22038,v){
var vec__22043 = p__22038;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22043,(0),null);
var ks = cljs.core.nthnext(vec__22043,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__22044,f){
var vec__22082 = p__22044;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22082,(0),null);
var ks = cljs.core.nthnext(vec__22082,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22083 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22083) : f.call(null,G__22083));
})());
}
});
var update_in__4 = (function (m,p__22045,f,a){
var vec__22084 = p__22045;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22084,(0),null);
var ks = cljs.core.nthnext(vec__22084,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22085 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22086 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22085,G__22086) : f.call(null,G__22085,G__22086));
})());
}
});
var update_in__5 = (function (m,p__22046,f,a,b){
var vec__22087 = p__22046;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22087,(0),null);
var ks = cljs.core.nthnext(vec__22087,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22088 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22089 = a;
var G__22090 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22088,G__22089,G__22090) : f.call(null,G__22088,G__22089,G__22090));
})());
}
});
var update_in__6 = (function (m,p__22047,f,a,b,c){
var vec__22091 = p__22047;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22091,(0),null);
var ks = cljs.core.nthnext(vec__22091,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22092 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22093 = a;
var G__22094 = b;
var G__22095 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22092,G__22093,G__22094,G__22095) : f.call(null,G__22092,G__22093,G__22094,G__22095));
})());
}
});
var update_in__7 = (function() { 
var G__22097__delegate = function (m,p__22048,f,a,b,c,args){
var vec__22096 = p__22048;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22096,(0),null);
var ks = cljs.core.nthnext(vec__22096,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__22097 = function (m,p__22048,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__22098__i = 0, G__22098__a = new Array(arguments.length -  6);
while (G__22098__i < G__22098__a.length) {G__22098__a[G__22098__i] = arguments[G__22098__i + 6]; ++G__22098__i;}
  args = new cljs.core.IndexedSeq(G__22098__a,0);
} 
return G__22097__delegate.call(this,m,p__22048,f,a,b,c,args);};
G__22097.cljs$lang$maxFixedArity = 6;
G__22097.cljs$lang$applyTo = (function (arglist__22099){
var m = cljs.core.first(arglist__22099);
arglist__22099 = cljs.core.next(arglist__22099);
var p__22048 = cljs.core.first(arglist__22099);
arglist__22099 = cljs.core.next(arglist__22099);
var f = cljs.core.first(arglist__22099);
arglist__22099 = cljs.core.next(arglist__22099);
var a = cljs.core.first(arglist__22099);
arglist__22099 = cljs.core.next(arglist__22099);
var b = cljs.core.first(arglist__22099);
arglist__22099 = cljs.core.next(arglist__22099);
var c = cljs.core.first(arglist__22099);
var args = cljs.core.rest(arglist__22099);
return G__22097__delegate(m,p__22048,f,a,b,c,args);
});
G__22097.cljs$core$IFn$_invoke$arity$variadic = G__22097__delegate;
return G__22097;
})()
;
update_in = function(m,p__22048,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__22048,f);
case 4:
return update_in__4.call(this,m,p__22048,f,a);
case 5:
return update_in__5.call(this,m,p__22048,f,a,b);
case 6:
return update_in__6.call(this,m,p__22048,f,a,b,c);
default:
var G__22100 = null;
if (arguments.length > 6) {
var G__22101__i = 0, G__22101__a = new Array(arguments.length -  6);
while (G__22101__i < G__22101__a.length) {G__22101__a[G__22101__i] = arguments[G__22101__i + 6]; ++G__22101__i;}
G__22100 = new cljs.core.IndexedSeq(G__22101__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__22048,f,a,b,c, G__22100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22112 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22112) : f.call(null,G__22112));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22113 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22114 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22113,G__22114) : f.call(null,G__22113,G__22114));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22115 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22116 = x;
var G__22117 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22115,G__22116,G__22117) : f.call(null,G__22115,G__22116,G__22117));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22118 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22119 = x;
var G__22120 = y;
var G__22121 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22118,G__22119,G__22120,G__22121) : f.call(null,G__22118,G__22119,G__22120,G__22121));
})());
});
var update__7 = (function() { 
var G__22122__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__22122 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__22123__i = 0, G__22123__a = new Array(arguments.length -  6);
while (G__22123__i < G__22123__a.length) {G__22123__a[G__22123__i] = arguments[G__22123__i + 6]; ++G__22123__i;}
  more = new cljs.core.IndexedSeq(G__22123__a,0);
} 
return G__22122__delegate.call(this,m,k,f,x,y,z,more);};
G__22122.cljs$lang$maxFixedArity = 6;
G__22122.cljs$lang$applyTo = (function (arglist__22124){
var m = cljs.core.first(arglist__22124);
arglist__22124 = cljs.core.next(arglist__22124);
var k = cljs.core.first(arglist__22124);
arglist__22124 = cljs.core.next(arglist__22124);
var f = cljs.core.first(arglist__22124);
arglist__22124 = cljs.core.next(arglist__22124);
var x = cljs.core.first(arglist__22124);
arglist__22124 = cljs.core.next(arglist__22124);
var y = cljs.core.first(arglist__22124);
arglist__22124 = cljs.core.next(arglist__22124);
var z = cljs.core.first(arglist__22124);
var more = cljs.core.rest(arglist__22124);
return G__22122__delegate(m,k,f,x,y,z,more);
});
G__22122.cljs$core$IFn$_invoke$arity$variadic = G__22122__delegate;
return G__22122;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__22125 = null;
if (arguments.length > 6) {
var G__22126__i = 0, G__22126__a = new Array(arguments.length -  6);
while (G__22126__i < G__22126__a.length) {G__22126__a[G__22126__i] = arguments[G__22126__i + 6]; ++G__22126__i;}
G__22125 = new cljs.core.IndexedSeq(G__22126__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__22125);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__22127 = (ll - (5));
var G__22128 = r;
ll = G__22127;
ret = G__22128;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__22133 = cljs.core.pv_aget(node,(0));
var G__22134 = (level - (5));
node = G__22133;
level = G__22134;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__22135 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__22136 = (level - (5));
node = G__22135;
level = G__22136;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__22146 = init__$2;
var G__22147 = (j + i);
var G__22148 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22146,G__22147,G__22148) : f.call(null,G__22146,G__22147,G__22148));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__22159 = (j + (1));
var G__22160 = init__$3;
j = G__22159;
init__$2 = G__22160;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22149 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22149) : cljs.core.deref.call(null,G__22149));
} else {
var G__22161 = (i + len);
var G__22162 = init__$2;
i = G__22161;
init__$1 = G__22162;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__22150 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__22150) : cljs.core.tv_editable_root.call(null,G__22150));
})(),(function (){var G__22151 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__22151) : cljs.core.tv_editable_tail.call(null,G__22151));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__22152 = init__$2;
var G__22153 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22152,G__22153) : f.call(null,G__22152,G__22153));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__22163 = (j + (1));
var G__22164 = init__$3;
j = G__22163;
init__$2 = G__22164;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22154 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22154) : cljs.core.deref.call(null,G__22154));
} else {
var G__22165 = (i + len);
var G__22166 = init__$2;
i = G__22165;
init__$1 = G__22166;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__22155 = coll__$1;
var G__22156 = cljs.core.first_array_for_longvec(coll__$1);
var G__22157 = (0);
var G__22158 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22155,G__22156,G__22157,G__22158) : cljs.core.chunked_seq.call(null,G__22155,G__22156,G__22157,G__22158));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4659__auto___22167 = len;
var i_22168 = (0);
while(true){
if((i_22168 < n__4659__auto___22167)){
(new_tail[i_22168] = (self__.tail[i_22168]));

var G__22169 = (i_22168 + (1));
i_22168 = G__22169;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__22170 = null;
var G__22170__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__22170__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__22170 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22170__2.call(this,self__,k);
case 3:
return G__22170__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22170.cljs$core$IFn$_invoke$arity$2 = G__22170__2;
G__22170.cljs$core$IFn$_invoke$arity$3 = G__22170__3;
return G__22170;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args22145){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22145)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__22171 = (i + (1));
var G__22172 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__22171;
out = G__22172;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22173__i = 0, G__22173__a = new Array(arguments.length -  0);
while (G__22173__i < G__22173__a.length) {G__22173__a[G__22173__i] = arguments[G__22173__i + 0]; ++G__22173__i;}
  args = new cljs.core.IndexedSeq(G__22173__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__22174){
var args = cljs.core.seq(arglist__22174);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__22175 = self__.vec;
var G__22176 = self__.node;
var G__22177 = self__.i;
var G__22178 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22175,G__22176,G__22177,G__22178) : cljs.core.chunked_seq.call(null,G__22175,G__22176,G__22177,G__22178));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__22179 = self__.vec;
var G__22180 = (self__.i + self__.off);
var G__22181 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22179,G__22180,G__22181) : cljs.core.subvec.call(null,G__22179,G__22180,G__22181));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__22182 = self__.vec;
var G__22183 = (self__.i + self__.off);
var G__22184 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22182,G__22183,G__22184) : cljs.core.subvec.call(null,G__22182,G__22183,G__22184));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__22185 = self__.vec;
var G__22186 = self__.node;
var G__22187 = self__.i;
var G__22188 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22185,G__22186,G__22187,G__22188) : cljs.core.chunked_seq.call(null,G__22185,G__22186,G__22187,G__22188));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__22189 = self__.vec;
var G__22190 = cljs.core.unchecked_array_for(self__.vec,end);
var G__22191 = end;
var G__22192 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22189,G__22190,G__22191,G__22192) : cljs.core.chunked_seq.call(null,G__22189,G__22190,G__22191,G__22192));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__22193 = self__.vec;
var G__22194 = self__.node;
var G__22195 = self__.i;
var G__22196 = self__.off;
var G__22197 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__22193,G__22194,G__22195,G__22196,G__22197) : cljs.core.chunked_seq.call(null,G__22193,G__22194,G__22195,G__22196,G__22197));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__22198 = self__.vec;
var G__22199 = cljs.core.unchecked_array_for(self__.vec,end);
var G__22200 = end;
var G__22201 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22198,G__22199,G__22200,G__22201) : cljs.core.chunked_seq.call(null,G__22198,G__22199,G__22200,G__22201));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__22203 = self__.meta;
var G__22204 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__22205 = self__.start;
var G__22206 = (function (){var x__4089__auto__ = self__.end;
var y__4090__auto__ = (v_pos + (1));
return ((x__4089__auto__ > y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
})();
var G__22207 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22203,G__22204,G__22205,G__22206,G__22207) : cljs.core.build_subvec.call(null,G__22203,G__22204,G__22205,G__22206,G__22207));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__22208 = self__.meta;
var G__22209 = self__.v;
var G__22210 = self__.start;
var G__22211 = (self__.end - (1));
var G__22212 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22208,G__22209,G__22210,G__22211,G__22212) : cljs.core.build_subvec.call(null,G__22208,G__22209,G__22210,G__22211,G__22212));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__22214 = meta__$1;
var G__22215 = self__.v;
var G__22216 = self__.start;
var G__22217 = self__.end;
var G__22218 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22214,G__22215,G__22216,G__22217,G__22218) : cljs.core.build_subvec.call(null,G__22214,G__22215,G__22216,G__22217,G__22218));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__22219 = self__.meta;
var G__22220 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__22221 = self__.start;
var G__22222 = (self__.end + (1));
var G__22223 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22219,G__22220,G__22221,G__22222,G__22223) : cljs.core.build_subvec.call(null,G__22219,G__22220,G__22221,G__22222,G__22223));
});

cljs.core.Subvec.prototype.call = (function() {
var G__22224 = null;
var G__22224__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__22224__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__22224 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22224__2.call(this,self__,k);
case 3:
return G__22224__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22224.cljs$core$IFn$_invoke$arity$2 = G__22224__2;
G__22224.cljs$core$IFn$_invoke$arity$3 = G__22224__3;
return G__22224;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args22202){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22202)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__22225 = meta;
var G__22226 = v.v;
var G__22227 = (v.start + start);
var G__22228 = (v.start + end);
var G__22229 = __hash;
meta = G__22225;
v = G__22226;
start = G__22227;
end = G__22228;
__hash = G__22229;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj22236 = {};
return obj22236;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__22244 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__22245 = (level - (5));
node = G__22244;
level = G__22245;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__22249 = null;
var G__22249__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22249__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22249 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22249__2.call(this,self__,k);
case 3:
return G__22249__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22249.cljs$core$IFn$_invoke$arity$2 = G__22249__2;
G__22249.cljs$core$IFn$_invoke$arity$3 = G__22249__3;
return G__22249;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args22246){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22246)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3772__auto__ = self__.front;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3772__auto__ = self__.rear;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__22250 = (i + incr);
i = G__22250;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__22251 = (i + (1));
var G__22252 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__22251;
out = G__22252;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj22256 = {};
return obj22256;
})();
var l = ks.length;
var i_22257 = (0);
while(true){
if((i_22257 < l)){
var k_22258 = (ks[i_22257]);
(new_obj[k_22258] = (obj[k_22258]));

var G__22259 = (i_22257 + (1));
i_22257 = G__22259;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3760__auto__ = (function (){var G__22263 = k;
return goog.isString(G__22263);
})();
if(cljs.core.truth_(and__3760__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3760__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__22264 = init__$1;
var G__22265 = k;
var G__22266 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22264,G__22265,G__22266) : f.call(null,G__22264,G__22265,G__22266));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22267 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22267) : cljs.core.deref.call(null,G__22267));
} else {
var G__22273 = cljs.core.rest(keys__$1);
var G__22274 = init__$2;
keys__$1 = G__22273;
init__$1 = G__22274;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3760__auto__ = (function (){var G__22269 = k;
return goog.isString(G__22269);
})();
if(cljs.core.truth_(and__3760__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3760__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__22270 = k;
return goog.isString(G__22270);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3760__auto__ = (function (){var G__22272 = k;
return goog.isString(G__22272);
})();
if(cljs.core.truth_(and__3760__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3760__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__22260_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__22260_SHARP_,(self__.strobj[p1__22260_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__22275 = null;
var G__22275__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22275__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22275 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22275__2.call(this,self__,k);
case 3:
return G__22275__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22275.cljs$core$IFn$_invoke$arity$2 = G__22275__2;
G__22275.cljs$core$IFn$_invoke$arity$3 = G__22275__3;
return G__22275;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args22261){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22261)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj22277 = {};
return obj22277;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__22278 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22278,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22278,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__22279 = (i + (2));
i = G__22279;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__22280 = (i + (2));
i = G__22280;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__22281 = (i + (2));
i = G__22281;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__22282 = (i + (2));
i = G__22282;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__22283 = (i + (2));
i = G__22283;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3772__auto__ = (function (){var G__22287 = k;
return goog.isString(G__22287);
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_22288 = (0);
while(true){
if((i_22288 < l)){
(narr[i_22288] = (arr[i_22288]));

var G__22289 = (i_22288 + (1));
i_22288 = G__22289;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22291 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22291) : cljs.core.keys.call(null,G__22291));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22292 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22292) : cljs.core.vals.call(null,G__22292));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22293 = cljs.core.seq(coll);
var chunk__22294 = null;
var count__22295 = (0);
var i__22296 = (0);
while(true){
if((i__22296 < count__22295)){
var vec__22297 = chunk__22294.cljs$core$IIndexed$_nth$arity$2(null,i__22296);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22297,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22297,(1),null);
var G__22298_22311 = v;
var G__22299_22312 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22298_22311,G__22299_22312) : f.call(null,G__22298_22311,G__22299_22312));

var G__22313 = seq__22293;
var G__22314 = chunk__22294;
var G__22315 = count__22295;
var G__22316 = (i__22296 + (1));
seq__22293 = G__22313;
chunk__22294 = G__22314;
count__22295 = G__22315;
i__22296 = G__22316;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22293);
if(temp__4126__auto__){
var seq__22293__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22293__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__22293__$1);
var G__22317 = cljs.core.chunk_rest(seq__22293__$1);
var G__22318 = c__4559__auto__;
var G__22319 = cljs.core.count(c__4559__auto__);
var G__22320 = (0);
seq__22293 = G__22317;
chunk__22294 = G__22318;
count__22295 = G__22319;
i__22296 = G__22320;
continue;
} else {
var vec__22300 = cljs.core.first(seq__22293__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22300,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22300,(1),null);
var G__22301_22321 = v;
var G__22302_22322 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22301_22321,G__22302_22322) : f.call(null,G__22301_22321,G__22302_22322));

var G__22323 = cljs.core.next(seq__22293__$1);
var G__22324 = null;
var G__22325 = (0);
var G__22326 = (0);
seq__22293 = G__22323;
chunk__22294 = G__22324;
count__22295 = G__22325;
i__22296 = G__22326;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__22303 = init__$1;
var G__22304 = (self__.arr[i]);
var G__22305 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22303,G__22304,G__22305) : f.call(null,G__22303,G__22304,G__22305));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22306 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22306) : cljs.core.deref.call(null,G__22306));
} else {
var G__22327 = (i + (2));
var G__22328 = init__$2;
i = G__22327;
init__$1 = G__22328;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__22307 = other;
if(G__22307){
var bit__4446__auto__ = (G__22307.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4446__auto__) || (G__22307.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__22329 = (i + (2));
i = G__22329;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj22309 = {};
return obj22309;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__22330 = (s + (2));
var G__22331 = d;
s = G__22330;
d = G__22331;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__22332 = (s + (2));
var G__22333 = (d + (2));
s = G__22332;
d = G__22333;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__22310 = cljs.core.aclone(self__.arr);
(G__22310[(idx + (1))] = v);

return G__22310;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22334 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22335 = cljs.core.next(es);
ret = G__22334;
es = G__22335;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__22336 = null;
var G__22336__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22336__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22336 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22336__2.call(this,self__,k);
case 3:
return G__22336__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22336.cljs$core$IFn$_invoke$arity$2 = G__22336__2;
G__22336.cljs$core$IFn$_invoke$arity$3 = G__22336__3;
return G__22336;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args22290){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22290)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__22337 = (i + (2));
var G__22338 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__22337;
ret = G__22338;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__22339_22347 = self__.arr;
G__22339_22347.pop();

G__22339_22347.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__22340 = self__.len;
var G__22341 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__22340,G__22341) : cljs.core.array__GT_transient_hash_map.call(null,G__22340,G__22341));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__22342 = o;
if(G__22342){
var bit__4453__auto__ = (G__22342.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4453__auto__) || (G__22342.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__22342.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22342);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22342);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__22343 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22343) : cljs.core.key.call(null,G__22343));
})(),(function (){var G__22344 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22344) : cljs.core.val.call(null,G__22344));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__22348 = cljs.core.next(es);
var G__22349 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__22345 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22345) : cljs.core.key.call(null,G__22345));
})(),(function (){var G__22346 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22346) : cljs.core.val.call(null,G__22346));
})());
es = G__22348;
tcoll__$2 = G__22349;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__22350 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__22351 = (i + (2));
out = G__22350;
i = G__22351;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__22354 = cljs.core.aclone(arr);
(G__22354[i] = a);

return G__22354;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__22355 = cljs.core.aclone(arr);
(G__22355[i] = a);

(G__22355[j] = b);

return G__22355;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__22360 = init__$1;
var G__22361 = k;
var G__22362 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22360,G__22361,G__22362) : f.call(null,G__22360,G__22361,G__22362));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22363 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22363) : cljs.core.deref.call(null,G__22363));
} else {
var G__22364 = (i + (2));
var G__22365 = init__$2;
i = G__22364;
init__$1 = G__22365;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22366 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__22366) : cljs.core.create_inode_seq.call(null,G__22366));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_22380 = (0);
var j_22381 = (0);
while(true){
if((i_22380 < (32))){
if((((self__.bitmap >>> i_22380) & (1)) === (0))){
var G__22382 = (i_22380 + (1));
var G__22383 = j_22381;
i_22380 = G__22382;
j_22381 = G__22383;
continue;
} else {
(nodes[i_22380] = ((!(((self__.arr[j_22381]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_22381])),(self__.arr[j_22381]),(self__.arr[(j_22381 + (1))]),added_leaf_QMARK_):(self__.arr[(j_22381 + (1))])));

var G__22384 = (i_22380 + (1));
var G__22385 = (j_22381 + (2));
i_22380 = G__22384;
j_22381 = G__22385;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__22367 = edit__$1;
var G__22368 = (shift + (5));
var G__22369 = key_or_nil;
var G__22370 = val_or_node;
var G__22371 = hash;
var G__22372 = key;
var G__22373 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__22367,G__22368,G__22369,G__22370,G__22371,G__22372,G__22373) : cljs.core.create_node.call(null,G__22367,G__22368,G__22369,G__22370,G__22371,G__22372,G__22373));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_22386 = (0);
var j_22387 = (0);
while(true){
if((i_22386 < (32))){
if((((self__.bitmap >>> i_22386) & (1)) === (0))){
var G__22388 = (i_22386 + (1));
var G__22389 = j_22387;
i_22386 = G__22388;
j_22387 = G__22389;
continue;
} else {
(nodes[i_22386] = ((!(((self__.arr[j_22387]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_22387])),(self__.arr[j_22387]),(self__.arr[(j_22387 + (1))]),added_leaf_QMARK_):(self__.arr[(j_22387 + (1))])));

var G__22390 = (i_22386 + (1));
var G__22391 = (j_22387 + (2));
i_22386 = G__22390;
j_22387 = G__22391;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__22374 = (shift + (5));
var G__22375 = key_or_nil;
var G__22376 = val_or_node;
var G__22377 = hash;
var G__22378 = key;
var G__22379 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__22374,G__22375,G__22376,G__22377,G__22378,G__22379) : cljs.core.create_node.call(null,G__22374,G__22375,G__22376,G__22377,G__22378,G__22379));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__22392 = (i + (1));
var G__22393 = (j + (2));
var G__22394 = (bitmap | ((1) << i));
i = G__22392;
j = G__22393;
bitmap = G__22394;
continue;
} else {
var G__22395 = (i + (1));
var G__22396 = j;
var G__22397 = bitmap;
i = G__22395;
j = G__22396;
bitmap = G__22397;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22398 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__22398) : cljs.core.create_array_node_seq.call(null,G__22398));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22399 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22399) : cljs.core.deref.call(null,G__22399));
} else {
var G__22400 = (i + (1));
var G__22401 = init__$2;
i = G__22400;
init__$1 = G__22401;
continue;
}
} else {
var G__22402 = (i + (1));
var G__22403 = init__$1;
i = G__22402;
init__$1 = G__22403;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__22404 = (i + (2));
i = G__22404;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22405 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__22405) : cljs.core.create_inode_seq.call(null,G__22405));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__22406 = self__.nodes;
var G__22407 = (self__.i + (2));
var G__22408 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22406,G__22407,G__22408) : cljs.core.create_inode_seq.call(null,G__22406,G__22407,G__22408));
} else {
var G__22409 = self__.nodes;
var G__22410 = self__.i;
var G__22411 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22409,G__22410,G__22411) : cljs.core.create_inode_seq.call(null,G__22409,G__22410,G__22411));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__22415 = (j + (2));
j = G__22415;
continue;
}
} else {
var G__22416 = (j + (2));
j = G__22416;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__22417 = null;
var G__22418 = self__.nodes;
var G__22419 = self__.i;
var G__22420 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__22417,G__22418,G__22419,G__22420) : cljs.core.create_array_node_seq.call(null,G__22417,G__22418,G__22419,G__22420));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__22425 = (j + (1));
j = G__22425;
continue;
}
} else {
var G__22426 = (j + (1));
j = G__22426;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22428 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22428) : cljs.core.keys.call(null,G__22428));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22429 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22429) : cljs.core.vals.call(null,G__22429));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22430 = cljs.core.seq(coll);
var chunk__22431 = null;
var count__22432 = (0);
var i__22433 = (0);
while(true){
if((i__22433 < count__22432)){
var vec__22434 = chunk__22431.cljs$core$IIndexed$_nth$arity$2(null,i__22433);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22434,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22434,(1),null);
var G__22435_22446 = v;
var G__22436_22447 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22435_22446,G__22436_22447) : f.call(null,G__22435_22446,G__22436_22447));

var G__22448 = seq__22430;
var G__22449 = chunk__22431;
var G__22450 = count__22432;
var G__22451 = (i__22433 + (1));
seq__22430 = G__22448;
chunk__22431 = G__22449;
count__22432 = G__22450;
i__22433 = G__22451;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22430);
if(temp__4126__auto__){
var seq__22430__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22430__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__22430__$1);
var G__22452 = cljs.core.chunk_rest(seq__22430__$1);
var G__22453 = c__4559__auto__;
var G__22454 = cljs.core.count(c__4559__auto__);
var G__22455 = (0);
seq__22430 = G__22452;
chunk__22431 = G__22453;
count__22432 = G__22454;
i__22433 = G__22455;
continue;
} else {
var vec__22437 = cljs.core.first(seq__22430__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22437,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22437,(1),null);
var G__22438_22456 = v;
var G__22439_22457 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22438_22456,G__22439_22457) : f.call(null,G__22438_22456,G__22439_22457));

var G__22458 = cljs.core.next(seq__22430__$1);
var G__22459 = null;
var G__22460 = (0);
var G__22461 = (0);
seq__22430 = G__22458;
chunk__22431 = G__22459;
count__22432 = G__22460;
i__22433 = G__22461;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__22440 = init;
var G__22441 = null;
var G__22442 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22440,G__22441,G__22442) : f.call(null,G__22440,G__22441,G__22442));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__22443 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22443) : cljs.core.deref.call(null,G__22443));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj22445 = {};
return obj22445;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22462 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22463 = cljs.core.next(es);
ret = G__22462;
es = G__22463;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__22464 = null;
var G__22464__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22464__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22464 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22464__2.call(this,self__,k);
case 3:
return G__22464__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22464.cljs$core$IFn$_invoke$arity$2 = G__22464__2;
G__22464.cljs$core$IFn$_invoke$arity$3 = G__22464__3;
return G__22464;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args22427){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22427)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__22465 = (i + (2));
var G__22466 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__22465;
ret = G__22466;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__22467 = (i + (1));
var G__22468 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__22467;
out = G__22468;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__22469 = o;
if(G__22469){
var bit__4453__auto__ = (G__22469.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4453__auto__) || (G__22469.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__22469.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22469);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22469);
}
})()){
return tcoll.assoc_BANG_((function (){var G__22470 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22470) : cljs.core.key.call(null,G__22470));
})(),(function (){var G__22471 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22471) : cljs.core.val.call(null,G__22471));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__22474 = cljs.core.next(es);
var G__22475 = tcoll__$1.assoc_BANG_((function (){var G__22472 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22472) : cljs.core.key.call(null,G__22472));
})(),(function (){var G__22473 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22473) : cljs.core.val.call(null,G__22473));
})());
es = G__22474;
tcoll__$1 = G__22475;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__22476 = ((ascending_QMARK_)?t.left:t.right);
var G__22477 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__22476;
stack__$1 = G__22477;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__22490 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22490) : cljs.core.deref.call(null,G__22490));
} else {
var init__$2 = (function (){var G__22491 = init__$1;
var G__22492 = node.key;
var G__22493 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22491,G__22492,G__22493) : f.call(null,G__22491,G__22492,G__22493));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22494 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22494) : cljs.core.deref.call(null,G__22494));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__22495 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22495) : cljs.core.deref.call(null,G__22495));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__22497 = null;
var G__22497__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22497__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22497 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22497__2.call(this,self__,k);
case 3:
return G__22497__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22497.cljs$core$IFn$_invoke$arity$2 = G__22497__2;
G__22497.cljs$core$IFn$_invoke$arity$3 = G__22497__3;
return G__22497;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args22496){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22496)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__22499 = null;
var G__22499__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22499__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22499 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22499__2.call(this,self__,k);
case 3:
return G__22499__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22499.cljs$core$IFn$_invoke$arity$2 = G__22499__2;
G__22499.cljs$core$IFn$_invoke$arity$3 = G__22499__3;
return G__22499;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args22498){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22498)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__22512 = k;
var G__22513 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22512,G__22513) : comp.call(null,G__22512,G__22513));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__22532 = k;
var G__22533 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22532,G__22533) : comp.call(null,G__22532,G__22533));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__22544 = k;
var G__22545 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22544,G__22545) : comp.call(null,G__22544,G__22545));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22547 = cljs.core.seq(coll);
var chunk__22548 = null;
var count__22549 = (0);
var i__22550 = (0);
while(true){
if((i__22550 < count__22549)){
var vec__22551 = chunk__22548.cljs$core$IIndexed$_nth$arity$2(null,i__22550);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22551,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22551,(1),null);
var G__22552_22564 = v;
var G__22553_22565 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22552_22564,G__22553_22565) : f.call(null,G__22552_22564,G__22553_22565));

var G__22566 = seq__22547;
var G__22567 = chunk__22548;
var G__22568 = count__22549;
var G__22569 = (i__22550 + (1));
seq__22547 = G__22566;
chunk__22548 = G__22567;
count__22549 = G__22568;
i__22550 = G__22569;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22547);
if(temp__4126__auto__){
var seq__22547__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22547__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__22547__$1);
var G__22570 = cljs.core.chunk_rest(seq__22547__$1);
var G__22571 = c__4559__auto__;
var G__22572 = cljs.core.count(c__4559__auto__);
var G__22573 = (0);
seq__22547 = G__22570;
chunk__22548 = G__22571;
count__22549 = G__22572;
i__22550 = G__22573;
continue;
} else {
var vec__22554 = cljs.core.first(seq__22547__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22554,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22554,(1),null);
var G__22555_22574 = v;
var G__22556_22575 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22555_22574,G__22556_22575) : f.call(null,G__22555_22574,G__22556_22575));

var G__22576 = cljs.core.next(seq__22547__$1);
var G__22577 = null;
var G__22578 = (0);
var G__22579 = (0);
seq__22547 = G__22576;
chunk__22548 = G__22577;
count__22549 = G__22578;
i__22550 = G__22579;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22557 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22557) : cljs.core.keys.call(null,G__22557));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22558 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22558) : cljs.core.vals.call(null,G__22558));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__22559 = k;
var G__22560 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22559,G__22560) : self__.comp.call(null,G__22559,G__22560));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__22580 = t.left;
t = G__22580;
continue;
} else {
var G__22581 = t.right;
t = G__22581;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22582 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22583 = cljs.core.next(es);
ret = G__22582;
es = G__22583;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__22584 = null;
var G__22584__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22584__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22584 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22584__2.call(this,self__,k);
case 3:
return G__22584__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22584.cljs$core$IFn$_invoke$arity$2 = G__22584__2;
G__22584.cljs$core$IFn$_invoke$arity$3 = G__22584__3;
return G__22584;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args22546){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22546)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__22561 = k;
var G__22562 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22561,G__22562) : self__.comp.call(null,G__22561,G__22562));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__22585 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22586 = t.left;
stack = G__22585;
t = G__22586;
continue;
} else {
var G__22587 = stack;
var G__22588 = t.right;
stack = G__22587;
t = G__22588;
continue;
}
} else {
if((c > (0))){
var G__22589 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22590 = t.right;
stack = G__22589;
t = G__22590;
continue;
} else {
var G__22591 = stack;
var G__22592 = t.left;
stack = G__22591;
t = G__22592;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__22563 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22563) : cljs.core.key.call(null,G__22563));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__22593 = cljs.core.nnext(in$);
var G__22594 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22593;
out = G__22594;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22595__i = 0, G__22595__a = new Array(arguments.length -  0);
while (G__22595__i < G__22595__a.length) {G__22595__a[G__22595__i] = arguments[G__22595__i + 0]; ++G__22595__i;}
  keyvals = new cljs.core.IndexedSeq(G__22595__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__22596){
var keyvals = cljs.core.seq(arglist__22596);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22597__i = 0, G__22597__a = new Array(arguments.length -  0);
while (G__22597__i < G__22597__a.length) {G__22597__a[G__22597__i] = arguments[G__22597__i + 0]; ++G__22597__i;}
  keyvals = new cljs.core.IndexedSeq(G__22597__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__22598){
var keyvals = cljs.core.seq(arglist__22598);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj22602 = {};
return obj22602;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__22603 = cljs.core.nnext(kvs);
kvs = G__22603;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22604__i = 0, G__22604__a = new Array(arguments.length -  0);
while (G__22604__i < G__22604__a.length) {G__22604__a[G__22604__i] = arguments[G__22604__i + 0]; ++G__22604__i;}
  keyvals = new cljs.core.IndexedSeq(G__22604__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__22605){
var keyvals = cljs.core.seq(arglist__22605);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__22606 = cljs.core.nnext(in$);
var G__22607 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22606;
out = G__22607;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22608__i = 0, G__22608__a = new Array(arguments.length -  0);
while (G__22608__i < G__22608__a.length) {G__22608__a[G__22608__i] = arguments[G__22608__i + 0]; ++G__22608__i;}
  keyvals = new cljs.core.IndexedSeq(G__22608__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__22609){
var keyvals = cljs.core.seq(arglist__22609);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__22610 = cljs.core.nnext(in$);
var G__22611 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22610;
out = G__22611;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__22612__i = 0, G__22612__a = new Array(arguments.length -  1);
while (G__22612__i < G__22612__a.length) {G__22612__a[G__22612__i] = arguments[G__22612__i + 1]; ++G__22612__i;}
  keyvals = new cljs.core.IndexedSeq(G__22612__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__22613){
var comparator = cljs.core.first(arglist__22613);
var keyvals = cljs.core.rest(arglist__22613);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22614 = self__.mseq;
if(G__22614){
var bit__4453__auto__ = (G__22614.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__22614.cljs$core$INext$)){
return true;
} else {
if((!G__22614.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22614);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22614);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22615 = self__.mseq;
if(G__22615){
var bit__4453__auto__ = (G__22615.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__22615.cljs$core$INext$)){
return true;
} else {
if((!G__22615.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22615);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22615);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22616 = self__.mseq;
if(G__22616){
var bit__4453__auto__ = (G__22616.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__22616.cljs$core$INext$)){
return true;
} else {
if((!G__22616.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22616);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22616);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22617 = self__.mseq;
if(G__22617){
var bit__4453__auto__ = (G__22617.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__22617.cljs$core$INext$)){
return true;
} else {
if((!G__22617.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22617);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22617);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__22618_SHARP_,p2__22619_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3772__auto__ = p1__22618_SHARP_;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__22619_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__22620__i = 0, G__22620__a = new Array(arguments.length -  0);
while (G__22620__i < G__22620__a.length) {G__22620__a[G__22620__i] = arguments[G__22620__i + 0]; ++G__22620__i;}
  maps = new cljs.core.IndexedSeq(G__22620__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__22621){
var maps = cljs.core.seq(arglist__22621);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22624 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22625 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22624,G__22625) : f.call(null,G__22624,G__22625));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3772__auto__ = m1;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__22626__i = 0, G__22626__a = new Array(arguments.length -  1);
while (G__22626__i < G__22626__a.length) {G__22626__a[G__22626__i] = arguments[G__22626__i + 1]; ++G__22626__i;}
  maps = new cljs.core.IndexedSeq(G__22626__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__22627){
var f = cljs.core.first(arglist__22627);
var maps = cljs.core.rest(arglist__22627);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$90);
var G__22628 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$90))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__22629 = cljs.core.next(keys);
ret = G__22628;
keys = G__22629;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22632 = cljs.core.seq(coll);
var chunk__22633 = null;
var count__22634 = (0);
var i__22635 = (0);
while(true){
if((i__22635 < count__22634)){
var vec__22636 = chunk__22633.cljs$core$IIndexed$_nth$arity$2(null,i__22635);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22636,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22636,(1),null);
var G__22637_22642 = v;
var G__22638_22643 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22637_22642,G__22638_22643) : f.call(null,G__22637_22642,G__22638_22643));

var G__22644 = seq__22632;
var G__22645 = chunk__22633;
var G__22646 = count__22634;
var G__22647 = (i__22635 + (1));
seq__22632 = G__22644;
chunk__22633 = G__22645;
count__22634 = G__22646;
i__22635 = G__22647;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22632);
if(temp__4126__auto__){
var seq__22632__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22632__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__22632__$1);
var G__22648 = cljs.core.chunk_rest(seq__22632__$1);
var G__22649 = c__4559__auto__;
var G__22650 = cljs.core.count(c__4559__auto__);
var G__22651 = (0);
seq__22632 = G__22648;
chunk__22633 = G__22649;
count__22634 = G__22650;
i__22635 = G__22651;
continue;
} else {
var vec__22639 = cljs.core.first(seq__22632__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22639,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22639,(1),null);
var G__22640_22652 = v;
var G__22641_22653 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22640_22652,G__22641_22653) : f.call(null,G__22640_22652,G__22641_22653));

var G__22654 = cljs.core.next(seq__22632__$1);
var G__22655 = null;
var G__22656 = (0);
var G__22657 = (0);
seq__22632 = G__22654;
chunk__22633 = G__22655;
count__22634 = G__22656;
i__22635 = G__22657;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22630_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22630_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__22658 = null;
var G__22658__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22658__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22658 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22658__2.call(this,self__,k);
case 3:
return G__22658__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22658.cljs$core$IFn$_invoke$arity$2 = G__22658__2;
G__22658.cljs$core$IFn$_invoke$arity$3 = G__22658__3;
return G__22658;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args22631){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22631)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__22659 = (i + (1));
var G__22660 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__22659;
out = G__22660;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__22661 = (i + (1));
var G__22662 = cljs.core._conj_BANG_(out,(items[i]));
i = G__22661;
out = G__22662;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__22664 = null;
var G__22664__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__22664__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__22664 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22664__2.call(this,self__,k);
case 3:
return G__22664__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22664.cljs$core$IFn$_invoke$arity$2 = G__22664__2;
G__22664.cljs$core$IFn$_invoke$arity$3 = G__22664__3;
return G__22664;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args22663){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22663)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22667 = cljs.core.seq(coll);
var chunk__22668 = null;
var count__22669 = (0);
var i__22670 = (0);
while(true){
if((i__22670 < count__22669)){
var vec__22671 = chunk__22668.cljs$core$IIndexed$_nth$arity$2(null,i__22670);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22671,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22671,(1),null);
var G__22672_22677 = v;
var G__22673_22678 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22672_22677,G__22673_22678) : f.call(null,G__22672_22677,G__22673_22678));

var G__22679 = seq__22667;
var G__22680 = chunk__22668;
var G__22681 = count__22669;
var G__22682 = (i__22670 + (1));
seq__22667 = G__22679;
chunk__22668 = G__22680;
count__22669 = G__22681;
i__22670 = G__22682;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22667);
if(temp__4126__auto__){
var seq__22667__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22667__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__22667__$1);
var G__22683 = cljs.core.chunk_rest(seq__22667__$1);
var G__22684 = c__4559__auto__;
var G__22685 = cljs.core.count(c__4559__auto__);
var G__22686 = (0);
seq__22667 = G__22683;
chunk__22668 = G__22684;
count__22669 = G__22685;
i__22670 = G__22686;
continue;
} else {
var vec__22674 = cljs.core.first(seq__22667__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22674,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22674,(1),null);
var G__22675_22687 = v;
var G__22676_22688 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22675_22687,G__22676_22688) : f.call(null,G__22675_22687,G__22676_22688));

var G__22689 = cljs.core.next(seq__22667__$1);
var G__22690 = null;
var G__22691 = (0);
var G__22692 = (0);
seq__22667 = G__22689;
chunk__22668 = G__22690;
count__22669 = G__22691;
i__22670 = G__22692;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22665_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22665_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__22693 = null;
var G__22693__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22693__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22693 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22693__2.call(this,self__,k);
case 3:
return G__22693__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22693.cljs$core$IFn$_invoke$arity$2 = G__22693__2;
G__22693.cljs$core$IFn$_invoke$arity$3 = G__22693__3;
return G__22693;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args22666){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22666)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4653__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4653__auto__.length)){
var G__22694 = (i + (1));
var G__22695 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__22694;
res = G__22695;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__22696 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__22697 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__22696;
out = G__22697;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__22698__delegate = function (keys){
return cljs.core.set(keys);
};
var G__22698 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22699__i = 0, G__22699__a = new Array(arguments.length -  0);
while (G__22699__i < G__22699__a.length) {G__22699__a[G__22699__i] = arguments[G__22699__i + 0]; ++G__22699__i;}
  keys = new cljs.core.IndexedSeq(G__22699__a,0);
} 
return G__22698__delegate.call(this,keys);};
G__22698.cljs$lang$maxFixedArity = 0;
G__22698.cljs$lang$applyTo = (function (arglist__22700){
var keys = cljs.core.seq(arglist__22700);
return G__22698__delegate(keys);
});
G__22698.cljs$core$IFn$_invoke$arity$variadic = G__22698__delegate;
return G__22698;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__22701 = null;
if (arguments.length > 0) {
var G__22702__i = 0, G__22702__a = new Array(arguments.length -  0);
while (G__22702__i < G__22702__a.length) {G__22702__a[G__22702__i] = arguments[G__22702__i + 0]; ++G__22702__i;}
G__22701 = new cljs.core.IndexedSeq(G__22702__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__22701);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22703__i = 0, G__22703__a = new Array(arguments.length -  0);
while (G__22703__i < G__22703__a.length) {G__22703__a[G__22703__i] = arguments[G__22703__i + 0]; ++G__22703__i;}
  keys = new cljs.core.IndexedSeq(G__22703__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__22704){
var keys = cljs.core.seq(arglist__22704);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__22705__i = 0, G__22705__a = new Array(arguments.length -  1);
while (G__22705__i < G__22705__a.length) {G__22705__a[G__22705__i] = arguments[G__22705__i + 1]; ++G__22705__i;}
  keys = new cljs.core.IndexedSeq(G__22705__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__22706){
var comparator = cljs.core.first(arglist__22706);
var keys = cljs.core.rest(arglist__22706);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__22707_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22707_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__22707_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22708_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22708_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__22708_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__22729 = null;
var G__22729__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22729__1 = (function (result){
var G__22719 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22719) : rf.call(null,G__22719));
});
var G__22729__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__22720 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22720) : cljs.core.deref.call(null,G__22720));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__22721 = result;
var G__22722 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22721,G__22722) : rf.call(null,G__22721,G__22722));
}
});
G__22729 = function(result,input){
switch(arguments.length){
case 0:
return G__22729__0.call(this);
case 1:
return G__22729__1.call(this,result);
case 2:
return G__22729__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22729.cljs$core$IFn$_invoke$arity$0 = G__22729__0;
G__22729.cljs$core$IFn$_invoke$arity$1 = G__22729__1;
G__22729.cljs$core$IFn$_invoke$arity$2 = G__22729__2;
return G__22729;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__22727,seen__$1){
while(true){
var vec__22728 = p__22727;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22728,(0),null);
var xs__$1 = vec__22728;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__22730 = cljs.core.rest(s);
var G__22731 = seen__$1;
p__22727 = G__22730;
seen__$1 = G__22731;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__22732 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__22733 = cljs.core.next(s__$1);
ret = G__22732;
s__$1 = G__22733;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__22735 = x;
if(G__22735){
var bit__4446__auto__ = (G__22735.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4446__auto__) || (G__22735.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__22736 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__22737 = cljs.core.next(ks);
var G__22738 = cljs.core.next(vs);
map = G__22736;
ks = G__22737;
vs = G__22738;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__22749 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22749) : k.call(null,G__22749));
})() > (function (){var G__22750 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22750) : k.call(null,G__22750));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__22751__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22739_SHARP_,p2__22740_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__22739_SHARP_,p2__22740_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22751 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22752__i = 0, G__22752__a = new Array(arguments.length -  3);
while (G__22752__i < G__22752__a.length) {G__22752__a[G__22752__i] = arguments[G__22752__i + 3]; ++G__22752__i;}
  more = new cljs.core.IndexedSeq(G__22752__a,0);
} 
return G__22751__delegate.call(this,k,x,y,more);};
G__22751.cljs$lang$maxFixedArity = 3;
G__22751.cljs$lang$applyTo = (function (arglist__22753){
var k = cljs.core.first(arglist__22753);
arglist__22753 = cljs.core.next(arglist__22753);
var x = cljs.core.first(arglist__22753);
arglist__22753 = cljs.core.next(arglist__22753);
var y = cljs.core.first(arglist__22753);
var more = cljs.core.rest(arglist__22753);
return G__22751__delegate(k,x,y,more);
});
G__22751.cljs$core$IFn$_invoke$arity$variadic = G__22751__delegate;
return G__22751;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__22754 = null;
if (arguments.length > 3) {
var G__22755__i = 0, G__22755__a = new Array(arguments.length -  3);
while (G__22755__i < G__22755__a.length) {G__22755__a[G__22755__i] = arguments[G__22755__i + 3]; ++G__22755__i;}
G__22754 = new cljs.core.IndexedSeq(G__22755__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22754);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__22766 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22766) : k.call(null,G__22766));
})() < (function (){var G__22767 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22767) : k.call(null,G__22767));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__22768__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22756_SHARP_,p2__22757_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__22756_SHARP_,p2__22757_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22768 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22769__i = 0, G__22769__a = new Array(arguments.length -  3);
while (G__22769__i < G__22769__a.length) {G__22769__a[G__22769__i] = arguments[G__22769__i + 3]; ++G__22769__i;}
  more = new cljs.core.IndexedSeq(G__22769__a,0);
} 
return G__22768__delegate.call(this,k,x,y,more);};
G__22768.cljs$lang$maxFixedArity = 3;
G__22768.cljs$lang$applyTo = (function (arglist__22770){
var k = cljs.core.first(arglist__22770);
arglist__22770 = cljs.core.next(arglist__22770);
var x = cljs.core.first(arglist__22770);
arglist__22770 = cljs.core.next(arglist__22770);
var y = cljs.core.first(arglist__22770);
var more = cljs.core.rest(arglist__22770);
return G__22768__delegate(k,x,y,more);
});
G__22768.cljs$core$IFn$_invoke$arity$variadic = G__22768__delegate;
return G__22768;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__22771 = null;
if (arguments.length > 3) {
var G__22772__i = 0, G__22772__a = new Array(arguments.length -  3);
while (G__22772__i < G__22772__a.length) {G__22772__a[G__22772__i] = arguments[G__22772__i + 3]; ++G__22772__i;}
G__22771 = new cljs.core.IndexedSeq(G__22772__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22771);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__22789 = null;
var G__22789__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22789__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22784 = result;
var G__22785 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22784,G__22785) : rf.call(null,G__22784,G__22785));
})());
})());
var G__22786 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22786) : rf.call(null,G__22786));
});
var G__22789__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__22787 = result;
var G__22788 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22787,G__22788) : rf.call(null,G__22787,G__22788));
} else {
return result;
}
});
G__22789 = function(result,input){
switch(arguments.length){
case 0:
return G__22789__0.call(this);
case 1:
return G__22789__1.call(this,result);
case 2:
return G__22789__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22789.cljs$core$IFn$_invoke$arity$0 = G__22789__0;
G__22789.cljs$core$IFn$_invoke$arity$1 = G__22789__1;
G__22789.cljs$core$IFn$_invoke$arity$2 = G__22789__2;
return G__22789;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__22802 = null;
var G__22802__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22802__1 = (function (result){
var G__22797 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22797) : rf.call(null,G__22797));
});
var G__22802__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22798 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22798) : pred.call(null,G__22798));
})())){
var G__22799 = result;
var G__22800 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22799,G__22800) : rf.call(null,G__22799,G__22800));
} else {
return cljs.core.reduced(result);
}
});
G__22802 = function(result,input){
switch(arguments.length){
case 0:
return G__22802__0.call(this);
case 1:
return G__22802__1.call(this,result);
case 2:
return G__22802__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22802.cljs$core$IFn$_invoke$arity$0 = G__22802__0;
G__22802.cljs$core$IFn$_invoke$arity$1 = G__22802__1;
G__22802.cljs$core$IFn$_invoke$arity$2 = G__22802__2;
return G__22802;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__22801 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22801) : pred.call(null,G__22801));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__22807 = (function (){var G__22809 = cljs.core._entry_key(sc,e);
var G__22810 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22809,G__22810) : comp.call(null,G__22809,G__22810));
})();
var G__22808 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__22807,G__22808) : test.call(null,G__22807,G__22808));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22814 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22814,(0),null);
var s = vec__22814;
if(cljs.core.truth_((function (){var G__22815 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22815) : include.call(null,G__22815));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22816 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22816,(0),null);
var s = vec__22816;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22820 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22820,(0),null);
var s = vec__22820;
if(cljs.core.truth_((function (){var G__22821 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22821) : include.call(null,G__22821));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22822 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22822,(0),null);
var s = vec__22822;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__22823 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22823) : Math.ceil.call(null,G__22823));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__22824 = ret;
var G__22825 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22824,G__22825) : f.call(null,G__22824,G__22825));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__22826 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22826) : cljs.core.deref.call(null,G__22826));
} else {
var G__22827 = (i + self__.step);
var G__22828 = ret__$1;
i = G__22827;
ret = G__22828;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22846 = null;
var G__22846__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22846__1 = (function (result){
var G__22843 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22843) : rf.call(null,G__22843));
});
var G__22846__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__22844 = result;
var G__22845 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22844,G__22845) : rf.call(null,G__22844,G__22845));
} else {
return result;
}
});
G__22846 = function(result,input){
switch(arguments.length){
case 0:
return G__22846__0.call(this);
case 1:
return G__22846__1.call(this,result);
case 2:
return G__22846__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22846.cljs$core$IFn$_invoke$arity$0 = G__22846__0;
G__22846.cljs$core$IFn$_invoke$arity$1 = G__22846__1;
G__22846.cljs$core$IFn$_invoke$arity$2 = G__22846__2;
return G__22846;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$91);
return ((function (a,pa){
return (function() {
var G__22868 = null;
var G__22868__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22868__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22859 = result;
var G__22860 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22859,G__22860) : rf.call(null,G__22859,G__22860));
})());
})());
var G__22861 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22861) : rf.call(null,G__22861));
});
var G__22868__2 = (function (result,input){
var pval = (function (){var G__22862 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22862) : cljs.core.deref.call(null,G__22862));
})();
var val = (function (){var G__22863 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22863) : f.call(null,G__22863));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$91)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__22864 = result;
var G__22865 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22864,G__22865) : rf.call(null,G__22864,G__22865));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__22868 = function(result,input){
switch(arguments.length){
case 0:
return G__22868__0.call(this);
case 1:
return G__22868__1.call(this,result);
case 2:
return G__22868__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22868.cljs$core$IFn$_invoke$arity$0 = G__22868__0;
G__22868.cljs$core$IFn$_invoke$arity$1 = G__22868__1;
G__22868.cljs$core$IFn$_invoke$arity$2 = G__22868__2;
return G__22868;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__22866 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22866) : f.call(null,G__22866));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__22847_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__22867 = p1__22847_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22867) : f.call(null,G__22867));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__22877 = init;
var G__22878 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22877,G__22878) : f.call(null,G__22877,G__22878));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__22973 = null;
var G__22973__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__22973__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22931 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22931) : f.call(null,G__22931));
})()],null));
});
var G__22973__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22932 = x;
var G__22933 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22932,G__22933) : f.call(null,G__22932,G__22933));
})()],null));
});
var G__22973__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22934 = x;
var G__22935 = y;
var G__22936 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22934,G__22935,G__22936) : f.call(null,G__22934,G__22935,G__22936));
})()],null));
});
var G__22973__4 = (function() { 
var G__22974__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__22974 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22975__i = 0, G__22975__a = new Array(arguments.length -  3);
while (G__22975__i < G__22975__a.length) {G__22975__a[G__22975__i] = arguments[G__22975__i + 3]; ++G__22975__i;}
  args = new cljs.core.IndexedSeq(G__22975__a,0);
} 
return G__22974__delegate.call(this,x,y,z,args);};
G__22974.cljs$lang$maxFixedArity = 3;
G__22974.cljs$lang$applyTo = (function (arglist__22976){
var x = cljs.core.first(arglist__22976);
arglist__22976 = cljs.core.next(arglist__22976);
var y = cljs.core.first(arglist__22976);
arglist__22976 = cljs.core.next(arglist__22976);
var z = cljs.core.first(arglist__22976);
var args = cljs.core.rest(arglist__22976);
return G__22974__delegate(x,y,z,args);
});
G__22974.cljs$core$IFn$_invoke$arity$variadic = G__22974__delegate;
return G__22974;
})()
;
G__22973 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22973__0.call(this);
case 1:
return G__22973__1.call(this,x);
case 2:
return G__22973__2.call(this,x,y);
case 3:
return G__22973__3.call(this,x,y,z);
default:
var G__22977 = null;
if (arguments.length > 3) {
var G__22978__i = 0, G__22978__a = new Array(arguments.length -  3);
while (G__22978__i < G__22978__a.length) {G__22978__a[G__22978__i] = arguments[G__22978__i + 3]; ++G__22978__i;}
G__22977 = new cljs.core.IndexedSeq(G__22978__a,0);
}
return G__22973__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22977);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22973.cljs$lang$maxFixedArity = 3;
G__22973.cljs$lang$applyTo = G__22973__4.cljs$lang$applyTo;
G__22973.cljs$core$IFn$_invoke$arity$0 = G__22973__0;
G__22973.cljs$core$IFn$_invoke$arity$1 = G__22973__1;
G__22973.cljs$core$IFn$_invoke$arity$2 = G__22973__2;
G__22973.cljs$core$IFn$_invoke$arity$3 = G__22973__3;
G__22973.cljs$core$IFn$_invoke$arity$variadic = G__22973__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22973;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__22979 = null;
var G__22979__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__22979__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22937 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22937) : f.call(null,G__22937));
})(),(function (){var G__22938 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22938) : g.call(null,G__22938));
})()],null));
});
var G__22979__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22939 = x;
var G__22940 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22939,G__22940) : f.call(null,G__22939,G__22940));
})(),(function (){var G__22941 = x;
var G__22942 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22941,G__22942) : g.call(null,G__22941,G__22942));
})()],null));
});
var G__22979__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22943 = x;
var G__22944 = y;
var G__22945 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22943,G__22944,G__22945) : f.call(null,G__22943,G__22944,G__22945));
})(),(function (){var G__22946 = x;
var G__22947 = y;
var G__22948 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22946,G__22947,G__22948) : g.call(null,G__22946,G__22947,G__22948));
})()],null));
});
var G__22979__4 = (function() { 
var G__22980__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__22980 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22981__i = 0, G__22981__a = new Array(arguments.length -  3);
while (G__22981__i < G__22981__a.length) {G__22981__a[G__22981__i] = arguments[G__22981__i + 3]; ++G__22981__i;}
  args = new cljs.core.IndexedSeq(G__22981__a,0);
} 
return G__22980__delegate.call(this,x,y,z,args);};
G__22980.cljs$lang$maxFixedArity = 3;
G__22980.cljs$lang$applyTo = (function (arglist__22982){
var x = cljs.core.first(arglist__22982);
arglist__22982 = cljs.core.next(arglist__22982);
var y = cljs.core.first(arglist__22982);
arglist__22982 = cljs.core.next(arglist__22982);
var z = cljs.core.first(arglist__22982);
var args = cljs.core.rest(arglist__22982);
return G__22980__delegate(x,y,z,args);
});
G__22980.cljs$core$IFn$_invoke$arity$variadic = G__22980__delegate;
return G__22980;
})()
;
G__22979 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22979__0.call(this);
case 1:
return G__22979__1.call(this,x);
case 2:
return G__22979__2.call(this,x,y);
case 3:
return G__22979__3.call(this,x,y,z);
default:
var G__22983 = null;
if (arguments.length > 3) {
var G__22984__i = 0, G__22984__a = new Array(arguments.length -  3);
while (G__22984__i < G__22984__a.length) {G__22984__a[G__22984__i] = arguments[G__22984__i + 3]; ++G__22984__i;}
G__22983 = new cljs.core.IndexedSeq(G__22984__a,0);
}
return G__22979__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22983);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22979.cljs$lang$maxFixedArity = 3;
G__22979.cljs$lang$applyTo = G__22979__4.cljs$lang$applyTo;
G__22979.cljs$core$IFn$_invoke$arity$0 = G__22979__0;
G__22979.cljs$core$IFn$_invoke$arity$1 = G__22979__1;
G__22979.cljs$core$IFn$_invoke$arity$2 = G__22979__2;
G__22979.cljs$core$IFn$_invoke$arity$3 = G__22979__3;
G__22979.cljs$core$IFn$_invoke$arity$variadic = G__22979__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22979;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__22985 = null;
var G__22985__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__22985__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22949 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22949) : f.call(null,G__22949));
})(),(function (){var G__22950 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__22950) : g.call(null,G__22950));
})(),(function (){var G__22951 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__22951) : h.call(null,G__22951));
})()],null));
});
var G__22985__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22952 = x;
var G__22953 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22952,G__22953) : f.call(null,G__22952,G__22953));
})(),(function (){var G__22954 = x;
var G__22955 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__22954,G__22955) : g.call(null,G__22954,G__22955));
})(),(function (){var G__22956 = x;
var G__22957 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__22956,G__22957) : h.call(null,G__22956,G__22957));
})()],null));
});
var G__22985__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__22958 = x;
var G__22959 = y;
var G__22960 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22958,G__22959,G__22960) : f.call(null,G__22958,G__22959,G__22960));
})(),(function (){var G__22961 = x;
var G__22962 = y;
var G__22963 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__22961,G__22962,G__22963) : g.call(null,G__22961,G__22962,G__22963));
})(),(function (){var G__22964 = x;
var G__22965 = y;
var G__22966 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__22964,G__22965,G__22966) : h.call(null,G__22964,G__22965,G__22966));
})()],null));
});
var G__22985__4 = (function() { 
var G__22986__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__22986 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22987__i = 0, G__22987__a = new Array(arguments.length -  3);
while (G__22987__i < G__22987__a.length) {G__22987__a[G__22987__i] = arguments[G__22987__i + 3]; ++G__22987__i;}
  args = new cljs.core.IndexedSeq(G__22987__a,0);
} 
return G__22986__delegate.call(this,x,y,z,args);};
G__22986.cljs$lang$maxFixedArity = 3;
G__22986.cljs$lang$applyTo = (function (arglist__22988){
var x = cljs.core.first(arglist__22988);
arglist__22988 = cljs.core.next(arglist__22988);
var y = cljs.core.first(arglist__22988);
arglist__22988 = cljs.core.next(arglist__22988);
var z = cljs.core.first(arglist__22988);
var args = cljs.core.rest(arglist__22988);
return G__22986__delegate(x,y,z,args);
});
G__22986.cljs$core$IFn$_invoke$arity$variadic = G__22986__delegate;
return G__22986;
})()
;
G__22985 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22985__0.call(this);
case 1:
return G__22985__1.call(this,x);
case 2:
return G__22985__2.call(this,x,y);
case 3:
return G__22985__3.call(this,x,y,z);
default:
var G__22989 = null;
if (arguments.length > 3) {
var G__22990__i = 0, G__22990__a = new Array(arguments.length -  3);
while (G__22990__i < G__22990__a.length) {G__22990__a[G__22990__i] = arguments[G__22990__i + 3]; ++G__22990__i;}
G__22989 = new cljs.core.IndexedSeq(G__22990__a,0);
}
return G__22985__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22989);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22985.cljs$lang$maxFixedArity = 3;
G__22985.cljs$lang$applyTo = G__22985__4.cljs$lang$applyTo;
G__22985.cljs$core$IFn$_invoke$arity$0 = G__22985__0;
G__22985.cljs$core$IFn$_invoke$arity$1 = G__22985__1;
G__22985.cljs$core$IFn$_invoke$arity$2 = G__22985__2;
G__22985.cljs$core$IFn$_invoke$arity$3 = G__22985__3;
G__22985.cljs$core$IFn$_invoke$arity$variadic = G__22985__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22985;
})()
});
var juxt__4 = (function() { 
var G__22991__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__22992 = null;
var G__22992__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22879_SHARP_,p2__22880_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22879_SHARP_,(function (){return (p2__22880_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__22880_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__22880_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22992__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22881_SHARP_,p2__22882_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22881_SHARP_,(function (){var G__22967 = x;
return (p2__22882_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__22882_SHARP_.cljs$core$IFn$_invoke$arity$1(G__22967) : p2__22882_SHARP_.call(null,G__22967));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22992__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22883_SHARP_,p2__22884_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22883_SHARP_,(function (){var G__22968 = x;
var G__22969 = y;
return (p2__22884_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__22884_SHARP_.cljs$core$IFn$_invoke$arity$2(G__22968,G__22969) : p2__22884_SHARP_.call(null,G__22968,G__22969));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22992__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22885_SHARP_,p2__22886_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22885_SHARP_,(function (){var G__22970 = x;
var G__22971 = y;
var G__22972 = z;
return (p2__22886_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__22886_SHARP_.cljs$core$IFn$_invoke$arity$3(G__22970,G__22971,G__22972) : p2__22886_SHARP_.call(null,G__22970,G__22971,G__22972));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__22992__4 = (function() { 
var G__22993__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__22887_SHARP_,p2__22888_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__22887_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__22888_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__22993 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__22994__i = 0, G__22994__a = new Array(arguments.length -  3);
while (G__22994__i < G__22994__a.length) {G__22994__a[G__22994__i] = arguments[G__22994__i + 3]; ++G__22994__i;}
  args = new cljs.core.IndexedSeq(G__22994__a,0);
} 
return G__22993__delegate.call(this,x,y,z,args);};
G__22993.cljs$lang$maxFixedArity = 3;
G__22993.cljs$lang$applyTo = (function (arglist__22995){
var x = cljs.core.first(arglist__22995);
arglist__22995 = cljs.core.next(arglist__22995);
var y = cljs.core.first(arglist__22995);
arglist__22995 = cljs.core.next(arglist__22995);
var z = cljs.core.first(arglist__22995);
var args = cljs.core.rest(arglist__22995);
return G__22993__delegate(x,y,z,args);
});
G__22993.cljs$core$IFn$_invoke$arity$variadic = G__22993__delegate;
return G__22993;
})()
;
G__22992 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__22992__0.call(this);
case 1:
return G__22992__1.call(this,x);
case 2:
return G__22992__2.call(this,x,y);
case 3:
return G__22992__3.call(this,x,y,z);
default:
var G__22996 = null;
if (arguments.length > 3) {
var G__22997__i = 0, G__22997__a = new Array(arguments.length -  3);
while (G__22997__i < G__22997__a.length) {G__22997__a[G__22997__i] = arguments[G__22997__i + 3]; ++G__22997__i;}
G__22996 = new cljs.core.IndexedSeq(G__22997__a,0);
}
return G__22992__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__22996);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22992.cljs$lang$maxFixedArity = 3;
G__22992.cljs$lang$applyTo = G__22992__4.cljs$lang$applyTo;
G__22992.cljs$core$IFn$_invoke$arity$0 = G__22992__0;
G__22992.cljs$core$IFn$_invoke$arity$1 = G__22992__1;
G__22992.cljs$core$IFn$_invoke$arity$2 = G__22992__2;
G__22992.cljs$core$IFn$_invoke$arity$3 = G__22992__3;
G__22992.cljs$core$IFn$_invoke$arity$variadic = G__22992__4.cljs$core$IFn$_invoke$arity$variadic;
return G__22992;
})()
;})(fs__$1))
};
var G__22991 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__22998__i = 0, G__22998__a = new Array(arguments.length -  3);
while (G__22998__i < G__22998__a.length) {G__22998__a[G__22998__i] = arguments[G__22998__i + 3]; ++G__22998__i;}
  fs = new cljs.core.IndexedSeq(G__22998__a,0);
} 
return G__22991__delegate.call(this,f,g,h,fs);};
G__22991.cljs$lang$maxFixedArity = 3;
G__22991.cljs$lang$applyTo = (function (arglist__22999){
var f = cljs.core.first(arglist__22999);
arglist__22999 = cljs.core.next(arglist__22999);
var g = cljs.core.first(arglist__22999);
arglist__22999 = cljs.core.next(arglist__22999);
var h = cljs.core.first(arglist__22999);
var fs = cljs.core.rest(arglist__22999);
return G__22991__delegate(f,g,h,fs);
});
G__22991.cljs$core$IFn$_invoke$arity$variadic = G__22991__delegate;
return G__22991;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__23000 = null;
if (arguments.length > 3) {
var G__23001__i = 0, G__23001__a = new Array(arguments.length -  3);
while (G__23001__i < G__23001__a.length) {G__23001__a[G__23001__i] = arguments[G__23001__i + 3]; ++G__23001__i;}
G__23000 = new cljs.core.IndexedSeq(G__23001__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__23000);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__23002 = cljs.core.next(coll);
coll = G__23002;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__23003 = (n - (1));
var G__23004 = cljs.core.next(coll);
n = G__23003;
coll = G__23004;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__23008 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23008,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23008,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23008,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_23016 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__23017_23023 = cljs.core.first(coll);
var G__23018_23024 = writer;
var G__23019_23025 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23017_23023,G__23018_23024,G__23019_23025) : print_one.call(null,G__23017_23023,G__23018_23024,G__23019_23025));
} else {
}

var coll_23026__$1 = cljs.core.next(coll);
var n_23027 = (cljs.core.constant$keyword$81.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_23026__$1) && (((n_23027 == null)) || (!((n_23027 === (0)))))){
cljs.core._write(writer,sep);

var G__23020_23028 = cljs.core.first(coll_23026__$1);
var G__23021_23029 = writer;
var G__23022_23030 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23020_23028,G__23021_23029,G__23022_23030) : print_one.call(null,G__23020_23028,G__23021_23029,G__23022_23030));

var G__23031 = cljs.core.next(coll_23026__$1);
var G__23032 = (n_23027 - (1));
coll_23026__$1 = G__23031;
n_23027 = G__23032;
continue;
} else {
if((cljs.core.seq(coll_23026__$1)) && ((n_23027 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_23016;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__23037 = cljs.core.seq(ss);
var chunk__23038 = null;
var count__23039 = (0);
var i__23040 = (0);
while(true){
if((i__23040 < count__23039)){
var s = chunk__23038.cljs$core$IIndexed$_nth$arity$2(null,i__23040);
cljs.core._write(writer,s);

var G__23041 = seq__23037;
var G__23042 = chunk__23038;
var G__23043 = count__23039;
var G__23044 = (i__23040 + (1));
seq__23037 = G__23041;
chunk__23038 = G__23042;
count__23039 = G__23043;
i__23040 = G__23044;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23037);
if(temp__4126__auto__){
var seq__23037__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23037__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__23037__$1);
var G__23045 = cljs.core.chunk_rest(seq__23037__$1);
var G__23046 = c__4559__auto__;
var G__23047 = cljs.core.count(c__4559__auto__);
var G__23048 = (0);
seq__23037 = G__23045;
chunk__23038 = G__23046;
count__23039 = G__23047;
i__23040 = G__23048;
continue;
} else {
var s = cljs.core.first(seq__23037__$1);
cljs.core._write(writer,s);

var G__23049 = cljs.core.next(seq__23037__$1);
var G__23050 = null;
var G__23051 = (0);
var G__23052 = (0);
seq__23037 = G__23049;
chunk__23038 = G__23050;
count__23039 = G__23051;
i__23040 = G__23052;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__23053__i = 0, G__23053__a = new Array(arguments.length -  1);
while (G__23053__i < G__23053__a.length) {G__23053__a[G__23053__i] = arguments[G__23053__i + 1]; ++G__23053__i;}
  ss = new cljs.core.IndexedSeq(G__23053__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__23054){
var writer = cljs.core.first(arglist__23054);
var ss = cljs.core.rest(arglist__23054);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj23056 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj23056;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__23059 = "[\\\\\"\b\f\n\r\t]";
var G__23060 = "g";
return RegExp(G__23059,G__23060);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3760__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$79);
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__23074 = obj;
if(G__23074){
var bit__4453__auto__ = (G__23074.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4453__auto__) || (G__23074.cljs$core$IMeta$)){
return true;
} else {
if((!G__23074.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23074);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23074);
}
})();
if(and__3760__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__23075 = obj;
if(G__23075){
var bit__4446__auto__ = (G__23075.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4446__auto__) || (G__23075.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__23076 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__23077 = pr_writer;
var G__23078 = writer;
var G__23079 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__23076,G__23077,G__23078,G__23079) : cljs.core.print_map.call(null,G__23076,G__23077,G__23078,G__23079));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__23080 = obj;
return goog.isString(G__23080);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$78.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__23082 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__23082;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__23081 = obj;
if(G__23081){
var bit__4453__auto__ = (G__23081.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4453__auto__) || (G__23081.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__23081.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23081);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23081);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__23087 = cljs.core.seq(cljs.core.next(objs));
var chunk__23088 = null;
var count__23089 = (0);
var i__23090 = (0);
while(true){
if((i__23090 < count__23089)){
var obj = chunk__23088.cljs$core$IIndexed$_nth$arity$2(null,i__23090);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23091 = seq__23087;
var G__23092 = chunk__23088;
var G__23093 = count__23089;
var G__23094 = (i__23090 + (1));
seq__23087 = G__23091;
chunk__23088 = G__23092;
count__23089 = G__23093;
i__23090 = G__23094;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23087);
if(temp__4126__auto__){
var seq__23087__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23087__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__23087__$1);
var G__23095 = cljs.core.chunk_rest(seq__23087__$1);
var G__23096 = c__4559__auto__;
var G__23097 = cljs.core.count(c__4559__auto__);
var G__23098 = (0);
seq__23087 = G__23095;
chunk__23088 = G__23096;
count__23089 = G__23097;
i__23090 = G__23098;
continue;
} else {
var obj = cljs.core.first(seq__23087__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23099 = cljs.core.next(seq__23087__$1);
var G__23100 = null;
var G__23101 = (0);
var G__23102 = (0);
seq__23087 = G__23099;
chunk__23088 = G__23100;
count__23089 = G__23101;
i__23090 = G__23102;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$77))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23103__i = 0, G__23103__a = new Array(arguments.length -  0);
while (G__23103__i < G__23103__a.length) {G__23103__a[G__23103__i] = arguments[G__23103__i + 0]; ++G__23103__i;}
  objs = new cljs.core.IndexedSeq(G__23103__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__23104){
var objs = cljs.core.seq(arglist__23104);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23105__i = 0, G__23105__a = new Array(arguments.length -  0);
while (G__23105__i < G__23105__a.length) {G__23105__a[G__23105__i] = arguments[G__23105__i + 0]; ++G__23105__i;}
  objs = new cljs.core.IndexedSeq(G__23105__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__23106){
var objs = cljs.core.seq(arglist__23106);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23107__i = 0, G__23107__a = new Array(arguments.length -  0);
while (G__23107__i < G__23107__a.length) {G__23107__a[G__23107__i] = arguments[G__23107__i + 0]; ++G__23107__i;}
  objs = new cljs.core.IndexedSeq(G__23107__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__23108){
var objs = cljs.core.seq(arglist__23108);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$78,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23109__i = 0, G__23109__a = new Array(arguments.length -  0);
while (G__23109__i < G__23109__a.length) {G__23109__a[G__23109__i] = arguments[G__23109__i + 0]; ++G__23109__i;}
  objs = new cljs.core.IndexedSeq(G__23109__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__23110){
var objs = cljs.core.seq(arglist__23110);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$78,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23111__i = 0, G__23111__a = new Array(arguments.length -  0);
while (G__23111__i < G__23111__a.length) {G__23111__a[G__23111__i] = arguments[G__23111__i + 0]; ++G__23111__i;}
  objs = new cljs.core.IndexedSeq(G__23111__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__23112){
var objs = cljs.core.seq(arglist__23112);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$78,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23113__i = 0, G__23113__a = new Array(arguments.length -  0);
while (G__23113__i < G__23113__a.length) {G__23113__a[G__23113__i] = arguments[G__23113__i + 0]; ++G__23113__i;}
  objs = new cljs.core.IndexedSeq(G__23113__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__23114){
var objs = cljs.core.seq(arglist__23114);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$78,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23115__i = 0, G__23115__a = new Array(arguments.length -  0);
while (G__23115__i < G__23115__a.length) {G__23115__a[G__23115__i] = arguments[G__23115__i + 0]; ++G__23115__i;}
  objs = new cljs.core.IndexedSeq(G__23115__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__23116){
var objs = cljs.core.seq(arglist__23116);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23117__i = 0, G__23117__a = new Array(arguments.length -  0);
while (G__23117__i < G__23117__a.length) {G__23117__a[G__23117__i] = arguments[G__23117__i + 0]; ++G__23117__i;}
  objs = new cljs.core.IndexedSeq(G__23117__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__23118){
var objs = cljs.core.seq(arglist__23118);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__23125_23131 = cljs.core.key(e);
var G__23126_23132 = w;
var G__23127_23133 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23125_23131,G__23126_23132,G__23127_23133) : print_one.call(null,G__23125_23131,G__23126_23132,G__23127_23133));

cljs.core._write(w," ");

var G__23128 = cljs.core.val(e);
var G__23129 = w;
var G__23130 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23128,G__23129,G__23130) : print_one.call(null,G__23128,G__23129,G__23130));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__23134__i = 0, G__23134__a = new Array(arguments.length -  2);
while (G__23134__i < G__23134__a.length) {G__23134__a[G__23134__i] = arguments[G__23134__i + 2]; ++G__23134__i;}
  args = new cljs.core.IndexedSeq(G__23134__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__23135){
var iref = cljs.core.first(arglist__23135);
arglist__23135 = cljs.core.next(arglist__23135);
var f = cljs.core.first(arglist__23135);
var args = cljs.core.rest(arglist__23135);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__23138 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23138) : cljs.core.atom.call(null,G__23138));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__23140 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23140) : cljs.core.deref.call(null,G__23140));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__23141_SHARP_,p2__23142_SHARP_){
var ret = (function (){var G__23145 = p1__23141_SHARP_;
var G__23146 = p2__23142_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23145,G__23146) : rf.call(null,G__23145,G__23146));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__23149 = null;
var G__23149__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23149__1 = (function (result){
var G__23148 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23148) : rf.call(null,G__23148));
});
var G__23149__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__23149 = function(result,input){
switch(arguments.length){
case 0:
return G__23149__0.call(this);
case 1:
return G__23149__1.call(this,result);
case 2:
return G__23149__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23149.cljs$core$IFn$_invoke$arity$0 = G__23149__0;
G__23149.cljs$core$IFn$_invoke$arity$1 = G__23149__1;
G__23149.cljs$core$IFn$_invoke$arity$2 = G__23149__2;
return G__23149;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$91);
return ((function (pa){
return (function() {
var G__23158 = null;
var G__23158__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23158__1 = (function (result){
var G__23154 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23154) : rf.call(null,G__23154));
});
var G__23158__2 = (function (result,input){
var prior = (function (){var G__23155 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23155) : cljs.core.deref.call(null,G__23155));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__23156 = result;
var G__23157 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23156,G__23157) : rf.call(null,G__23156,G__23157));
}
});
G__23158 = function(result,input){
switch(arguments.length){
case 0:
return G__23158__0.call(this);
case 1:
return G__23158__1.call(this,result);
case 2:
return G__23158__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23158.cljs$core$IFn$_invoke$arity$0 = G__23158__0;
G__23158.cljs$core$IFn$_invoke$arity$1 = G__23158__1;
G__23158.cljs$core$IFn$_invoke$arity$2 = G__23158__2;
return G__23158;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23160_SHARP_,p2__23159_SHARP_){
var G__23162 = p2__23159_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__23162) : proc.call(null,G__23162));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj23164 = {};
return obj23164;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._clj__GT_js[(function (){var G__23168 = x__4416__auto__;
return goog.typeOf(G__23168);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._key__GT_js[(function (){var G__23172 = x__4416__auto__;
return goog.typeOf(G__23172);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__23175 = k;
if(G__23175){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__23175.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__23175.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23175);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23175);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__23176 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__23176) : cljs.core.clj__GT_js.call(null,G__23176));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__23192 = x;
if(G__23192){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__23192.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__23192.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23192);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23192);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj23194 = {};
return obj23194;
})();
var seq__23195_23205 = cljs.core.seq(x);
var chunk__23196_23206 = null;
var count__23197_23207 = (0);
var i__23198_23208 = (0);
while(true){
if((i__23198_23208 < count__23197_23207)){
var vec__23199_23209 = chunk__23196_23206.cljs$core$IIndexed$_nth$arity$2(null,i__23198_23208);
var k_23210 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23199_23209,(0),null);
var v_23211 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23199_23209,(1),null);
(m[cljs.core.key__GT_js(k_23210)] = clj__GT_js(v_23211));

var G__23212 = seq__23195_23205;
var G__23213 = chunk__23196_23206;
var G__23214 = count__23197_23207;
var G__23215 = (i__23198_23208 + (1));
seq__23195_23205 = G__23212;
chunk__23196_23206 = G__23213;
count__23197_23207 = G__23214;
i__23198_23208 = G__23215;
continue;
} else {
var temp__4126__auto___23216 = cljs.core.seq(seq__23195_23205);
if(temp__4126__auto___23216){
var seq__23195_23217__$1 = temp__4126__auto___23216;
if(cljs.core.chunked_seq_QMARK_(seq__23195_23217__$1)){
var c__4559__auto___23218 = cljs.core.chunk_first(seq__23195_23217__$1);
var G__23219 = cljs.core.chunk_rest(seq__23195_23217__$1);
var G__23220 = c__4559__auto___23218;
var G__23221 = cljs.core.count(c__4559__auto___23218);
var G__23222 = (0);
seq__23195_23205 = G__23219;
chunk__23196_23206 = G__23220;
count__23197_23207 = G__23221;
i__23198_23208 = G__23222;
continue;
} else {
var vec__23200_23223 = cljs.core.first(seq__23195_23217__$1);
var k_23224 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23200_23223,(0),null);
var v_23225 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23200_23223,(1),null);
(m[cljs.core.key__GT_js(k_23224)] = clj__GT_js(v_23225));

var G__23226 = cljs.core.next(seq__23195_23217__$1);
var G__23227 = null;
var G__23228 = (0);
var G__23229 = (0);
seq__23195_23205 = G__23226;
chunk__23196_23206 = G__23227;
count__23197_23207 = G__23228;
i__23198_23208 = G__23229;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__23201_23230 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__23202_23231 = null;
var count__23203_23232 = (0);
var i__23204_23233 = (0);
while(true){
if((i__23204_23233 < count__23203_23232)){
var x_23234__$1 = chunk__23202_23231.cljs$core$IIndexed$_nth$arity$2(null,i__23204_23233);
arr.push(x_23234__$1);

var G__23235 = seq__23201_23230;
var G__23236 = chunk__23202_23231;
var G__23237 = count__23203_23232;
var G__23238 = (i__23204_23233 + (1));
seq__23201_23230 = G__23235;
chunk__23202_23231 = G__23236;
count__23203_23232 = G__23237;
i__23204_23233 = G__23238;
continue;
} else {
var temp__4126__auto___23239 = cljs.core.seq(seq__23201_23230);
if(temp__4126__auto___23239){
var seq__23201_23240__$1 = temp__4126__auto___23239;
if(cljs.core.chunked_seq_QMARK_(seq__23201_23240__$1)){
var c__4559__auto___23241 = cljs.core.chunk_first(seq__23201_23240__$1);
var G__23242 = cljs.core.chunk_rest(seq__23201_23240__$1);
var G__23243 = c__4559__auto___23241;
var G__23244 = cljs.core.count(c__4559__auto___23241);
var G__23245 = (0);
seq__23201_23230 = G__23242;
chunk__23202_23231 = G__23243;
count__23203_23232 = G__23244;
i__23204_23233 = G__23245;
continue;
} else {
var x_23246__$1 = cljs.core.first(seq__23201_23240__$1);
arr.push(x_23246__$1);

var G__23247 = cljs.core.next(seq__23201_23240__$1);
var G__23248 = null;
var G__23249 = (0);
var G__23250 = (0);
seq__23201_23230 = G__23247;
chunk__23202_23231 = G__23248;
count__23203_23232 = G__23249;
i__23204_23233 = G__23250;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj23252 = {};
return obj23252;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._js__GT_clj[(function (){var G__23256 = x__4416__auto__;
return goog.typeOf(G__23256);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$92,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__23313__delegate = function (x,opts){
var map__23286 = opts;
var map__23286__$1 = ((cljs.core.seq_QMARK_(map__23286))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23286):map__23286);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23286__$1,cljs.core.constant$keyword$92);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__23286,map__23286__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__23302 = x__$1;
if(G__23302){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__23302.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__23302.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__23302);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__23302);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4528__auto__ = ((function (map__23286,map__23286__$1,keywordize_keys,keyfn){
return (function iter__23303(s__23304){
return (new cljs.core.LazySeq(null,((function (map__23286,map__23286__$1,keywordize_keys,keyfn){
return (function (){
var s__23304__$1 = s__23304;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__23304__$1);
if(temp__4126__auto__){
var s__23304__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__23304__$2)){
var c__4526__auto__ = cljs.core.chunk_first(s__23304__$2);
var size__4527__auto__ = cljs.core.count(c__4526__auto__);
var b__23306 = cljs.core.chunk_buffer(size__4527__auto__);
if((function (){var i__23305 = (0);
while(true){
if((i__23305 < size__4527__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4526__auto__,i__23305);
cljs.core.chunk_append(b__23306,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__23311 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23311) : keyfn.call(null,G__23311));
})(),thisfn((x__$1[k]))], null));

var G__23314 = (i__23305 + (1));
i__23305 = G__23314;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__23306),iter__23303(cljs.core.chunk_rest(s__23304__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__23306),null);
}
} else {
var k = cljs.core.first(s__23304__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__23312 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23312) : keyfn.call(null,G__23312));
})(),thisfn((x__$1[k]))], null),iter__23303(cljs.core.rest(s__23304__$2)));
}
} else {
return null;
}
break;
}
});})(map__23286,map__23286__$1,keywordize_keys,keyfn))
,null,null));
});})(map__23286,map__23286__$1,keywordize_keys,keyfn))
;
return iter__4528__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__23286,map__23286__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__23313 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__23315__i = 0, G__23315__a = new Array(arguments.length -  1);
while (G__23315__i < G__23315__a.length) {G__23315__a[G__23315__i] = arguments[G__23315__i + 1]; ++G__23315__i;}
  opts = new cljs.core.IndexedSeq(G__23315__a,0);
} 
return G__23313__delegate.call(this,x,opts);};
G__23313.cljs$lang$maxFixedArity = 1;
G__23313.cljs$lang$applyTo = (function (arglist__23316){
var x = cljs.core.first(arglist__23316);
var opts = cljs.core.rest(arglist__23316);
return G__23313__delegate(x,opts);
});
G__23313.cljs$core$IFn$_invoke$arity$variadic = G__23313__delegate;
return G__23313;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__23317 = null;
if (arguments.length > 1) {
var G__23318__i = 0, G__23318__a = new Array(arguments.length -  1);
while (G__23318__i < G__23318__a.length) {G__23318__a[G__23318__i] = arguments[G__23318__i + 1]; ++G__23318__i;}
G__23317 = new cljs.core.IndexedSeq(G__23318__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__23317);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__23321 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23321) : cljs.core.atom.call(null,G__23321));
})();
return ((function (mem){
return (function() { 
var G__23323__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__23322 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23322) : cljs.core.deref.call(null,G__23322));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__23323 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23324__i = 0, G__23324__a = new Array(arguments.length -  0);
while (G__23324__i < G__23324__a.length) {G__23324__a[G__23324__i] = arguments[G__23324__i + 0]; ++G__23324__i;}
  args = new cljs.core.IndexedSeq(G__23324__a,0);
} 
return G__23323__delegate.call(this,args);};
G__23323.cljs$lang$maxFixedArity = 0;
G__23323.cljs$lang$applyTo = (function (arglist__23325){
var args = cljs.core.seq(arglist__23325);
return G__23323__delegate(args);
});
G__23323.cljs$core$IFn$_invoke$arity$variadic = G__23323__delegate;
return G__23323;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__23327 = ret;
f = G__23327;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__23328__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__23328 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__23329__i = 0, G__23329__a = new Array(arguments.length -  1);
while (G__23329__i < G__23329__a.length) {G__23329__a[G__23329__i] = arguments[G__23329__i + 1]; ++G__23329__i;}
  args = new cljs.core.IndexedSeq(G__23329__a,0);
} 
return G__23328__delegate.call(this,f,args);};
G__23328.cljs$lang$maxFixedArity = 1;
G__23328.cljs$lang$applyTo = (function (arglist__23330){
var f = cljs.core.first(arglist__23330);
var args = cljs.core.rest(arglist__23330);
return G__23328__delegate(f,args);
});
G__23328.cljs$core$IFn$_invoke$arity$variadic = G__23328__delegate;
return G__23328;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__23331 = null;
if (arguments.length > 1) {
var G__23332__i = 0, G__23332__a = new Array(arguments.length -  1);
while (G__23332__i < G__23332__a.length) {G__23332__a[G__23332__i] = arguments[G__23332__i + 1]; ++G__23332__i;}
G__23331 = new cljs.core.IndexedSeq(G__23332__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__23331);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__23335 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23335) : Math.floor.call(null,G__23335));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__23337 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23337) : f.call(null,G__23337));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$93,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$94,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$95,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__23339 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23339) : cljs.core.atom.call(null,G__23339));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__23340__i = 0, G__23340__a = new Array(arguments.length -  1);
while (G__23340__i < G__23340__a.length) {G__23340__a[G__23340__i] = arguments[G__23340__i + 1]; ++G__23340__i;}
  args = new cljs.core.IndexedSeq(G__23340__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__23341){
var f = cljs.core.first(arglist__23341);
var args = cljs.core.rest(arglist__23341);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__23406 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23406) : cljs.core.deref.call(null,G__23406));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3772__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$95.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
var and__3760__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3760__auto__){
var and__3760__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3760__auto____$1){
var and__3760__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3760__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__23431 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__23429 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__23429) : child.call(null,G__23429));
})(),(function (){var G__23430 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__23430) : parent.call(null,G__23430));
})());
var G__23432 = (i + (1));
ret = G__23431;
i = G__23432;
continue;
}
break;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__23436 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23436) : cljs.core.deref.call(null,G__23436));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$93.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__23440 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23440) : cljs.core.deref.call(null,G__23440));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$95.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__23444 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23444) : cljs.core.deref.call(null,G__23444));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$94.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$93.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$94.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$95.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__23453 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__23453) : targets.call(null,G__23453));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__23454 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__23454) : sources.call(null,G__23454));
})()));
});})(tp,td,ta))
;
var or__3772__auto__ = ((cljs.core.contains_QMARK_((function (){var G__23458 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__23458) : tp.call(null,G__23458));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__23459 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__23459) : ta.call(null,G__23459));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__23460 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__23460) : ta.call(null,G__23460));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$93,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$93.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$95,tf(cljs.core.constant$keyword$95.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$94,tf(cljs.core.constant$keyword$94.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$93.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__23467 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23467) : parentMap.call(null,G__23467));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__23468 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23468) : parentMap.call(null,G__23468));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__23461_SHARP_){
return cljs.core.cons(cljs.core.first(p1__23461_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__23461_SHARP_),cljs.core.second(p1__23461_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__23469 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23469) : parentMap.call(null,G__23469));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__23462_SHARP_,p2__23463_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__23462_SHARP_,p2__23463_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__23472 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23472) : cljs.core.deref.call(null,G__23472));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__23473 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23473) : cljs.core.deref.call(null,G__23473));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__23489 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23489) : cljs.core.deref.call(null,G__23489));
})().call(null,x);
var or__3772__auto__ = (cljs.core.truth_((function (){var and__3760__auto__ = xprefs;
if(cljs.core.truth_(and__3760__auto__)){
var G__23491 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__23491) : xprefs.call(null,G__23491));
} else {
return and__3760__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__23492 = cljs.core.rest(ps);
ps = G__23492;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__23493 = cljs.core.rest(ps);
ps = G__23493;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3772__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__23507){
var vec__23508 = p__23507;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23508,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23508,(1),null);
var e = vec__23508;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__23509 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23509) : cljs.core.deref.call(null,G__23509));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3772__auto__ = (be == null);
if(or__3772__auto__){
return or__3772__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__23510 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23510) : cljs.core.deref.call(null,G__23510));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__23511 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23511) : cljs.core.deref.call(null,G__23511));
})(),(function (){var G__23512 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23512) : cljs.core.deref.call(null,G__23512));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj23514 = {};
return obj23514;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._reset[(function (){var G__23518 = x__4416__auto__;
return goog.typeOf(G__23518);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reset["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._add_method[(function (){var G__23522 = x__4416__auto__;
return goog.typeOf(G__23522);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._add_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._remove_method[(function (){var G__23526 = x__4416__auto__;
return goog.typeOf(G__23526);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._prefer_method[(function (){var G__23530 = x__4416__auto__;
return goog.typeOf(G__23530);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._get_method[(function (){var G__23534 = x__4416__auto__;
return goog.typeOf(G__23534);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._get_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._methods[(function (){var G__23538 = x__4416__auto__;
return goog.typeOf(G__23538);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._methods["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._prefers[(function (){var G__23542 = x__4416__auto__;
return goog.typeOf(G__23542);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._prefers["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23544 = this$__$1;
return goog.getUid(G__23544);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__23545 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23545) : cljs.core.deref.call(null,G__23545));
})(),(function (){var G__23546 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23546) : cljs.core.deref.call(null,G__23546));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__23547 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23547) : cljs.core.deref.call(null,G__23547));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__23548 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23548) : cljs.core.deref.call(null,G__23548));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__23549 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23549) : cljs.core.deref.call(null,G__23549));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__23550 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23550) : cljs.core.deref.call(null,G__23550));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__24391 = null;
var G__24391__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__24391__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23551 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23551) : self__.dispatch_fn.call(null,G__23551));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23552 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23552) : target_fn.call(null,G__23552));
});
var G__24391__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23553 = a;
var G__23554 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23553,G__23554) : self__.dispatch_fn.call(null,G__23553,G__23554));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23555 = a;
var G__23556 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23555,G__23556) : target_fn.call(null,G__23555,G__23556));
});
var G__24391__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23557 = a;
var G__23558 = b;
var G__23559 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23557,G__23558,G__23559) : self__.dispatch_fn.call(null,G__23557,G__23558,G__23559));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23560 = a;
var G__23561 = b;
var G__23562 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23560,G__23561,G__23562) : target_fn.call(null,G__23560,G__23561,G__23562));
});
var G__24391__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23563 = a;
var G__23564 = b;
var G__23565 = c;
var G__23566 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23563,G__23564,G__23565,G__23566) : self__.dispatch_fn.call(null,G__23563,G__23564,G__23565,G__23566));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23567 = a;
var G__23568 = b;
var G__23569 = c;
var G__23570 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23567,G__23568,G__23569,G__23570) : target_fn.call(null,G__23567,G__23568,G__23569,G__23570));
});
var G__24391__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23571 = a;
var G__23572 = b;
var G__23573 = c;
var G__23574 = d;
var G__23575 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23571,G__23572,G__23573,G__23574,G__23575) : self__.dispatch_fn.call(null,G__23571,G__23572,G__23573,G__23574,G__23575));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23576 = a;
var G__23577 = b;
var G__23578 = c;
var G__23579 = d;
var G__23580 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23576,G__23577,G__23578,G__23579,G__23580) : target_fn.call(null,G__23576,G__23577,G__23578,G__23579,G__23580));
});
var G__24391__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23581 = a;
var G__23582 = b;
var G__23583 = c;
var G__23584 = d;
var G__23585 = e;
var G__23586 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23581,G__23582,G__23583,G__23584,G__23585,G__23586) : self__.dispatch_fn.call(null,G__23581,G__23582,G__23583,G__23584,G__23585,G__23586));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23587 = a;
var G__23588 = b;
var G__23589 = c;
var G__23590 = d;
var G__23591 = e;
var G__23592 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23587,G__23588,G__23589,G__23590,G__23591,G__23592) : target_fn.call(null,G__23587,G__23588,G__23589,G__23590,G__23591,G__23592));
});
var G__24391__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23593 = a;
var G__23594 = b;
var G__23595 = c;
var G__23596 = d;
var G__23597 = e;
var G__23598 = f;
var G__23599 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23593,G__23594,G__23595,G__23596,G__23597,G__23598,G__23599) : self__.dispatch_fn.call(null,G__23593,G__23594,G__23595,G__23596,G__23597,G__23598,G__23599));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23600 = a;
var G__23601 = b;
var G__23602 = c;
var G__23603 = d;
var G__23604 = e;
var G__23605 = f;
var G__23606 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23600,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606) : target_fn.call(null,G__23600,G__23601,G__23602,G__23603,G__23604,G__23605,G__23606));
});
var G__24391__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23607 = a;
var G__23608 = b;
var G__23609 = c;
var G__23610 = d;
var G__23611 = e;
var G__23612 = f;
var G__23613 = g;
var G__23614 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614) : self__.dispatch_fn.call(null,G__23607,G__23608,G__23609,G__23610,G__23611,G__23612,G__23613,G__23614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23615 = a;
var G__23616 = b;
var G__23617 = c;
var G__23618 = d;
var G__23619 = e;
var G__23620 = f;
var G__23621 = g;
var G__23622 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622) : target_fn.call(null,G__23615,G__23616,G__23617,G__23618,G__23619,G__23620,G__23621,G__23622));
});
var G__24391__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23623 = a;
var G__23624 = b;
var G__23625 = c;
var G__23626 = d;
var G__23627 = e;
var G__23628 = f;
var G__23629 = g;
var G__23630 = h;
var G__23631 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23623,G__23624,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631) : self__.dispatch_fn.call(null,G__23623,G__23624,G__23625,G__23626,G__23627,G__23628,G__23629,G__23630,G__23631));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23632 = a;
var G__23633 = b;
var G__23634 = c;
var G__23635 = d;
var G__23636 = e;
var G__23637 = f;
var G__23638 = g;
var G__23639 = h;
var G__23640 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640) : target_fn.call(null,G__23632,G__23633,G__23634,G__23635,G__23636,G__23637,G__23638,G__23639,G__23640));
});
var G__24391__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23641 = a;
var G__23642 = b;
var G__23643 = c;
var G__23644 = d;
var G__23645 = e;
var G__23646 = f;
var G__23647 = g;
var G__23648 = h;
var G__23649 = i;
var G__23650 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23641,G__23642,G__23643,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649,G__23650) : self__.dispatch_fn.call(null,G__23641,G__23642,G__23643,G__23644,G__23645,G__23646,G__23647,G__23648,G__23649,G__23650));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23651 = a;
var G__23652 = b;
var G__23653 = c;
var G__23654 = d;
var G__23655 = e;
var G__23656 = f;
var G__23657 = g;
var G__23658 = h;
var G__23659 = i;
var G__23660 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657,G__23658,G__23659,G__23660) : target_fn.call(null,G__23651,G__23652,G__23653,G__23654,G__23655,G__23656,G__23657,G__23658,G__23659,G__23660));
});
var G__24391__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23661 = a;
var G__23662 = b;
var G__23663 = c;
var G__23664 = d;
var G__23665 = e;
var G__23666 = f;
var G__23667 = g;
var G__23668 = h;
var G__23669 = i;
var G__23670 = j;
var G__23671 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668,G__23669,G__23670,G__23671) : self__.dispatch_fn.call(null,G__23661,G__23662,G__23663,G__23664,G__23665,G__23666,G__23667,G__23668,G__23669,G__23670,G__23671));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23672 = a;
var G__23673 = b;
var G__23674 = c;
var G__23675 = d;
var G__23676 = e;
var G__23677 = f;
var G__23678 = g;
var G__23679 = h;
var G__23680 = i;
var G__23681 = j;
var G__23682 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682) : target_fn.call(null,G__23672,G__23673,G__23674,G__23675,G__23676,G__23677,G__23678,G__23679,G__23680,G__23681,G__23682));
});
var G__24391__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23683 = a;
var G__23684 = b;
var G__23685 = c;
var G__23686 = d;
var G__23687 = e;
var G__23688 = f;
var G__23689 = g;
var G__23690 = h;
var G__23691 = i;
var G__23692 = j;
var G__23693 = k;
var G__23694 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23683,G__23684,G__23685,G__23686,G__23687,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694) : self__.dispatch_fn.call(null,G__23683,G__23684,G__23685,G__23686,G__23687,G__23688,G__23689,G__23690,G__23691,G__23692,G__23693,G__23694));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23695 = a;
var G__23696 = b;
var G__23697 = c;
var G__23698 = d;
var G__23699 = e;
var G__23700 = f;
var G__23701 = g;
var G__23702 = h;
var G__23703 = i;
var G__23704 = j;
var G__23705 = k;
var G__23706 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23695,G__23696,G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706) : target_fn.call(null,G__23695,G__23696,G__23697,G__23698,G__23699,G__23700,G__23701,G__23702,G__23703,G__23704,G__23705,G__23706));
});
var G__24391__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23707 = a;
var G__23708 = b;
var G__23709 = c;
var G__23710 = d;
var G__23711 = e;
var G__23712 = f;
var G__23713 = g;
var G__23714 = h;
var G__23715 = i;
var G__23716 = j;
var G__23717 = k;
var G__23718 = l;
var G__23719 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23707,G__23708,G__23709,G__23710,G__23711,G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719) : self__.dispatch_fn.call(null,G__23707,G__23708,G__23709,G__23710,G__23711,G__23712,G__23713,G__23714,G__23715,G__23716,G__23717,G__23718,G__23719));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23720 = a;
var G__23721 = b;
var G__23722 = c;
var G__23723 = d;
var G__23724 = e;
var G__23725 = f;
var G__23726 = g;
var G__23727 = h;
var G__23728 = i;
var G__23729 = j;
var G__23730 = k;
var G__23731 = l;
var G__23732 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23720,G__23721,G__23722,G__23723,G__23724,G__23725,G__23726,G__23727,G__23728,G__23729,G__23730,G__23731,G__23732) : target_fn.call(null,G__23720,G__23721,G__23722,G__23723,G__23724,G__23725,G__23726,G__23727,G__23728,G__23729,G__23730,G__23731,G__23732));
});
var G__24391__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23733 = a;
var G__23734 = b;
var G__23735 = c;
var G__23736 = d;
var G__23737 = e;
var G__23738 = f;
var G__23739 = g;
var G__23740 = h;
var G__23741 = i;
var G__23742 = j;
var G__23743 = k;
var G__23744 = l;
var G__23745 = m;
var G__23746 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739,G__23740,G__23741,G__23742,G__23743,G__23744,G__23745,G__23746) : self__.dispatch_fn.call(null,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738,G__23739,G__23740,G__23741,G__23742,G__23743,G__23744,G__23745,G__23746));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23747 = a;
var G__23748 = b;
var G__23749 = c;
var G__23750 = d;
var G__23751 = e;
var G__23752 = f;
var G__23753 = g;
var G__23754 = h;
var G__23755 = i;
var G__23756 = j;
var G__23757 = k;
var G__23758 = l;
var G__23759 = m;
var G__23760 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760) : target_fn.call(null,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760));
});
var G__24391__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23761 = a;
var G__23762 = b;
var G__23763 = c;
var G__23764 = d;
var G__23765 = e;
var G__23766 = f;
var G__23767 = g;
var G__23768 = h;
var G__23769 = i;
var G__23770 = j;
var G__23771 = k;
var G__23772 = l;
var G__23773 = m;
var G__23774 = n;
var G__23775 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774,G__23775) : self__.dispatch_fn.call(null,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774,G__23775));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23776 = a;
var G__23777 = b;
var G__23778 = c;
var G__23779 = d;
var G__23780 = e;
var G__23781 = f;
var G__23782 = g;
var G__23783 = h;
var G__23784 = i;
var G__23785 = j;
var G__23786 = k;
var G__23787 = l;
var G__23788 = m;
var G__23789 = n;
var G__23790 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23776,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790) : target_fn.call(null,G__23776,G__23777,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786,G__23787,G__23788,G__23789,G__23790));
});
var G__24391__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23791 = a;
var G__23792 = b;
var G__23793 = c;
var G__23794 = d;
var G__23795 = e;
var G__23796 = f;
var G__23797 = g;
var G__23798 = h;
var G__23799 = i;
var G__23800 = j;
var G__23801 = k;
var G__23802 = l;
var G__23803 = m;
var G__23804 = n;
var G__23805 = o;
var G__23806 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23791,G__23792,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803,G__23804,G__23805,G__23806) : self__.dispatch_fn.call(null,G__23791,G__23792,G__23793,G__23794,G__23795,G__23796,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803,G__23804,G__23805,G__23806));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23807 = a;
var G__23808 = b;
var G__23809 = c;
var G__23810 = d;
var G__23811 = e;
var G__23812 = f;
var G__23813 = g;
var G__23814 = h;
var G__23815 = i;
var G__23816 = j;
var G__23817 = k;
var G__23818 = l;
var G__23819 = m;
var G__23820 = n;
var G__23821 = o;
var G__23822 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821,G__23822) : target_fn.call(null,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817,G__23818,G__23819,G__23820,G__23821,G__23822));
});
var G__24391__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23823 = a;
var G__23824 = b;
var G__23825 = c;
var G__23826 = d;
var G__23827 = e;
var G__23828 = f;
var G__23829 = g;
var G__23830 = h;
var G__23831 = i;
var G__23832 = j;
var G__23833 = k;
var G__23834 = l;
var G__23835 = m;
var G__23836 = n;
var G__23837 = o;
var G__23838 = p;
var G__23839 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23823,G__23824,G__23825,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839) : self__.dispatch_fn.call(null,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828,G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23840 = a;
var G__23841 = b;
var G__23842 = c;
var G__23843 = d;
var G__23844 = e;
var G__23845 = f;
var G__23846 = g;
var G__23847 = h;
var G__23848 = i;
var G__23849 = j;
var G__23850 = k;
var G__23851 = l;
var G__23852 = m;
var G__23853 = n;
var G__23854 = o;
var G__23855 = p;
var G__23856 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856) : target_fn.call(null,G__23840,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852,G__23853,G__23854,G__23855,G__23856));
});
var G__24391__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23857 = a;
var G__23858 = b;
var G__23859 = c;
var G__23860 = d;
var G__23861 = e;
var G__23862 = f;
var G__23863 = g;
var G__23864 = h;
var G__23865 = i;
var G__23866 = j;
var G__23867 = k;
var G__23868 = l;
var G__23869 = m;
var G__23870 = n;
var G__23871 = o;
var G__23872 = p;
var G__23873 = q;
var G__23874 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874) : self__.dispatch_fn.call(null,G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865,G__23866,G__23867,G__23868,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23875 = a;
var G__23876 = b;
var G__23877 = c;
var G__23878 = d;
var G__23879 = e;
var G__23880 = f;
var G__23881 = g;
var G__23882 = h;
var G__23883 = i;
var G__23884 = j;
var G__23885 = k;
var G__23886 = l;
var G__23887 = m;
var G__23888 = n;
var G__23889 = o;
var G__23890 = p;
var G__23891 = q;
var G__23892 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__23875,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892) : target_fn.call(null,G__23875,G__23876,G__23877,G__23878,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892));
});
var G__24391__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23893 = a;
var G__23894 = b;
var G__23895 = c;
var G__23896 = d;
var G__23897 = e;
var G__23898 = f;
var G__23899 = g;
var G__23900 = h;
var G__23901 = i;
var G__23902 = j;
var G__23903 = k;
var G__23904 = l;
var G__23905 = m;
var G__23906 = n;
var G__23907 = o;
var G__23908 = p;
var G__23909 = q;
var G__23910 = r;
var G__23911 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911) : self__.dispatch_fn.call(null,G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906,G__23907,G__23908,G__23909,G__23910,G__23911));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23912 = a;
var G__23913 = b;
var G__23914 = c;
var G__23915 = d;
var G__23916 = e;
var G__23917 = f;
var G__23918 = g;
var G__23919 = h;
var G__23920 = i;
var G__23921 = j;
var G__23922 = k;
var G__23923 = l;
var G__23924 = m;
var G__23925 = n;
var G__23926 = o;
var G__23927 = p;
var G__23928 = q;
var G__23929 = r;
var G__23930 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__23912,G__23913,G__23914,G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921,G__23922,G__23923,G__23924,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930) : target_fn.call(null,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921,G__23922,G__23923,G__23924,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930));
});
var G__24391__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23931 = a;
var G__23932 = b;
var G__23933 = c;
var G__23934 = d;
var G__23935 = e;
var G__23936 = f;
var G__23937 = g;
var G__23938 = h;
var G__23939 = i;
var G__23940 = j;
var G__23941 = k;
var G__23942 = l;
var G__23943 = m;
var G__23944 = n;
var G__23945 = o;
var G__23946 = p;
var G__23947 = q;
var G__23948 = r;
var G__23949 = s;
var G__23950 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__23931,G__23932,G__23933,G__23934,G__23935,G__23936,G__23937,G__23938,G__23939,G__23940,G__23941,G__23942,G__23943,G__23944,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950) : self__.dispatch_fn.call(null,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936,G__23937,G__23938,G__23939,G__23940,G__23941,G__23942,G__23943,G__23944,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23951 = a;
var G__23952 = b;
var G__23953 = c;
var G__23954 = d;
var G__23955 = e;
var G__23956 = f;
var G__23957 = g;
var G__23958 = h;
var G__23959 = i;
var G__23960 = j;
var G__23961 = k;
var G__23962 = l;
var G__23963 = m;
var G__23964 = n;
var G__23965 = o;
var G__23966 = p;
var G__23967 = q;
var G__23968 = r;
var G__23969 = s;
var G__23970 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__23951,G__23952,G__23953,G__23954,G__23955,G__23956,G__23957,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966,G__23967,G__23968,G__23969,G__23970) : target_fn.call(null,G__23951,G__23952,G__23953,G__23954,G__23955,G__23956,G__23957,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966,G__23967,G__23968,G__23969,G__23970));
});
var G__24391__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__24391 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24391__1.call(this,self__);
case 2:
return G__24391__2.call(this,self__,a);
case 3:
return G__24391__3.call(this,self__,a,b);
case 4:
return G__24391__4.call(this,self__,a,b,c);
case 5:
return G__24391__5.call(this,self__,a,b,c,d);
case 6:
return G__24391__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24391__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24391__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24391__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24391__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24391__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24391__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24391__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24391__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24391__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24391__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24391__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24391__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24391__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24391__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24391__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24391__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24391.cljs$core$IFn$_invoke$arity$1 = G__24391__1;
G__24391.cljs$core$IFn$_invoke$arity$2 = G__24391__2;
G__24391.cljs$core$IFn$_invoke$arity$3 = G__24391__3;
G__24391.cljs$core$IFn$_invoke$arity$4 = G__24391__4;
G__24391.cljs$core$IFn$_invoke$arity$5 = G__24391__5;
G__24391.cljs$core$IFn$_invoke$arity$6 = G__24391__6;
G__24391.cljs$core$IFn$_invoke$arity$7 = G__24391__7;
G__24391.cljs$core$IFn$_invoke$arity$8 = G__24391__8;
G__24391.cljs$core$IFn$_invoke$arity$9 = G__24391__9;
G__24391.cljs$core$IFn$_invoke$arity$10 = G__24391__10;
G__24391.cljs$core$IFn$_invoke$arity$11 = G__24391__11;
G__24391.cljs$core$IFn$_invoke$arity$12 = G__24391__12;
G__24391.cljs$core$IFn$_invoke$arity$13 = G__24391__13;
G__24391.cljs$core$IFn$_invoke$arity$14 = G__24391__14;
G__24391.cljs$core$IFn$_invoke$arity$15 = G__24391__15;
G__24391.cljs$core$IFn$_invoke$arity$16 = G__24391__16;
G__24391.cljs$core$IFn$_invoke$arity$17 = G__24391__17;
G__24391.cljs$core$IFn$_invoke$arity$18 = G__24391__18;
G__24391.cljs$core$IFn$_invoke$arity$19 = G__24391__19;
G__24391.cljs$core$IFn$_invoke$arity$20 = G__24391__20;
G__24391.cljs$core$IFn$_invoke$arity$21 = G__24391__21;
G__24391.cljs$core$IFn$_invoke$arity$22 = G__24391__22;
return G__24391;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args23543){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23543)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23971 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23971) : self__.dispatch_fn.call(null,G__23971));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23972 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23972) : target_fn.call(null,G__23972));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23973 = a;
var G__23974 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23973,G__23974) : self__.dispatch_fn.call(null,G__23973,G__23974));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23975 = a;
var G__23976 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23975,G__23976) : target_fn.call(null,G__23975,G__23976));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23977 = a;
var G__23978 = b;
var G__23979 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23977,G__23978,G__23979) : self__.dispatch_fn.call(null,G__23977,G__23978,G__23979));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23980 = a;
var G__23981 = b;
var G__23982 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23980,G__23981,G__23982) : target_fn.call(null,G__23980,G__23981,G__23982));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23983 = a;
var G__23984 = b;
var G__23985 = c;
var G__23986 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23983,G__23984,G__23985,G__23986) : self__.dispatch_fn.call(null,G__23983,G__23984,G__23985,G__23986));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23987 = a;
var G__23988 = b;
var G__23989 = c;
var G__23990 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23987,G__23988,G__23989,G__23990) : target_fn.call(null,G__23987,G__23988,G__23989,G__23990));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__23991 = a;
var G__23992 = b;
var G__23993 = c;
var G__23994 = d;
var G__23995 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23991,G__23992,G__23993,G__23994,G__23995) : self__.dispatch_fn.call(null,G__23991,G__23992,G__23993,G__23994,G__23995));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23996 = a;
var G__23997 = b;
var G__23998 = c;
var G__23999 = d;
var G__24000 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23996,G__23997,G__23998,G__23999,G__24000) : target_fn.call(null,G__23996,G__23997,G__23998,G__23999,G__24000));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24001 = a;
var G__24002 = b;
var G__24003 = c;
var G__24004 = d;
var G__24005 = e;
var G__24006 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__24001,G__24002,G__24003,G__24004,G__24005,G__24006) : self__.dispatch_fn.call(null,G__24001,G__24002,G__24003,G__24004,G__24005,G__24006));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24007 = a;
var G__24008 = b;
var G__24009 = c;
var G__24010 = d;
var G__24011 = e;
var G__24012 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__24007,G__24008,G__24009,G__24010,G__24011,G__24012) : target_fn.call(null,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24013 = a;
var G__24014 = b;
var G__24015 = c;
var G__24016 = d;
var G__24017 = e;
var G__24018 = f;
var G__24019 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__24013,G__24014,G__24015,G__24016,G__24017,G__24018,G__24019) : self__.dispatch_fn.call(null,G__24013,G__24014,G__24015,G__24016,G__24017,G__24018,G__24019));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24020 = a;
var G__24021 = b;
var G__24022 = c;
var G__24023 = d;
var G__24024 = e;
var G__24025 = f;
var G__24026 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026) : target_fn.call(null,G__24020,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24027 = a;
var G__24028 = b;
var G__24029 = c;
var G__24030 = d;
var G__24031 = e;
var G__24032 = f;
var G__24033 = g;
var G__24034 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__24027,G__24028,G__24029,G__24030,G__24031,G__24032,G__24033,G__24034) : self__.dispatch_fn.call(null,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032,G__24033,G__24034));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24035 = a;
var G__24036 = b;
var G__24037 = c;
var G__24038 = d;
var G__24039 = e;
var G__24040 = f;
var G__24041 = g;
var G__24042 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__24035,G__24036,G__24037,G__24038,G__24039,G__24040,G__24041,G__24042) : target_fn.call(null,G__24035,G__24036,G__24037,G__24038,G__24039,G__24040,G__24041,G__24042));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24043 = a;
var G__24044 = b;
var G__24045 = c;
var G__24046 = d;
var G__24047 = e;
var G__24048 = f;
var G__24049 = g;
var G__24050 = h;
var G__24051 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__24043,G__24044,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051) : self__.dispatch_fn.call(null,G__24043,G__24044,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24052 = a;
var G__24053 = b;
var G__24054 = c;
var G__24055 = d;
var G__24056 = e;
var G__24057 = f;
var G__24058 = g;
var G__24059 = h;
var G__24060 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__24052,G__24053,G__24054,G__24055,G__24056,G__24057,G__24058,G__24059,G__24060) : target_fn.call(null,G__24052,G__24053,G__24054,G__24055,G__24056,G__24057,G__24058,G__24059,G__24060));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24061 = a;
var G__24062 = b;
var G__24063 = c;
var G__24064 = d;
var G__24065 = e;
var G__24066 = f;
var G__24067 = g;
var G__24068 = h;
var G__24069 = i;
var G__24070 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__24061,G__24062,G__24063,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070) : self__.dispatch_fn.call(null,G__24061,G__24062,G__24063,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24071 = a;
var G__24072 = b;
var G__24073 = c;
var G__24074 = d;
var G__24075 = e;
var G__24076 = f;
var G__24077 = g;
var G__24078 = h;
var G__24079 = i;
var G__24080 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__24071,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078,G__24079,G__24080) : target_fn.call(null,G__24071,G__24072,G__24073,G__24074,G__24075,G__24076,G__24077,G__24078,G__24079,G__24080));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24081 = a;
var G__24082 = b;
var G__24083 = c;
var G__24084 = d;
var G__24085 = e;
var G__24086 = f;
var G__24087 = g;
var G__24088 = h;
var G__24089 = i;
var G__24090 = j;
var G__24091 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090,G__24091) : self__.dispatch_fn.call(null,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090,G__24091));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24092 = a;
var G__24093 = b;
var G__24094 = c;
var G__24095 = d;
var G__24096 = e;
var G__24097 = f;
var G__24098 = g;
var G__24099 = h;
var G__24100 = i;
var G__24101 = j;
var G__24102 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102) : target_fn.call(null,G__24092,G__24093,G__24094,G__24095,G__24096,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24103 = a;
var G__24104 = b;
var G__24105 = c;
var G__24106 = d;
var G__24107 = e;
var G__24108 = f;
var G__24109 = g;
var G__24110 = h;
var G__24111 = i;
var G__24112 = j;
var G__24113 = k;
var G__24114 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__24103,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114) : self__.dispatch_fn.call(null,G__24103,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24115 = a;
var G__24116 = b;
var G__24117 = c;
var G__24118 = d;
var G__24119 = e;
var G__24120 = f;
var G__24121 = g;
var G__24122 = h;
var G__24123 = i;
var G__24124 = j;
var G__24125 = k;
var G__24126 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__24115,G__24116,G__24117,G__24118,G__24119,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126) : target_fn.call(null,G__24115,G__24116,G__24117,G__24118,G__24119,G__24120,G__24121,G__24122,G__24123,G__24124,G__24125,G__24126));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24127 = a;
var G__24128 = b;
var G__24129 = c;
var G__24130 = d;
var G__24131 = e;
var G__24132 = f;
var G__24133 = g;
var G__24134 = h;
var G__24135 = i;
var G__24136 = j;
var G__24137 = k;
var G__24138 = l;
var G__24139 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__24127,G__24128,G__24129,G__24130,G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139) : self__.dispatch_fn.call(null,G__24127,G__24128,G__24129,G__24130,G__24131,G__24132,G__24133,G__24134,G__24135,G__24136,G__24137,G__24138,G__24139));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24140 = a;
var G__24141 = b;
var G__24142 = c;
var G__24143 = d;
var G__24144 = e;
var G__24145 = f;
var G__24146 = g;
var G__24147 = h;
var G__24148 = i;
var G__24149 = j;
var G__24150 = k;
var G__24151 = l;
var G__24152 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__24140,G__24141,G__24142,G__24143,G__24144,G__24145,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152) : target_fn.call(null,G__24140,G__24141,G__24142,G__24143,G__24144,G__24145,G__24146,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24153 = a;
var G__24154 = b;
var G__24155 = c;
var G__24156 = d;
var G__24157 = e;
var G__24158 = f;
var G__24159 = g;
var G__24160 = h;
var G__24161 = i;
var G__24162 = j;
var G__24163 = k;
var G__24164 = l;
var G__24165 = m;
var G__24166 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__24153,G__24154,G__24155,G__24156,G__24157,G__24158,G__24159,G__24160,G__24161,G__24162,G__24163,G__24164,G__24165,G__24166) : self__.dispatch_fn.call(null,G__24153,G__24154,G__24155,G__24156,G__24157,G__24158,G__24159,G__24160,G__24161,G__24162,G__24163,G__24164,G__24165,G__24166));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24167 = a;
var G__24168 = b;
var G__24169 = c;
var G__24170 = d;
var G__24171 = e;
var G__24172 = f;
var G__24173 = g;
var G__24174 = h;
var G__24175 = i;
var G__24176 = j;
var G__24177 = k;
var G__24178 = l;
var G__24179 = m;
var G__24180 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180) : target_fn.call(null,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24181 = a;
var G__24182 = b;
var G__24183 = c;
var G__24184 = d;
var G__24185 = e;
var G__24186 = f;
var G__24187 = g;
var G__24188 = h;
var G__24189 = i;
var G__24190 = j;
var G__24191 = k;
var G__24192 = l;
var G__24193 = m;
var G__24194 = n;
var G__24195 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188,G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195) : self__.dispatch_fn.call(null,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188,G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24196 = a;
var G__24197 = b;
var G__24198 = c;
var G__24199 = d;
var G__24200 = e;
var G__24201 = f;
var G__24202 = g;
var G__24203 = h;
var G__24204 = i;
var G__24205 = j;
var G__24206 = k;
var G__24207 = l;
var G__24208 = m;
var G__24209 = n;
var G__24210 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__24196,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210) : target_fn.call(null,G__24196,G__24197,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206,G__24207,G__24208,G__24209,G__24210));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24211 = a;
var G__24212 = b;
var G__24213 = c;
var G__24214 = d;
var G__24215 = e;
var G__24216 = f;
var G__24217 = g;
var G__24218 = h;
var G__24219 = i;
var G__24220 = j;
var G__24221 = k;
var G__24222 = l;
var G__24223 = m;
var G__24224 = n;
var G__24225 = o;
var G__24226 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__24211,G__24212,G__24213,G__24214,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226) : self__.dispatch_fn.call(null,G__24211,G__24212,G__24213,G__24214,G__24215,G__24216,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24227 = a;
var G__24228 = b;
var G__24229 = c;
var G__24230 = d;
var G__24231 = e;
var G__24232 = f;
var G__24233 = g;
var G__24234 = h;
var G__24235 = i;
var G__24236 = j;
var G__24237 = k;
var G__24238 = l;
var G__24239 = m;
var G__24240 = n;
var G__24241 = o;
var G__24242 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240,G__24241,G__24242) : target_fn.call(null,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237,G__24238,G__24239,G__24240,G__24241,G__24242));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24243 = a;
var G__24244 = b;
var G__24245 = c;
var G__24246 = d;
var G__24247 = e;
var G__24248 = f;
var G__24249 = g;
var G__24250 = h;
var G__24251 = i;
var G__24252 = j;
var G__24253 = k;
var G__24254 = l;
var G__24255 = m;
var G__24256 = n;
var G__24257 = o;
var G__24258 = p;
var G__24259 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__24243,G__24244,G__24245,G__24246,G__24247,G__24248,G__24249,G__24250,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259) : self__.dispatch_fn.call(null,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248,G__24249,G__24250,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24260 = a;
var G__24261 = b;
var G__24262 = c;
var G__24263 = d;
var G__24264 = e;
var G__24265 = f;
var G__24266 = g;
var G__24267 = h;
var G__24268 = i;
var G__24269 = j;
var G__24270 = k;
var G__24271 = l;
var G__24272 = m;
var G__24273 = n;
var G__24274 = o;
var G__24275 = p;
var G__24276 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__24260,G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272,G__24273,G__24274,G__24275,G__24276) : target_fn.call(null,G__24260,G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272,G__24273,G__24274,G__24275,G__24276));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24277 = a;
var G__24278 = b;
var G__24279 = c;
var G__24280 = d;
var G__24281 = e;
var G__24282 = f;
var G__24283 = g;
var G__24284 = h;
var G__24285 = i;
var G__24286 = j;
var G__24287 = k;
var G__24288 = l;
var G__24289 = m;
var G__24290 = n;
var G__24291 = o;
var G__24292 = p;
var G__24293 = q;
var G__24294 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287,G__24288,G__24289,G__24290,G__24291,G__24292,G__24293,G__24294) : self__.dispatch_fn.call(null,G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285,G__24286,G__24287,G__24288,G__24289,G__24290,G__24291,G__24292,G__24293,G__24294));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24295 = a;
var G__24296 = b;
var G__24297 = c;
var G__24298 = d;
var G__24299 = e;
var G__24300 = f;
var G__24301 = g;
var G__24302 = h;
var G__24303 = i;
var G__24304 = j;
var G__24305 = k;
var G__24306 = l;
var G__24307 = m;
var G__24308 = n;
var G__24309 = o;
var G__24310 = p;
var G__24311 = q;
var G__24312 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__24295,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302,G__24303,G__24304,G__24305,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312) : target_fn.call(null,G__24295,G__24296,G__24297,G__24298,G__24299,G__24300,G__24301,G__24302,G__24303,G__24304,G__24305,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24313 = a;
var G__24314 = b;
var G__24315 = c;
var G__24316 = d;
var G__24317 = e;
var G__24318 = f;
var G__24319 = g;
var G__24320 = h;
var G__24321 = i;
var G__24322 = j;
var G__24323 = k;
var G__24324 = l;
var G__24325 = m;
var G__24326 = n;
var G__24327 = o;
var G__24328 = p;
var G__24329 = q;
var G__24330 = r;
var G__24331 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__24313,G__24314,G__24315,G__24316,G__24317,G__24318,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328,G__24329,G__24330,G__24331) : self__.dispatch_fn.call(null,G__24313,G__24314,G__24315,G__24316,G__24317,G__24318,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326,G__24327,G__24328,G__24329,G__24330,G__24331));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24332 = a;
var G__24333 = b;
var G__24334 = c;
var G__24335 = d;
var G__24336 = e;
var G__24337 = f;
var G__24338 = g;
var G__24339 = h;
var G__24340 = i;
var G__24341 = j;
var G__24342 = k;
var G__24343 = l;
var G__24344 = m;
var G__24345 = n;
var G__24346 = o;
var G__24347 = p;
var G__24348 = q;
var G__24349 = r;
var G__24350 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__24332,G__24333,G__24334,G__24335,G__24336,G__24337,G__24338,G__24339,G__24340,G__24341,G__24342,G__24343,G__24344,G__24345,G__24346,G__24347,G__24348,G__24349,G__24350) : target_fn.call(null,G__24332,G__24333,G__24334,G__24335,G__24336,G__24337,G__24338,G__24339,G__24340,G__24341,G__24342,G__24343,G__24344,G__24345,G__24346,G__24347,G__24348,G__24349,G__24350));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24351 = a;
var G__24352 = b;
var G__24353 = c;
var G__24354 = d;
var G__24355 = e;
var G__24356 = f;
var G__24357 = g;
var G__24358 = h;
var G__24359 = i;
var G__24360 = j;
var G__24361 = k;
var G__24362 = l;
var G__24363 = m;
var G__24364 = n;
var G__24365 = o;
var G__24366 = p;
var G__24367 = q;
var G__24368 = r;
var G__24369 = s;
var G__24370 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__24351,G__24352,G__24353,G__24354,G__24355,G__24356,G__24357,G__24358,G__24359,G__24360,G__24361,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370) : self__.dispatch_fn.call(null,G__24351,G__24352,G__24353,G__24354,G__24355,G__24356,G__24357,G__24358,G__24359,G__24360,G__24361,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24371 = a;
var G__24372 = b;
var G__24373 = c;
var G__24374 = d;
var G__24375 = e;
var G__24376 = f;
var G__24377 = g;
var G__24378 = h;
var G__24379 = i;
var G__24380 = j;
var G__24381 = k;
var G__24382 = l;
var G__24383 = m;
var G__24384 = n;
var G__24385 = o;
var G__24386 = p;
var G__24387 = q;
var G__24388 = r;
var G__24389 = s;
var G__24390 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__24371,G__24372,G__24373,G__24374,G__24375,G__24376,G__24377,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390) : target_fn.call(null,G__24371,G__24372,G__24373,G__24374,G__24375,G__24376,G__24377,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388,G__24389,G__24390));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__24392 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__24392);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__24397 = msg;
return Error(G__24397);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__24402 = x;
var G__24403 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__24402,G__24403) : pred.call(null,G__24402,G__24403));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24404 = y;
var G__24405 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__24404,G__24405) : pred.call(null,G__24404,G__24405));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$96;
} else {
return cljs.core.constant$keyword$97;
}
});
