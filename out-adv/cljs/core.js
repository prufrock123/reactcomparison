// Compiled by ClojureScript 0.0-2755 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2755";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$81,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$82,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$83,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$84,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$85,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__18435__delegate = function (args){
return console.log.apply(console,(function (){var G__18434 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__18434) : cljs.core.into_array.call(null,G__18434));
})());
};
var G__18435 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__18436__i = 0, G__18436__a = new Array(arguments.length -  0);
while (G__18436__i < G__18436__a.length) {G__18436__a[G__18436__i] = arguments[G__18436__i + 0]; ++G__18436__i;}
  args = new cljs.core.IndexedSeq(G__18436__a,0);
} 
return G__18435__delegate.call(this,args);};
G__18435.cljs$lang$maxFixedArity = 0;
G__18435.cljs$lang$applyTo = (function (arglist__18437){
var args = cljs.core.seq(arglist__18437);
return G__18435__delegate(args);
});
G__18435.cljs$core$IFn$_invoke$arity$variadic = G__18435__delegate;
return G__18435;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__18439 = x;
return goog.isString(G__18439);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__18441 = x__$1;
return goog.typeOf(G__18441);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__3760__auto__ = ty;
if(cljs.core.truth_(and__3760__auto__)){
return ty.cljs$lang$type;
} else {
return and__3760__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__18443 = obj;
return goog.typeOf(G__18443);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__18445 = Symbol;
return goog.typeOf(G__18445);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__4659__auto___18447 = len;
var i_18448 = (0);
while(true){
if((i_18448 < n__4659__auto___18447)){
(new_arr[i_18448] = (arr[i_18448]));

var G__18449 = (i_18448 + (1));
i_18448 = G__18449;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__18450 = (i + (1));
i = G__18450;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__18459__delegate = function (array,i,idxs){
var G__18456 = aget;
var G__18457 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__18458 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__18456,G__18457,G__18458) : cljs.core.apply.call(null,G__18456,G__18457,G__18458));
};
var G__18459 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__18460__i = 0, G__18460__a = new Array(arguments.length -  2);
while (G__18460__i < G__18460__a.length) {G__18460__a[G__18460__i] = arguments[G__18460__i + 2]; ++G__18460__i;}
  idxs = new cljs.core.IndexedSeq(G__18460__a,0);
} 
return G__18459__delegate.call(this,array,i,idxs);};
G__18459.cljs$lang$maxFixedArity = 2;
G__18459.cljs$lang$applyTo = (function (arglist__18461){
var array = cljs.core.first(arglist__18461);
arglist__18461 = cljs.core.next(arglist__18461);
var i = cljs.core.first(arglist__18461);
var idxs = cljs.core.rest(arglist__18461);
return G__18459__delegate(array,i,idxs);
});
G__18459.cljs$core$IFn$_invoke$arity$variadic = G__18459__delegate;
return G__18459;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__18462 = null;
if (arguments.length > 2) {
var G__18463__i = 0, G__18463__a = new Array(arguments.length -  2);
while (G__18463__i < G__18463__a.length) {G__18463__a[G__18463__i] = arguments[G__18463__i + 2]; ++G__18463__i;}
G__18462 = new cljs.core.IndexedSeq(G__18463__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__18462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__18472__delegate = function (array,idx,idx2,idxv){
var G__18468 = aset;
var G__18469 = (array[idx]);
var G__18470 = idx2;
var G__18471 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__18468,G__18469,G__18470,G__18471) : cljs.core.apply.call(null,G__18468,G__18469,G__18470,G__18471));
};
var G__18472 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__18473__i = 0, G__18473__a = new Array(arguments.length -  3);
while (G__18473__i < G__18473__a.length) {G__18473__a[G__18473__i] = arguments[G__18473__i + 3]; ++G__18473__i;}
  idxv = new cljs.core.IndexedSeq(G__18473__a,0);
} 
return G__18472__delegate.call(this,array,idx,idx2,idxv);};
G__18472.cljs$lang$maxFixedArity = 3;
G__18472.cljs$lang$applyTo = (function (arglist__18474){
var array = cljs.core.first(arglist__18474);
arglist__18474 = cljs.core.next(arglist__18474);
var idx = cljs.core.first(arglist__18474);
arglist__18474 = cljs.core.next(arglist__18474);
var idx2 = cljs.core.first(arglist__18474);
var idxv = cljs.core.rest(arglist__18474);
return G__18472__delegate(array,idx,idx2,idxv);
});
G__18472.cljs$core$IFn$_invoke$arity$variadic = G__18472__delegate;
return G__18472;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__18475 = null;
if (arguments.length > 3) {
var G__18476__i = 0, G__18476__a = new Array(arguments.length -  3);
while (G__18476__i < G__18476__a.length) {G__18476__a[G__18476__i] = arguments[G__18476__i + 3]; ++G__18476__i;}
G__18475 = new cljs.core.IndexedSeq(G__18476__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__18475);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__18482 = (function (a,x){
a.push(x);

return a;
});
var G__18483 = [];
var G__18484 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__18482,G__18483,G__18484) : cljs.core.reduce.call(null,G__18482,G__18483,G__18484));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__18485__i = 0, G__18485__a = new Array(arguments.length -  2);
while (G__18485__i < G__18485__a.length) {G__18485__a[G__18485__i] = arguments[G__18485__i + 2]; ++G__18485__i;}
  args = new cljs.core.IndexedSeq(G__18485__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__18486){
var obj = cljs.core.first(arglist__18486);
arglist__18486 = cljs.core.next(arglist__18486);
var s = cljs.core.first(arglist__18486);
var args = cljs.core.rest(arglist__18486);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj18488 = {};
return obj18488;
})();


cljs.core.IFn = (function (){var obj18490 = {};
return obj18490;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18536 = x__4416__auto__;
return goog.typeOf(G__18536);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18538 = x__4416__auto__;
return goog.typeOf(G__18538);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18540 = x__4416__auto__;
return goog.typeOf(G__18540);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18542 = x__4416__auto__;
return goog.typeOf(G__18542);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18544 = x__4416__auto__;
return goog.typeOf(G__18544);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18546 = x__4416__auto__;
return goog.typeOf(G__18546);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18548 = x__4416__auto__;
return goog.typeOf(G__18548);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18550 = x__4416__auto__;
return goog.typeOf(G__18550);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18552 = x__4416__auto__;
return goog.typeOf(G__18552);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18554 = x__4416__auto__;
return goog.typeOf(G__18554);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18556 = x__4416__auto__;
return goog.typeOf(G__18556);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18558 = x__4416__auto__;
return goog.typeOf(G__18558);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18560 = x__4416__auto__;
return goog.typeOf(G__18560);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18562 = x__4416__auto__;
return goog.typeOf(G__18562);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18564 = x__4416__auto__;
return goog.typeOf(G__18564);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18566 = x__4416__auto__;
return goog.typeOf(G__18566);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18568 = x__4416__auto__;
return goog.typeOf(G__18568);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18570 = x__4416__auto__;
return goog.typeOf(G__18570);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18572 = x__4416__auto__;
return goog.typeOf(G__18572);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18574 = x__4416__auto__;
return goog.typeOf(G__18574);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18576 = x__4416__auto__;
return goog.typeOf(G__18576);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._invoke[(function (){var G__18578 = x__4416__auto__;
return goog.typeOf(G__18578);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._invoke["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj18580 = {};
return obj18580;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__3760__auto__ = value;
if(and__3760__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__3760__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__4416__auto__ = (((value == null))?null:value);
return (function (){var or__3772__auto__ = (cljs.core._clone[(function (){var G__18584 = x__4416__auto__;
return goog.typeOf(G__18584);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._clone["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj18586 = {};
return obj18586;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._count[(function (){var G__18590 = x__4416__auto__;
return goog.typeOf(G__18590);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._count["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj18592 = {};
return obj18592;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._empty[(function (){var G__18596 = x__4416__auto__;
return goog.typeOf(G__18596);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._empty["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj18598 = {};
return obj18598;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._conj[(function (){var G__18602 = x__4416__auto__;
return goog.typeOf(G__18602);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._conj["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj18604 = {};
return obj18604;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._nth[(function (){var G__18610 = x__4416__auto__;
return goog.typeOf(G__18610);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._nth["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._nth[(function (){var G__18612 = x__4416__auto__;
return goog.typeOf(G__18612);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._nth["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj18614 = {};
return obj18614;
})();


cljs.core.ISeq = (function (){var obj18616 = {};
return obj18616;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._first[(function (){var G__18620 = x__4416__auto__;
return goog.typeOf(G__18620);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._first["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._rest[(function (){var G__18624 = x__4416__auto__;
return goog.typeOf(G__18624);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._rest["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj18626 = {};
return obj18626;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._next[(function (){var G__18630 = x__4416__auto__;
return goog.typeOf(G__18630);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._next["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj18632 = {};
return obj18632;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._lookup[(function (){var G__18638 = x__4416__auto__;
return goog.typeOf(G__18638);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._lookup["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._lookup[(function (){var G__18640 = x__4416__auto__;
return goog.typeOf(G__18640);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._lookup["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj18642 = {};
return obj18642;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__18646 = x__4416__auto__;
return goog.typeOf(G__18646);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._assoc[(function (){var G__18650 = x__4416__auto__;
return goog.typeOf(G__18650);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj18652 = {};
return obj18652;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._dissoc[(function (){var G__18656 = x__4416__auto__;
return goog.typeOf(G__18656);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._dissoc["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj18658 = {};
return obj18658;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._key[(function (){var G__18662 = x__4416__auto__;
return goog.typeOf(G__18662);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._key["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._val[(function (){var G__18666 = x__4416__auto__;
return goog.typeOf(G__18666);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._val["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj18668 = {};
return obj18668;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._disjoin[(function (){var G__18672 = x__4416__auto__;
return goog.typeOf(G__18672);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._disjoin["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj18674 = {};
return obj18674;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._peek[(function (){var G__18678 = x__4416__auto__;
return goog.typeOf(G__18678);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._peek["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._pop[(function (){var G__18682 = x__4416__auto__;
return goog.typeOf(G__18682);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._pop["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj18684 = {};
return obj18684;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._assoc_n[(function (){var G__18688 = x__4416__auto__;
return goog.typeOf(G__18688);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj18690 = {};
return obj18690;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._deref[(function (){var G__18694 = x__4416__auto__;
return goog.typeOf(G__18694);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._deref["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj18696 = {};
return obj18696;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._deref_with_timeout[(function (){var G__18700 = x__4416__auto__;
return goog.typeOf(G__18700);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj18702 = {};
return obj18702;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._meta[(function (){var G__18706 = x__4416__auto__;
return goog.typeOf(G__18706);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._meta["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj18708 = {};
return obj18708;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._with_meta[(function (){var G__18712 = x__4416__auto__;
return goog.typeOf(G__18712);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._with_meta["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj18714 = {};
return obj18714;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._reduce[(function (){var G__18720 = x__4416__auto__;
return goog.typeOf(G__18720);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reduce["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._reduce[(function (){var G__18722 = x__4416__auto__;
return goog.typeOf(G__18722);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reduce["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj18724 = {};
return obj18724;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._kv_reduce[(function (){var G__18728 = x__4416__auto__;
return goog.typeOf(G__18728);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj18730 = {};
return obj18730;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._equiv[(function (){var G__18734 = x__4416__auto__;
return goog.typeOf(G__18734);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._equiv["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj18736 = {};
return obj18736;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._hash[(function (){var G__18740 = x__4416__auto__;
return goog.typeOf(G__18740);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._hash["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj18742 = {};
return obj18742;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._seq[(function (){var G__18746 = x__4416__auto__;
return goog.typeOf(G__18746);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._seq["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj18748 = {};
return obj18748;
})();


cljs.core.IList = (function (){var obj18750 = {};
return obj18750;
})();


cljs.core.IRecord = (function (){var obj18752 = {};
return obj18752;
})();


cljs.core.IReversible = (function (){var obj18754 = {};
return obj18754;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._rseq[(function (){var G__18758 = x__4416__auto__;
return goog.typeOf(G__18758);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._rseq["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj18760 = {};
return obj18760;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._sorted_seq[(function (){var G__18764 = x__4416__auto__;
return goog.typeOf(G__18764);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._sorted_seq_from[(function (){var G__18768 = x__4416__auto__;
return goog.typeOf(G__18768);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._entry_key[(function (){var G__18772 = x__4416__auto__;
return goog.typeOf(G__18772);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._entry_key["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._comparator[(function (){var G__18776 = x__4416__auto__;
return goog.typeOf(G__18776);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._comparator["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj18778 = {};
return obj18778;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__3760__auto__ = writer;
if(and__3760__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__3760__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__4416__auto__ = (((writer == null))?null:writer);
return (function (){var or__3772__auto__ = (cljs.core._write[(function (){var G__18782 = x__4416__auto__;
return goog.typeOf(G__18782);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._write["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__3760__auto__ = writer;
if(and__3760__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__3760__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__4416__auto__ = (((writer == null))?null:writer);
return (function (){var or__3772__auto__ = (cljs.core._flush[(function (){var G__18786 = x__4416__auto__;
return goog.typeOf(G__18786);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._flush["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj18788 = {};
return obj18788;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._pr_writer[(function (){var G__18792 = x__4416__auto__;
return goog.typeOf(G__18792);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj18794 = {};
return obj18794;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__3760__auto__ = d;
if(and__3760__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__3760__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__4416__auto__ = (((d == null))?null:d);
return (function (){var or__3772__auto__ = (cljs.core._realized_QMARK_[(function (){var G__18798 = x__4416__auto__;
return goog.typeOf(G__18798);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj18800 = {};
return obj18800;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._notify_watches[(function (){var G__18804 = x__4416__auto__;
return goog.typeOf(G__18804);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._add_watch[(function (){var G__18808 = x__4416__auto__;
return goog.typeOf(G__18808);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._add_watch["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__3760__auto__ = this$;
if(and__3760__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__3760__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__4416__auto__ = (((this$ == null))?null:this$);
return (function (){var or__3772__auto__ = (cljs.core._remove_watch[(function (){var G__18812 = x__4416__auto__;
return goog.typeOf(G__18812);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj18814 = {};
return obj18814;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._as_transient[(function (){var G__18818 = x__4416__auto__;
return goog.typeOf(G__18818);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._as_transient["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj18820 = {};
return obj18820;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._conj_BANG_[(function (){var G__18824 = x__4416__auto__;
return goog.typeOf(G__18824);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._persistent_BANG_[(function (){var G__18828 = x__4416__auto__;
return goog.typeOf(G__18828);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj18830 = {};
return obj18830;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._assoc_BANG_[(function (){var G__18834 = x__4416__auto__;
return goog.typeOf(G__18834);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj18836 = {};
return obj18836;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__18840 = x__4416__auto__;
return goog.typeOf(G__18840);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj18842 = {};
return obj18842;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__18846 = x__4416__auto__;
return goog.typeOf(G__18846);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._pop_BANG_[(function (){var G__18850 = x__4416__auto__;
return goog.typeOf(G__18850);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj18852 = {};
return obj18852;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__3760__auto__ = tcoll;
if(and__3760__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__4416__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__3772__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__18856 = x__4416__auto__;
return goog.typeOf(G__18856);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj18858 = {};
return obj18858;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._compare[(function (){var G__18862 = x__4416__auto__;
return goog.typeOf(G__18862);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._compare["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj18864 = {};
return obj18864;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._drop_first[(function (){var G__18868 = x__4416__auto__;
return goog.typeOf(G__18868);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._drop_first["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj18870 = {};
return obj18870;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._chunked_first[(function (){var G__18874 = x__4416__auto__;
return goog.typeOf(G__18874);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._chunked_rest[(function (){var G__18878 = x__4416__auto__;
return goog.typeOf(G__18878);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj18880 = {};
return obj18880;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._chunked_next[(function (){var G__18884 = x__4416__auto__;
return goog.typeOf(G__18884);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj18886 = {};
return obj18886;
})();

cljs.core._name = (function _name(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._name[(function (){var G__18890 = x__4416__auto__;
return goog.typeOf(G__18890);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._name["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._namespace[(function (){var G__18894 = x__4416__auto__;
return goog.typeOf(G__18894);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._namespace["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj18896 = {};
return obj18896;
})();


cljs.core.IReset = (function (){var obj18898 = {};
return obj18898;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._reset_BANG_[(function (){var G__18902 = x__4416__auto__;
return goog.typeOf(G__18902);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj18904 = {};
return obj18904;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__18914 = x__4416__auto__;
return goog.typeOf(G__18914);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__18916 = x__4416__auto__;
return goog.typeOf(G__18916);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__18918 = x__4416__auto__;
return goog.typeOf(G__18918);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._swap_BANG_[(function (){var G__18920 = x__4416__auto__;
return goog.typeOf(G__18920);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj18922 = {};
return obj18922;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__3760__auto__ = o;
if(and__3760__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__3760__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__4416__auto__ = (((o == null))?null:o);
return (function (){var or__3772__auto__ = (cljs.core._vreset_BANG_[(function (){var G__18926 = x__4416__auto__;
return goog.typeOf(G__18926);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj18928 = {};
return obj18928;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__3760__auto__ = coll;
if(and__3760__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__3760__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__4416__auto__ = (((coll == null))?null:coll);
return (function (){var or__3772__auto__ = (cljs.core._iterator[(function (){var G__18932 = x__4416__auto__;
return goog.typeOf(G__18932);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._iterator["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__18935 = (4294967295);
var G__18936 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18935,G__18936) : Math.imul.call(null,G__18935,G__18936));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__18939 = a;
var G__18940 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__18939,G__18940) : Math.imul.call(null,G__18939,G__18940));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__18941 = (i + (2));
var G__18942 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__18941;
h1 = G__18942;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj18944 = {};
return obj18944;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__18945 = (i + (1));
var G__18946 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__18945;
hash = G__18946;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj18950 = {};
return obj18950;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__18953 = o;
if(G__18953){
var bit__4446__auto__ = (G__18953.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__4446__auto__) || (G__18953.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__18954 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__18954) : Math.floor.call(null,G__18954));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3760__auto__ = cljs.core.not(a.ns);
if(and__3760__auto__){
return b.ns;
} else {
return and__3760__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__18961 = a.ns;
var G__18962 = b.ns;
return goog.array.defaultCompare(G__18961,G__18962);
})();
if(((0) === nsc)){
var G__18963 = a.name;
var G__18964 = b.name;
return goog.array.defaultCompare(G__18963,G__18964);
} else {
return nsc;
}
}
} else {
var G__18965 = a.name;
var G__18966 = b.name;
return goog.array.defaultCompare(G__18965,G__18966);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__4193__auto__ = self__._hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__18968 = null;
var G__18968__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__18968__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__18968 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__18968__2.call(this,self__,coll);
case 3:
return G__18968__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__18968.cljs$core$IFn$_invoke$arity$2 = G__18968__2;
G__18968.cljs$core$IFn$_invoke$arity$3 = G__18968__3;
return G__18968;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args18967){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18967)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__19016 = null;
var G__19016__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__19016__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__19016__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__19016__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__19016__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__19016__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__19016__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__19016__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__19016__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__19016__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__19016__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__19016__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__19016__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__19016__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__19016__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__19016__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__19016__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__19016__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__19016__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__19016__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__19016__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__19016__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__18972 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__18973 = a;
var G__18974 = b;
var G__18975 = c;
var G__18976 = d;
var G__18977 = e;
var G__18978 = f;
var G__18979 = g;
var G__18980 = h;
var G__18981 = i;
var G__18982 = j;
var G__18983 = k;
var G__18984 = l;
var G__18985 = m;
var G__18986 = n;
var G__18987 = o;
var G__18988 = p;
var G__18989 = q;
var G__18990 = r;
var G__18991 = s;
var G__18992 = t;
var G__18993 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18972,G__18973,G__18974,G__18975,G__18976,G__18977,G__18978,G__18979,G__18980,G__18981,G__18982,G__18983,G__18984,G__18985,G__18986,G__18987,G__18988,G__18989,G__18990,G__18991,G__18992,G__18993) : cljs.core.apply.call(null,G__18972,G__18973,G__18974,G__18975,G__18976,G__18977,G__18978,G__18979,G__18980,G__18981,G__18982,G__18983,G__18984,G__18985,G__18986,G__18987,G__18988,G__18989,G__18990,G__18991,G__18992,G__18993));
});
G__19016 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19016__1.call(this,self__);
case 2:
return G__19016__2.call(this,self__,a);
case 3:
return G__19016__3.call(this,self__,a,b);
case 4:
return G__19016__4.call(this,self__,a,b,c);
case 5:
return G__19016__5.call(this,self__,a,b,c,d);
case 6:
return G__19016__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19016__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19016__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19016__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19016__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19016__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19016__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19016__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19016__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19016__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19016__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19016__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19016__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19016__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19016__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19016__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19016__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19016.cljs$core$IFn$_invoke$arity$1 = G__19016__1;
G__19016.cljs$core$IFn$_invoke$arity$2 = G__19016__2;
G__19016.cljs$core$IFn$_invoke$arity$3 = G__19016__3;
G__19016.cljs$core$IFn$_invoke$arity$4 = G__19016__4;
G__19016.cljs$core$IFn$_invoke$arity$5 = G__19016__5;
G__19016.cljs$core$IFn$_invoke$arity$6 = G__19016__6;
G__19016.cljs$core$IFn$_invoke$arity$7 = G__19016__7;
G__19016.cljs$core$IFn$_invoke$arity$8 = G__19016__8;
G__19016.cljs$core$IFn$_invoke$arity$9 = G__19016__9;
G__19016.cljs$core$IFn$_invoke$arity$10 = G__19016__10;
G__19016.cljs$core$IFn$_invoke$arity$11 = G__19016__11;
G__19016.cljs$core$IFn$_invoke$arity$12 = G__19016__12;
G__19016.cljs$core$IFn$_invoke$arity$13 = G__19016__13;
G__19016.cljs$core$IFn$_invoke$arity$14 = G__19016__14;
G__19016.cljs$core$IFn$_invoke$arity$15 = G__19016__15;
G__19016.cljs$core$IFn$_invoke$arity$16 = G__19016__16;
G__19016.cljs$core$IFn$_invoke$arity$17 = G__19016__17;
G__19016.cljs$core$IFn$_invoke$arity$18 = G__19016__18;
G__19016.cljs$core$IFn$_invoke$arity$19 = G__19016__19;
G__19016.cljs$core$IFn$_invoke$arity$20 = G__19016__20;
G__19016.cljs$core$IFn$_invoke$arity$21 = G__19016__21;
G__19016.cljs$core$IFn$_invoke$arity$22 = G__19016__22;
return G__19016;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args18971){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args18971)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__18994 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__18995 = a;
var G__18996 = b;
var G__18997 = c;
var G__18998 = d;
var G__18999 = e;
var G__19000 = f;
var G__19001 = g;
var G__19002 = h;
var G__19003 = i;
var G__19004 = j;
var G__19005 = k;
var G__19006 = l;
var G__19007 = m;
var G__19008 = n;
var G__19009 = o;
var G__19010 = p;
var G__19011 = q;
var G__19012 = r;
var G__19013 = s;
var G__19014 = t;
var G__19015 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__18994,G__18995,G__18996,G__18997,G__18998,G__18999,G__19000,G__19001,G__19002,G__19003,G__19004,G__19005,G__19006,G__19007,G__19008,G__19009,G__19010,G__19011,G__19012,G__19013,G__19014,G__19015) : cljs.core.apply.call(null,G__18994,G__18995,G__18996,G__18997,G__18998,G__18999,G__19000,G__19001,G__19002,G__19003,G__19004,G__19005,G__19006,G__19007,G__19008,G__19009,G__19010,G__19011,G__19012,G__19013,G__19014,G__19015));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__19018 = x;
if(G__19018){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__19018.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__19018.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__19018);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__19018);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__19020 = value;
if(G__19020){
var bit__4453__auto__ = (G__19020.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__4453__auto__) || (G__19020.cljs$core$ICloneable$)){
return true;
} else {
if((!G__19020.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__19020);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__19020);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19022 = coll;
if(G__19022){
var bit__4446__auto__ = (G__19022.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4446__auto__) || (G__19022.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19024 = coll;
if(G__19024){
var bit__4446__auto__ = (G__19024.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__19024.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__19026 = coll;
if(G__19026){
var bit__4446__auto__ = (G__19026.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__19026.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__19028 = coll;
if(G__19028){
var bit__4446__auto__ = (G__19028.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4446__auto__) || (G__19028.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__19033__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19034 = y;
var G__19035 = cljs.core.first(more);
var G__19036 = cljs.core.next(more);
x = G__19034;
y = G__19035;
more = G__19036;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19033 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19037__i = 0, G__19037__a = new Array(arguments.length -  2);
while (G__19037__i < G__19037__a.length) {G__19037__a[G__19037__i] = arguments[G__19037__i + 2]; ++G__19037__i;}
  more = new cljs.core.IndexedSeq(G__19037__a,0);
} 
return G__19033__delegate.call(this,x,y,more);};
G__19033.cljs$lang$maxFixedArity = 2;
G__19033.cljs$lang$applyTo = (function (arglist__19038){
var x = cljs.core.first(arglist__19038);
arglist__19038 = cljs.core.next(arglist__19038);
var y = cljs.core.first(arglist__19038);
var more = cljs.core.rest(arglist__19038);
return G__19033__delegate(x,y,more);
});
G__19033.cljs$core$IFn$_invoke$arity$variadic = G__19033__delegate;
return G__19033;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__19039 = null;
if (arguments.length > 2) {
var G__19040__i = 0, G__19040__a = new Array(arguments.length -  2);
while (G__19040__i < G__19040__a.length) {G__19040__a[G__19040__i] = arguments[G__19040__i + 2]; ++G__19040__i;}
G__19039 = new cljs.core.IndexedSeq(G__19040__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19039);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__19041 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__19041) : cljs.core.es6_iterator_seq.call(null,G__19041));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__19042 = (n + (1));
var G__19043 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__19044 = cljs.core.next(coll__$1);
n = G__19042;
hash_code = G__19043;
coll__$1 = G__19044;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__19045 = (n + (1));
var G__19046 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__19047 = cljs.core.next(coll__$1);
n = G__19045;
hash_code = G__19046;
coll__$1 = G__19047;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__19048 = o;
return goog.getUid(G__19048);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__19050 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__19050) : cljs.core.deref.call(null,G__19050));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__19057 = val;
var G__19058 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19057,G__19058) : f.call(null,G__19057,G__19058));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19063 = nval;
var G__19064 = (n + (1));
val = G__19063;
n = G__19064;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__19059 = val__$1;
var G__19060 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19059,G__19060) : f.call(null,G__19059,G__19060));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19065 = nval;
var G__19066 = (n + (1));
val__$1 = G__19065;
n = G__19066;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__19061 = val__$1;
var G__19062 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19061,G__19062) : f.call(null,G__19061,G__19062));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19067 = nval;
var G__19068 = (n + (1));
val__$1 = G__19067;
n = G__19068;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__19075 = val;
var G__19076 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19075,G__19076) : f.call(null,G__19075,G__19076));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19081 = nval;
var G__19082 = (n + (1));
val = G__19081;
n = G__19082;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__19077 = val__$1;
var G__19078 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19077,G__19078) : f.call(null,G__19077,G__19078));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19083 = nval;
var G__19084 = (n + (1));
val__$1 = G__19083;
n = G__19084;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__19079 = val__$1;
var G__19080 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19079,G__19080) : f.call(null,G__19079,G__19080));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19085 = nval;
var G__19086 = (n + (1));
val__$1 = G__19085;
n = G__19086;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__19088 = x;
if(G__19088){
var bit__4453__auto__ = (G__19088.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4453__auto__) || (G__19088.cljs$core$ICounted$)){
return true;
} else {
if((!G__19088.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__19088);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__19088);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__19090 = x;
if(G__19090){
var bit__4453__auto__ = (G__19090.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4453__auto__) || (G__19090.cljs$core$IIndexed$)){
return true;
} else {
if((!G__19090.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__19090);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__19090);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__19091 = coll__$1;
var G__19092 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__19091,G__19092) : cljs.core.equiv_sequential.call(null,G__19091,G__19092));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__19093 = o;
var G__19094 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__19093,G__19094) : cljs.core.cons.call(null,G__19093,G__19094));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__19097 = coll__$1;
var G__19098 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__19097,G__19098) : cljs.core.equiv_sequential.call(null,G__19097,G__19098));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__19099 = cljs.core.List.EMPTY;
var G__19100 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__19099,G__19100) : cljs.core.with_meta.call(null,G__19099,G__19100));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__19101 = f;
var G__19102 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__19101,G__19102) : cljs.core.seq_reduce.call(null,G__19101,G__19102));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__19103 = f;
var G__19104 = start;
var G__19105 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__19103,G__19104,G__19105) : cljs.core.seq_reduce.call(null,G__19103,G__19104,G__19105));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__19106 = o;
var G__19107 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__19106,G__19107) : cljs.core.cons.call(null,G__19106,G__19107));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__19108 = sn;
s = G__19108;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__19113__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__19114 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__19115 = cljs.core.first(xs);
var G__19116 = cljs.core.next(xs);
coll = G__19114;
x = G__19115;
xs = G__19116;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__19113 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__19117__i = 0, G__19117__a = new Array(arguments.length -  2);
while (G__19117__i < G__19117__a.length) {G__19117__a[G__19117__i] = arguments[G__19117__i + 2]; ++G__19117__i;}
  xs = new cljs.core.IndexedSeq(G__19117__a,0);
} 
return G__19113__delegate.call(this,coll,x,xs);};
G__19113.cljs$lang$maxFixedArity = 2;
G__19113.cljs$lang$applyTo = (function (arglist__19118){
var coll = cljs.core.first(arglist__19118);
arglist__19118 = cljs.core.next(arglist__19118);
var x = cljs.core.first(arglist__19118);
var xs = cljs.core.rest(arglist__19118);
return G__19113__delegate(coll,x,xs);
});
G__19113.cljs$core$IFn$_invoke$arity$variadic = G__19113__delegate;
return G__19113;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__19119 = null;
if (arguments.length > 2) {
var G__19120__i = 0, G__19120__a = new Array(arguments.length -  2);
while (G__19120__i < G__19120__a.length) {G__19120__a[G__19120__i] = arguments[G__19120__i + 2]; ++G__19120__i;}
G__19119 = new cljs.core.IndexedSeq(G__19120__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__19119);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__19121 = cljs.core.next(s);
var G__19122 = (acc + (1));
s = G__19121;
acc = G__19122;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__19124 = coll;
if(G__19124){
var bit__4446__auto__ = (G__19124.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__4446__auto__) || (G__19124.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__19125 = cljs.core.next(coll);
var G__19126 = (n - (1));
coll = G__19125;
n = G__19126;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__19127 = cljs.core.next(coll);
var G__19128 = (n - (1));
var G__19129 = not_found;
coll = G__19127;
n = G__19128;
not_found = G__19129;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__19134 = coll;
if(G__19134){
var bit__4446__auto__ = (G__19134.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4446__auto__) || (G__19134.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__19135 = coll;
if(G__19135){
var bit__4453__auto__ = (G__19135.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4453__auto__) || (G__19135.cljs$core$ISeq$)){
return true;
} else {
if((!G__19135.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19135);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19135);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__19136 = coll;
if(G__19136){
var bit__4446__auto__ = (G__19136.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__4446__auto__) || (G__19136.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__19137 = coll;
if(G__19137){
var bit__4453__auto__ = (G__19137.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4453__auto__) || (G__19137.cljs$core$ISeq$)){
return true;
} else {
if((!G__19137.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19137);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19137);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__19138 = (n__$1 - (1));
var G__19139 = cljs.core.rest(xs);
n__$1 = G__19138;
xs = G__19139;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__19142 = o;
if(G__19142){
var bit__4446__auto__ = (G__19142.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4446__auto__) || (G__19142.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__19143 = o;
if(G__19143){
var bit__4446__auto__ = (G__19143.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4446__auto__) || (G__19143.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__19147__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__19148 = ret;
var G__19149 = cljs.core.first(kvs);
var G__19150 = cljs.core.second(kvs);
var G__19151 = cljs.core.nnext(kvs);
coll = G__19148;
k = G__19149;
v = G__19150;
kvs = G__19151;
continue;
} else {
return ret;
}
break;
}
};
var G__19147 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__19152__i = 0, G__19152__a = new Array(arguments.length -  3);
while (G__19152__i < G__19152__a.length) {G__19152__a[G__19152__i] = arguments[G__19152__i + 3]; ++G__19152__i;}
  kvs = new cljs.core.IndexedSeq(G__19152__a,0);
} 
return G__19147__delegate.call(this,coll,k,v,kvs);};
G__19147.cljs$lang$maxFixedArity = 3;
G__19147.cljs$lang$applyTo = (function (arglist__19153){
var coll = cljs.core.first(arglist__19153);
arglist__19153 = cljs.core.next(arglist__19153);
var k = cljs.core.first(arglist__19153);
arglist__19153 = cljs.core.next(arglist__19153);
var v = cljs.core.first(arglist__19153);
var kvs = cljs.core.rest(arglist__19153);
return G__19147__delegate(coll,k,v,kvs);
});
G__19147.cljs$core$IFn$_invoke$arity$variadic = G__19147__delegate;
return G__19147;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__19154 = null;
if (arguments.length > 3) {
var G__19155__i = 0, G__19155__a = new Array(arguments.length -  3);
while (G__19155__i < G__19155__a.length) {G__19155__a[G__19155__i] = arguments[G__19155__i + 3]; ++G__19155__i;}
G__19154 = new cljs.core.IndexedSeq(G__19155__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__19154);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__19158__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19159 = ret;
var G__19160 = cljs.core.first(ks);
var G__19161 = cljs.core.next(ks);
coll = G__19159;
k = G__19160;
ks = G__19161;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19158 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19162__i = 0, G__19162__a = new Array(arguments.length -  2);
while (G__19162__i < G__19162__a.length) {G__19162__a[G__19162__i] = arguments[G__19162__i + 2]; ++G__19162__i;}
  ks = new cljs.core.IndexedSeq(G__19162__a,0);
} 
return G__19158__delegate.call(this,coll,k,ks);};
G__19158.cljs$lang$maxFixedArity = 2;
G__19158.cljs$lang$applyTo = (function (arglist__19163){
var coll = cljs.core.first(arglist__19163);
arglist__19163 = cljs.core.next(arglist__19163);
var k = cljs.core.first(arglist__19163);
var ks = cljs.core.rest(arglist__19163);
return G__19158__delegate(coll,k,ks);
});
G__19158.cljs$core$IFn$_invoke$arity$variadic = G__19158__delegate;
return G__19158;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__19164 = null;
if (arguments.length > 2) {
var G__19165__i = 0, G__19165__a = new Array(arguments.length -  2);
while (G__19165__i < G__19165__a.length) {G__19165__a[G__19165__i] = arguments[G__19165__i + 2]; ++G__19165__i;}
G__19164 = new cljs.core.IndexedSeq(G__19165__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19164);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__3772__auto__ = (function (){var G__19170 = f;
return goog.isFunction(G__19170);
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__19171 = f;
if(G__19171){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto____$1 = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
return G__19171.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__19171.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19171);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__19171);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__19637 = null;
var G__19637__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__19637__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19173 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19173) : self__.afn.call(null,G__19173));
});
var G__19637__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19174 = a;
var G__19175 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19174,G__19175) : self__.afn.call(null,G__19174,G__19175));
});
var G__19637__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19176 = a;
var G__19177 = b;
var G__19178 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19176,G__19177,G__19178) : self__.afn.call(null,G__19176,G__19177,G__19178));
});
var G__19637__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19179 = a;
var G__19180 = b;
var G__19181 = c;
var G__19182 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19179,G__19180,G__19181,G__19182) : self__.afn.call(null,G__19179,G__19180,G__19181,G__19182));
});
var G__19637__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19183 = a;
var G__19184 = b;
var G__19185 = c;
var G__19186 = d;
var G__19187 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19183,G__19184,G__19185,G__19186,G__19187) : self__.afn.call(null,G__19183,G__19184,G__19185,G__19186,G__19187));
});
var G__19637__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19188 = a;
var G__19189 = b;
var G__19190 = c;
var G__19191 = d;
var G__19192 = e;
var G__19193 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19188,G__19189,G__19190,G__19191,G__19192,G__19193) : self__.afn.call(null,G__19188,G__19189,G__19190,G__19191,G__19192,G__19193));
});
var G__19637__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19194 = a;
var G__19195 = b;
var G__19196 = c;
var G__19197 = d;
var G__19198 = e;
var G__19199 = f;
var G__19200 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19194,G__19195,G__19196,G__19197,G__19198,G__19199,G__19200) : self__.afn.call(null,G__19194,G__19195,G__19196,G__19197,G__19198,G__19199,G__19200));
});
var G__19637__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19201 = a;
var G__19202 = b;
var G__19203 = c;
var G__19204 = d;
var G__19205 = e;
var G__19206 = f;
var G__19207 = g;
var G__19208 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19201,G__19202,G__19203,G__19204,G__19205,G__19206,G__19207,G__19208) : self__.afn.call(null,G__19201,G__19202,G__19203,G__19204,G__19205,G__19206,G__19207,G__19208));
});
var G__19637__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19209 = a;
var G__19210 = b;
var G__19211 = c;
var G__19212 = d;
var G__19213 = e;
var G__19214 = f;
var G__19215 = g;
var G__19216 = h;
var G__19217 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19209,G__19210,G__19211,G__19212,G__19213,G__19214,G__19215,G__19216,G__19217) : self__.afn.call(null,G__19209,G__19210,G__19211,G__19212,G__19213,G__19214,G__19215,G__19216,G__19217));
});
var G__19637__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19218 = a;
var G__19219 = b;
var G__19220 = c;
var G__19221 = d;
var G__19222 = e;
var G__19223 = f;
var G__19224 = g;
var G__19225 = h;
var G__19226 = i;
var G__19227 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19218,G__19219,G__19220,G__19221,G__19222,G__19223,G__19224,G__19225,G__19226,G__19227) : self__.afn.call(null,G__19218,G__19219,G__19220,G__19221,G__19222,G__19223,G__19224,G__19225,G__19226,G__19227));
});
var G__19637__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19228 = a;
var G__19229 = b;
var G__19230 = c;
var G__19231 = d;
var G__19232 = e;
var G__19233 = f;
var G__19234 = g;
var G__19235 = h;
var G__19236 = i;
var G__19237 = j;
var G__19238 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19228,G__19229,G__19230,G__19231,G__19232,G__19233,G__19234,G__19235,G__19236,G__19237,G__19238) : self__.afn.call(null,G__19228,G__19229,G__19230,G__19231,G__19232,G__19233,G__19234,G__19235,G__19236,G__19237,G__19238));
});
var G__19637__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19239 = a;
var G__19240 = b;
var G__19241 = c;
var G__19242 = d;
var G__19243 = e;
var G__19244 = f;
var G__19245 = g;
var G__19246 = h;
var G__19247 = i;
var G__19248 = j;
var G__19249 = k;
var G__19250 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19239,G__19240,G__19241,G__19242,G__19243,G__19244,G__19245,G__19246,G__19247,G__19248,G__19249,G__19250) : self__.afn.call(null,G__19239,G__19240,G__19241,G__19242,G__19243,G__19244,G__19245,G__19246,G__19247,G__19248,G__19249,G__19250));
});
var G__19637__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19251 = a;
var G__19252 = b;
var G__19253 = c;
var G__19254 = d;
var G__19255 = e;
var G__19256 = f;
var G__19257 = g;
var G__19258 = h;
var G__19259 = i;
var G__19260 = j;
var G__19261 = k;
var G__19262 = l;
var G__19263 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__19251,G__19252,G__19253,G__19254,G__19255,G__19256,G__19257,G__19258,G__19259,G__19260,G__19261,G__19262,G__19263) : self__.afn.call(null,G__19251,G__19252,G__19253,G__19254,G__19255,G__19256,G__19257,G__19258,G__19259,G__19260,G__19261,G__19262,G__19263));
});
var G__19637__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19264 = a;
var G__19265 = b;
var G__19266 = c;
var G__19267 = d;
var G__19268 = e;
var G__19269 = f;
var G__19270 = g;
var G__19271 = h;
var G__19272 = i;
var G__19273 = j;
var G__19274 = k;
var G__19275 = l;
var G__19276 = m;
var G__19277 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__19264,G__19265,G__19266,G__19267,G__19268,G__19269,G__19270,G__19271,G__19272,G__19273,G__19274,G__19275,G__19276,G__19277) : self__.afn.call(null,G__19264,G__19265,G__19266,G__19267,G__19268,G__19269,G__19270,G__19271,G__19272,G__19273,G__19274,G__19275,G__19276,G__19277));
});
var G__19637__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19278 = a;
var G__19279 = b;
var G__19280 = c;
var G__19281 = d;
var G__19282 = e;
var G__19283 = f;
var G__19284 = g;
var G__19285 = h;
var G__19286 = i;
var G__19287 = j;
var G__19288 = k;
var G__19289 = l;
var G__19290 = m;
var G__19291 = n;
var G__19292 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__19278,G__19279,G__19280,G__19281,G__19282,G__19283,G__19284,G__19285,G__19286,G__19287,G__19288,G__19289,G__19290,G__19291,G__19292) : self__.afn.call(null,G__19278,G__19279,G__19280,G__19281,G__19282,G__19283,G__19284,G__19285,G__19286,G__19287,G__19288,G__19289,G__19290,G__19291,G__19292));
});
var G__19637__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19293 = a;
var G__19294 = b;
var G__19295 = c;
var G__19296 = d;
var G__19297 = e;
var G__19298 = f;
var G__19299 = g;
var G__19300 = h;
var G__19301 = i;
var G__19302 = j;
var G__19303 = k;
var G__19304 = l;
var G__19305 = m;
var G__19306 = n;
var G__19307 = o;
var G__19308 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__19293,G__19294,G__19295,G__19296,G__19297,G__19298,G__19299,G__19300,G__19301,G__19302,G__19303,G__19304,G__19305,G__19306,G__19307,G__19308) : self__.afn.call(null,G__19293,G__19294,G__19295,G__19296,G__19297,G__19298,G__19299,G__19300,G__19301,G__19302,G__19303,G__19304,G__19305,G__19306,G__19307,G__19308));
});
var G__19637__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19309 = a;
var G__19310 = b;
var G__19311 = c;
var G__19312 = d;
var G__19313 = e;
var G__19314 = f;
var G__19315 = g;
var G__19316 = h;
var G__19317 = i;
var G__19318 = j;
var G__19319 = k;
var G__19320 = l;
var G__19321 = m;
var G__19322 = n;
var G__19323 = o;
var G__19324 = p;
var G__19325 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__19309,G__19310,G__19311,G__19312,G__19313,G__19314,G__19315,G__19316,G__19317,G__19318,G__19319,G__19320,G__19321,G__19322,G__19323,G__19324,G__19325) : self__.afn.call(null,G__19309,G__19310,G__19311,G__19312,G__19313,G__19314,G__19315,G__19316,G__19317,G__19318,G__19319,G__19320,G__19321,G__19322,G__19323,G__19324,G__19325));
});
var G__19637__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19326 = a;
var G__19327 = b;
var G__19328 = c;
var G__19329 = d;
var G__19330 = e;
var G__19331 = f;
var G__19332 = g;
var G__19333 = h;
var G__19334 = i;
var G__19335 = j;
var G__19336 = k;
var G__19337 = l;
var G__19338 = m;
var G__19339 = n;
var G__19340 = o;
var G__19341 = p;
var G__19342 = q;
var G__19343 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__19326,G__19327,G__19328,G__19329,G__19330,G__19331,G__19332,G__19333,G__19334,G__19335,G__19336,G__19337,G__19338,G__19339,G__19340,G__19341,G__19342,G__19343) : self__.afn.call(null,G__19326,G__19327,G__19328,G__19329,G__19330,G__19331,G__19332,G__19333,G__19334,G__19335,G__19336,G__19337,G__19338,G__19339,G__19340,G__19341,G__19342,G__19343));
});
var G__19637__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19344 = a;
var G__19345 = b;
var G__19346 = c;
var G__19347 = d;
var G__19348 = e;
var G__19349 = f;
var G__19350 = g;
var G__19351 = h;
var G__19352 = i;
var G__19353 = j;
var G__19354 = k;
var G__19355 = l;
var G__19356 = m;
var G__19357 = n;
var G__19358 = o;
var G__19359 = p;
var G__19360 = q;
var G__19361 = r;
var G__19362 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__19344,G__19345,G__19346,G__19347,G__19348,G__19349,G__19350,G__19351,G__19352,G__19353,G__19354,G__19355,G__19356,G__19357,G__19358,G__19359,G__19360,G__19361,G__19362) : self__.afn.call(null,G__19344,G__19345,G__19346,G__19347,G__19348,G__19349,G__19350,G__19351,G__19352,G__19353,G__19354,G__19355,G__19356,G__19357,G__19358,G__19359,G__19360,G__19361,G__19362));
});
var G__19637__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19363 = a;
var G__19364 = b;
var G__19365 = c;
var G__19366 = d;
var G__19367 = e;
var G__19368 = f;
var G__19369 = g;
var G__19370 = h;
var G__19371 = i;
var G__19372 = j;
var G__19373 = k;
var G__19374 = l;
var G__19375 = m;
var G__19376 = n;
var G__19377 = o;
var G__19378 = p;
var G__19379 = q;
var G__19380 = r;
var G__19381 = s;
var G__19382 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__19363,G__19364,G__19365,G__19366,G__19367,G__19368,G__19369,G__19370,G__19371,G__19372,G__19373,G__19374,G__19375,G__19376,G__19377,G__19378,G__19379,G__19380,G__19381,G__19382) : self__.afn.call(null,G__19363,G__19364,G__19365,G__19366,G__19367,G__19368,G__19369,G__19370,G__19371,G__19372,G__19373,G__19374,G__19375,G__19376,G__19377,G__19378,G__19379,G__19380,G__19381,G__19382));
});
var G__19637__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__19383 = self__.afn;
var G__19384 = a;
var G__19385 = b;
var G__19386 = c;
var G__19387 = d;
var G__19388 = e;
var G__19389 = f;
var G__19390 = g;
var G__19391 = h;
var G__19392 = i;
var G__19393 = j;
var G__19394 = k;
var G__19395 = l;
var G__19396 = m;
var G__19397 = n;
var G__19398 = o;
var G__19399 = p;
var G__19400 = q;
var G__19401 = r;
var G__19402 = s;
var G__19403 = t;
var G__19404 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19383,G__19384,G__19385,G__19386,G__19387,G__19388,G__19389,G__19390,G__19391,G__19392,G__19393,G__19394,G__19395,G__19396,G__19397,G__19398,G__19399,G__19400,G__19401,G__19402,G__19403,G__19404) : cljs.core.apply.call(null,G__19383,G__19384,G__19385,G__19386,G__19387,G__19388,G__19389,G__19390,G__19391,G__19392,G__19393,G__19394,G__19395,G__19396,G__19397,G__19398,G__19399,G__19400,G__19401,G__19402,G__19403,G__19404));
});
G__19637 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__19637__1.call(this,self__);
case 2:
return G__19637__2.call(this,self__,a);
case 3:
return G__19637__3.call(this,self__,a,b);
case 4:
return G__19637__4.call(this,self__,a,b,c);
case 5:
return G__19637__5.call(this,self__,a,b,c,d);
case 6:
return G__19637__6.call(this,self__,a,b,c,d,e);
case 7:
return G__19637__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__19637__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__19637__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__19637__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__19637__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__19637__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__19637__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__19637__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__19637__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__19637__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__19637__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__19637__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__19637__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__19637__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__19637__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__19637__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19637.cljs$core$IFn$_invoke$arity$1 = G__19637__1;
G__19637.cljs$core$IFn$_invoke$arity$2 = G__19637__2;
G__19637.cljs$core$IFn$_invoke$arity$3 = G__19637__3;
G__19637.cljs$core$IFn$_invoke$arity$4 = G__19637__4;
G__19637.cljs$core$IFn$_invoke$arity$5 = G__19637__5;
G__19637.cljs$core$IFn$_invoke$arity$6 = G__19637__6;
G__19637.cljs$core$IFn$_invoke$arity$7 = G__19637__7;
G__19637.cljs$core$IFn$_invoke$arity$8 = G__19637__8;
G__19637.cljs$core$IFn$_invoke$arity$9 = G__19637__9;
G__19637.cljs$core$IFn$_invoke$arity$10 = G__19637__10;
G__19637.cljs$core$IFn$_invoke$arity$11 = G__19637__11;
G__19637.cljs$core$IFn$_invoke$arity$12 = G__19637__12;
G__19637.cljs$core$IFn$_invoke$arity$13 = G__19637__13;
G__19637.cljs$core$IFn$_invoke$arity$14 = G__19637__14;
G__19637.cljs$core$IFn$_invoke$arity$15 = G__19637__15;
G__19637.cljs$core$IFn$_invoke$arity$16 = G__19637__16;
G__19637.cljs$core$IFn$_invoke$arity$17 = G__19637__17;
G__19637.cljs$core$IFn$_invoke$arity$18 = G__19637__18;
G__19637.cljs$core$IFn$_invoke$arity$19 = G__19637__19;
G__19637.cljs$core$IFn$_invoke$arity$20 = G__19637__20;
G__19637.cljs$core$IFn$_invoke$arity$21 = G__19637__21;
G__19637.cljs$core$IFn$_invoke$arity$22 = G__19637__22;
return G__19637;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args19172){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args19172)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__19405 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__19405) : self__.afn.call(null,G__19405));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__19406 = a;
var G__19407 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__19406,G__19407) : self__.afn.call(null,G__19406,G__19407));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__19408 = a;
var G__19409 = b;
var G__19410 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__19408,G__19409,G__19410) : self__.afn.call(null,G__19408,G__19409,G__19410));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__19411 = a;
var G__19412 = b;
var G__19413 = c;
var G__19414 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__19411,G__19412,G__19413,G__19414) : self__.afn.call(null,G__19411,G__19412,G__19413,G__19414));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__19415 = a;
var G__19416 = b;
var G__19417 = c;
var G__19418 = d;
var G__19419 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__19415,G__19416,G__19417,G__19418,G__19419) : self__.afn.call(null,G__19415,G__19416,G__19417,G__19418,G__19419));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__19420 = a;
var G__19421 = b;
var G__19422 = c;
var G__19423 = d;
var G__19424 = e;
var G__19425 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__19420,G__19421,G__19422,G__19423,G__19424,G__19425) : self__.afn.call(null,G__19420,G__19421,G__19422,G__19423,G__19424,G__19425));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__19426 = a;
var G__19427 = b;
var G__19428 = c;
var G__19429 = d;
var G__19430 = e;
var G__19431 = f;
var G__19432 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__19426,G__19427,G__19428,G__19429,G__19430,G__19431,G__19432) : self__.afn.call(null,G__19426,G__19427,G__19428,G__19429,G__19430,G__19431,G__19432));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__19433 = a;
var G__19434 = b;
var G__19435 = c;
var G__19436 = d;
var G__19437 = e;
var G__19438 = f;
var G__19439 = g;
var G__19440 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__19433,G__19434,G__19435,G__19436,G__19437,G__19438,G__19439,G__19440) : self__.afn.call(null,G__19433,G__19434,G__19435,G__19436,G__19437,G__19438,G__19439,G__19440));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__19441 = a;
var G__19442 = b;
var G__19443 = c;
var G__19444 = d;
var G__19445 = e;
var G__19446 = f;
var G__19447 = g;
var G__19448 = h;
var G__19449 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__19441,G__19442,G__19443,G__19444,G__19445,G__19446,G__19447,G__19448,G__19449) : self__.afn.call(null,G__19441,G__19442,G__19443,G__19444,G__19445,G__19446,G__19447,G__19448,G__19449));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__19450 = a;
var G__19451 = b;
var G__19452 = c;
var G__19453 = d;
var G__19454 = e;
var G__19455 = f;
var G__19456 = g;
var G__19457 = h;
var G__19458 = i;
var G__19459 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__19450,G__19451,G__19452,G__19453,G__19454,G__19455,G__19456,G__19457,G__19458,G__19459) : self__.afn.call(null,G__19450,G__19451,G__19452,G__19453,G__19454,G__19455,G__19456,G__19457,G__19458,G__19459));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__19460 = a;
var G__19461 = b;
var G__19462 = c;
var G__19463 = d;
var G__19464 = e;
var G__19465 = f;
var G__19466 = g;
var G__19467 = h;
var G__19468 = i;
var G__19469 = j;
var G__19470 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__19460,G__19461,G__19462,G__19463,G__19464,G__19465,G__19466,G__19467,G__19468,G__19469,G__19470) : self__.afn.call(null,G__19460,G__19461,G__19462,G__19463,G__19464,G__19465,G__19466,G__19467,G__19468,G__19469,G__19470));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__19471 = a;
var G__19472 = b;
var G__19473 = c;
var G__19474 = d;
var G__19475 = e;
var G__19476 = f;
var G__19477 = g;
var G__19478 = h;
var G__19479 = i;
var G__19480 = j;
var G__19481 = k;
var G__19482 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__19471,G__19472,G__19473,G__19474,G__19475,G__19476,G__19477,G__19478,G__19479,G__19480,G__19481,G__19482) : self__.afn.call(null,G__19471,G__19472,G__19473,G__19474,G__19475,G__19476,G__19477,G__19478,G__19479,G__19480,G__19481,G__19482));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__19483 = a;
var G__19484 = b;
var G__19485 = c;
var G__19486 = d;
var G__19487 = e;
var G__19488 = f;
var G__19489 = g;
var G__19490 = h;
var G__19491 = i;
var G__19492 = j;
var G__19493 = k;
var G__19494 = l;
var G__19495 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__19483,G__19484,G__19485,G__19486,G__19487,G__19488,G__19489,G__19490,G__19491,G__19492,G__19493,G__19494,G__19495) : self__.afn.call(null,G__19483,G__19484,G__19485,G__19486,G__19487,G__19488,G__19489,G__19490,G__19491,G__19492,G__19493,G__19494,G__19495));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__19496 = a;
var G__19497 = b;
var G__19498 = c;
var G__19499 = d;
var G__19500 = e;
var G__19501 = f;
var G__19502 = g;
var G__19503 = h;
var G__19504 = i;
var G__19505 = j;
var G__19506 = k;
var G__19507 = l;
var G__19508 = m;
var G__19509 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__19496,G__19497,G__19498,G__19499,G__19500,G__19501,G__19502,G__19503,G__19504,G__19505,G__19506,G__19507,G__19508,G__19509) : self__.afn.call(null,G__19496,G__19497,G__19498,G__19499,G__19500,G__19501,G__19502,G__19503,G__19504,G__19505,G__19506,G__19507,G__19508,G__19509));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__19510 = a;
var G__19511 = b;
var G__19512 = c;
var G__19513 = d;
var G__19514 = e;
var G__19515 = f;
var G__19516 = g;
var G__19517 = h;
var G__19518 = i;
var G__19519 = j;
var G__19520 = k;
var G__19521 = l;
var G__19522 = m;
var G__19523 = n;
var G__19524 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__19510,G__19511,G__19512,G__19513,G__19514,G__19515,G__19516,G__19517,G__19518,G__19519,G__19520,G__19521,G__19522,G__19523,G__19524) : self__.afn.call(null,G__19510,G__19511,G__19512,G__19513,G__19514,G__19515,G__19516,G__19517,G__19518,G__19519,G__19520,G__19521,G__19522,G__19523,G__19524));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__19525 = a;
var G__19526 = b;
var G__19527 = c;
var G__19528 = d;
var G__19529 = e;
var G__19530 = f;
var G__19531 = g;
var G__19532 = h;
var G__19533 = i;
var G__19534 = j;
var G__19535 = k;
var G__19536 = l;
var G__19537 = m;
var G__19538 = n;
var G__19539 = o;
var G__19540 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__19525,G__19526,G__19527,G__19528,G__19529,G__19530,G__19531,G__19532,G__19533,G__19534,G__19535,G__19536,G__19537,G__19538,G__19539,G__19540) : self__.afn.call(null,G__19525,G__19526,G__19527,G__19528,G__19529,G__19530,G__19531,G__19532,G__19533,G__19534,G__19535,G__19536,G__19537,G__19538,G__19539,G__19540));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__19541 = a;
var G__19542 = b;
var G__19543 = c;
var G__19544 = d;
var G__19545 = e;
var G__19546 = f;
var G__19547 = g;
var G__19548 = h;
var G__19549 = i;
var G__19550 = j;
var G__19551 = k;
var G__19552 = l;
var G__19553 = m;
var G__19554 = n;
var G__19555 = o;
var G__19556 = p;
var G__19557 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__19541,G__19542,G__19543,G__19544,G__19545,G__19546,G__19547,G__19548,G__19549,G__19550,G__19551,G__19552,G__19553,G__19554,G__19555,G__19556,G__19557) : self__.afn.call(null,G__19541,G__19542,G__19543,G__19544,G__19545,G__19546,G__19547,G__19548,G__19549,G__19550,G__19551,G__19552,G__19553,G__19554,G__19555,G__19556,G__19557));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__19558 = a;
var G__19559 = b;
var G__19560 = c;
var G__19561 = d;
var G__19562 = e;
var G__19563 = f;
var G__19564 = g;
var G__19565 = h;
var G__19566 = i;
var G__19567 = j;
var G__19568 = k;
var G__19569 = l;
var G__19570 = m;
var G__19571 = n;
var G__19572 = o;
var G__19573 = p;
var G__19574 = q;
var G__19575 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__19558,G__19559,G__19560,G__19561,G__19562,G__19563,G__19564,G__19565,G__19566,G__19567,G__19568,G__19569,G__19570,G__19571,G__19572,G__19573,G__19574,G__19575) : self__.afn.call(null,G__19558,G__19559,G__19560,G__19561,G__19562,G__19563,G__19564,G__19565,G__19566,G__19567,G__19568,G__19569,G__19570,G__19571,G__19572,G__19573,G__19574,G__19575));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__19576 = a;
var G__19577 = b;
var G__19578 = c;
var G__19579 = d;
var G__19580 = e;
var G__19581 = f;
var G__19582 = g;
var G__19583 = h;
var G__19584 = i;
var G__19585 = j;
var G__19586 = k;
var G__19587 = l;
var G__19588 = m;
var G__19589 = n;
var G__19590 = o;
var G__19591 = p;
var G__19592 = q;
var G__19593 = r;
var G__19594 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__19576,G__19577,G__19578,G__19579,G__19580,G__19581,G__19582,G__19583,G__19584,G__19585,G__19586,G__19587,G__19588,G__19589,G__19590,G__19591,G__19592,G__19593,G__19594) : self__.afn.call(null,G__19576,G__19577,G__19578,G__19579,G__19580,G__19581,G__19582,G__19583,G__19584,G__19585,G__19586,G__19587,G__19588,G__19589,G__19590,G__19591,G__19592,G__19593,G__19594));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__19595 = a;
var G__19596 = b;
var G__19597 = c;
var G__19598 = d;
var G__19599 = e;
var G__19600 = f;
var G__19601 = g;
var G__19602 = h;
var G__19603 = i;
var G__19604 = j;
var G__19605 = k;
var G__19606 = l;
var G__19607 = m;
var G__19608 = n;
var G__19609 = o;
var G__19610 = p;
var G__19611 = q;
var G__19612 = r;
var G__19613 = s;
var G__19614 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__19595,G__19596,G__19597,G__19598,G__19599,G__19600,G__19601,G__19602,G__19603,G__19604,G__19605,G__19606,G__19607,G__19608,G__19609,G__19610,G__19611,G__19612,G__19613,G__19614) : self__.afn.call(null,G__19595,G__19596,G__19597,G__19598,G__19599,G__19600,G__19601,G__19602,G__19603,G__19604,G__19605,G__19606,G__19607,G__19608,G__19609,G__19610,G__19611,G__19612,G__19613,G__19614));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__19615 = self__.afn;
var G__19616 = a;
var G__19617 = b;
var G__19618 = c;
var G__19619 = d;
var G__19620 = e;
var G__19621 = f;
var G__19622 = g;
var G__19623 = h;
var G__19624 = i;
var G__19625 = j;
var G__19626 = k;
var G__19627 = l;
var G__19628 = m;
var G__19629 = n;
var G__19630 = o;
var G__19631 = p;
var G__19632 = q;
var G__19633 = r;
var G__19634 = s;
var G__19635 = t;
var G__19636 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__19615,G__19616,G__19617,G__19618,G__19619,G__19620,G__19621,G__19622,G__19623,G__19624,G__19625,G__19626,G__19627,G__19628,G__19629,G__19630,G__19631,G__19632,G__19633,G__19634,G__19635,G__19636) : cljs.core.apply.call(null,G__19615,G__19616,G__19617,G__19618,G__19619,G__19620,G__19621,G__19622,G__19623,G__19624,G__19625,G__19626,G__19627,G__19628,G__19629,G__19630,G__19631,G__19632,G__19633,G__19634,G__19635,G__19636));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__19641 = o;
if(G__19641){
var bit__4453__auto__ = (G__19641.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__4453__auto__) || (G__19641.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__19641.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__19641);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__19641);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__3760__auto__ = !((o == null));
if(and__3760__auto__){
var G__19645 = o;
if(G__19645){
var bit__4453__auto__ = (G__19645.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4453__auto__) || (G__19645.cljs$core$IMeta$)){
return true;
} else {
if((!G__19645.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19645);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__19645);
}
} else {
return and__3760__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__19648__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__19649 = ret;
var G__19650 = cljs.core.first(ks);
var G__19651 = cljs.core.next(ks);
coll = G__19649;
k = G__19650;
ks = G__19651;
continue;
} else {
return ret;
}
}
break;
}
};
var G__19648 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__19652__i = 0, G__19652__a = new Array(arguments.length -  2);
while (G__19652__i < G__19652__a.length) {G__19652__a[G__19652__i] = arguments[G__19652__i + 2]; ++G__19652__i;}
  ks = new cljs.core.IndexedSeq(G__19652__a,0);
} 
return G__19648__delegate.call(this,coll,k,ks);};
G__19648.cljs$lang$maxFixedArity = 2;
G__19648.cljs$lang$applyTo = (function (arglist__19653){
var coll = cljs.core.first(arglist__19653);
arglist__19653 = cljs.core.next(arglist__19653);
var k = cljs.core.first(arglist__19653);
var ks = cljs.core.rest(arglist__19653);
return G__19648__delegate(coll,k,ks);
});
G__19648.cljs$core$IFn$_invoke$arity$variadic = G__19648__delegate;
return G__19648;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__19654 = null;
if (arguments.length > 2) {
var G__19655__i = 0, G__19655__a = new Array(arguments.length -  2);
while (G__19655__i < G__19655__a.length) {G__19655__a[G__19655__i] = arguments[G__19655__i + 2]; ++G__19655__i;}
G__19654 = new cljs.core.IndexedSeq(G__19655__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__19654);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19657 = x;
if(G__19657){
var bit__4453__auto__ = (G__19657.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__4453__auto__) || (G__19657.cljs$core$ICollection$)){
return true;
} else {
if((!G__19657.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__19657);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__19657);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19659 = x;
if(G__19659){
var bit__4453__auto__ = (G__19659.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__4453__auto__) || (G__19659.cljs$core$ISet$)){
return true;
} else {
if((!G__19659.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__19659);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__19659);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__19661 = x;
if(G__19661){
var bit__4453__auto__ = (G__19661.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__4453__auto__) || (G__19661.cljs$core$IAssociative$)){
return true;
} else {
if((!G__19661.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__19661);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__19661);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__19663 = x;
if(G__19663){
var bit__4453__auto__ = (G__19663.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__4453__auto__) || (G__19663.cljs$core$ISequential$)){
return true;
} else {
if((!G__19663.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19663);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__19663);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__19665 = x;
if(G__19665){
var bit__4453__auto__ = (G__19665.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__4453__auto__) || (G__19665.cljs$core$ISorted$)){
return true;
} else {
if((!G__19665.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19665);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__19665);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__19667 = x;
if(G__19667){
var bit__4453__auto__ = (G__19667.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4453__auto__) || (G__19667.cljs$core$IReduce$)){
return true;
} else {
if((!G__19667.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19667);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__19667);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__19669 = x;
if(G__19669){
var bit__4453__auto__ = (G__19669.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4453__auto__) || (G__19669.cljs$core$IMap$)){
return true;
} else {
if((!G__19669.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19669);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__19669);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__19671 = x;
if(G__19671){
var bit__4453__auto__ = (G__19671.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__4453__auto__) || (G__19671.cljs$core$IVector$)){
return true;
} else {
if((!G__19671.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19671);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__19671);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__19673 = x;
if(G__19673){
var bit__4446__auto__ = (G__19673.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__4446__auto__) || (G__19673.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj19679 = {};
return obj19679;
});
var js_obj__1 = (function() { 
var G__19682__delegate = function (keyvals){
var G__19680 = goog.object.create;
var G__19681 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__19680,G__19681) : cljs.core.apply.call(null,G__19680,G__19681));
};
var G__19682 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__19683__i = 0, G__19683__a = new Array(arguments.length -  0);
while (G__19683__i < G__19683__a.length) {G__19683__a[G__19683__i] = arguments[G__19683__i + 0]; ++G__19683__i;}
  keyvals = new cljs.core.IndexedSeq(G__19683__a,0);
} 
return G__19682__delegate.call(this,keyvals);};
G__19682.cljs$lang$maxFixedArity = 0;
G__19682.cljs$lang$applyTo = (function (arglist__19684){
var keyvals = cljs.core.seq(arglist__19684);
return G__19682__delegate(keyvals);
});
G__19682.cljs$core$IFn$_invoke$arity$variadic = G__19682__delegate;
return G__19682;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__19685 = null;
if (arguments.length > 0) {
var G__19686__i = 0, G__19686__a = new Array(arguments.length -  0);
while (G__19686__i < G__19686__a.length) {G__19686__a[G__19686__i] = arguments[G__19686__i + 0]; ++G__19686__i;}
G__19685 = new cljs.core.IndexedSeq(G__19686__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__19685);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__19689_19691 = obj;
var G__19690_19692 = ((function (G__19689_19691,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__19689_19691,keys))
;
goog.object.forEach(G__19689_19691,G__19690_19692);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19693 = (i__$1 + (1));
var G__19694 = (j__$1 + (1));
var G__19695 = (len__$1 - (1));
i__$1 = G__19693;
j__$1 = G__19694;
len__$1 = G__19695;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__19696 = (i__$1 - (1));
var G__19697 = (j__$1 - (1));
var G__19698 = (len__$1 - (1));
i__$1 = G__19696;
j__$1 = G__19697;
len__$1 = G__19698;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj19700 = {};
return obj19700;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__19702 = s;
if(G__19702){
var bit__4453__auto__ = (G__19702.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4453__auto__) || (G__19702.cljs$core$ISeq$)){
return true;
} else {
if((!G__19702.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19702);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__19702);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__19704 = s;
if(G__19704){
var bit__4453__auto__ = (G__19704.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__4453__auto__) || (G__19704.cljs$core$ISeqable$)){
return true;
} else {
if((!G__19704.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19704);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__19704);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__3772__auto__ = cljs.core.fn_QMARK_(f);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var G__19708 = f;
if(G__19708){
var bit__4453__auto__ = (G__19708.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__4453__auto__) || (G__19708.cljs$core$IFn$)){
return true;
} else {
if((!G__19708.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19708);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__19708);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__19721 = n;
return isNaN(G__19721);
})())) && (!((n === Infinity))) && (((function (){var G__19722 = n;
return parseFloat(G__19722);
})() === (function (){var G__19723 = n;
var G__19724 = (10);
return parseInt(G__19723,G__19724);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__19725__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__19726 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__19727 = etc;
s = G__19726;
xs = G__19727;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__19725 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19728__i = 0, G__19728__a = new Array(arguments.length -  2);
while (G__19728__i < G__19728__a.length) {G__19728__a[G__19728__i] = arguments[G__19728__i + 2]; ++G__19728__i;}
  more = new cljs.core.IndexedSeq(G__19728__a,0);
} 
return G__19725__delegate.call(this,x,y,more);};
G__19725.cljs$lang$maxFixedArity = 2;
G__19725.cljs$lang$applyTo = (function (arglist__19729){
var x = cljs.core.first(arglist__19729);
arglist__19729 = cljs.core.next(arglist__19729);
var y = cljs.core.first(arglist__19729);
var more = cljs.core.rest(arglist__19729);
return G__19725__delegate(x,y,more);
});
G__19725.cljs$core$IFn$_invoke$arity$variadic = G__19725__delegate;
return G__19725;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__19730 = null;
if (arguments.length > 2) {
var G__19731__i = 0, G__19731__a = new Array(arguments.length -  2);
while (G__19731__i < G__19731__a.length) {G__19731__a[G__19731__i] = arguments[G__19731__i + 2]; ++G__19731__i;}
G__19730 = new cljs.core.IndexedSeq(G__19731__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19730);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__19735 = x;
if(G__19735){
var bit__4446__auto__ = (G__19735.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__4446__auto__) || (G__19735.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__19736 = x;
var G__19737 = y;
return goog.array.defaultCompare(G__19736,G__19737);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__19742 = xs;
var G__19743 = ys;
var G__19744 = len;
var G__19745 = (n + (1));
xs = G__19742;
ys = G__19743;
len = G__19744;
n = G__19745;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__19750 = x;
var G__19751 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19750,G__19751) : f.call(null,G__19750,G__19751));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__19752 = y;
var G__19753 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19752,G__19753) : f.call(null,G__19752,G__19753));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__19759 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__19759) : cljs.core.to_array.call(null,G__19759));
})();
var G__19760_19762 = a;
var G__19761_19763 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__19760_19762,G__19761_19763);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__19769 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19769) : keyfn.call(null,G__19769));
})(),(function (){var G__19770 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__19770) : keyfn.call(null,G__19770));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__19776 = f;
var G__19777 = cljs.core.first(s);
var G__19778 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__19776,G__19777,G__19778) : cljs.core.reduce.call(null,G__19776,G__19777,G__19778));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__19779 = val__$1;
var G__19780 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19779,G__19780) : f.call(null,G__19779,G__19780));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__19781 = nval;
var G__19782 = cljs.core.next(coll__$1);
val__$1 = G__19781;
coll__$1 = G__19782;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__19786 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__19786) : cljs.core.to_array.call(null,G__19786));
})();
var G__19787_19789 = a;
goog.array.shuffle(G__19787_19789);

var G__19788 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__19788) : cljs.core.vec.call(null,G__19788));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__19792 = coll;
if(G__19792){
var bit__4446__auto__ = (G__19792.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4446__auto__) || (G__19792.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__19793 = coll;
if(G__19793){
var bit__4446__auto__ = (G__19793.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__4446__auto__) || (G__19793.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__19802 = null;
var G__19802__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__19802__1 = (function (x){
var G__19799 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__19799) : cf.call(null,G__19799));
});
var G__19802__2 = (function (x,y){
var G__19800 = x;
var G__19801 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__19800,G__19801) : f.call(null,G__19800,G__19801));
});
G__19802 = function(x,y){
switch(arguments.length){
case 0:
return G__19802__0.call(this);
case 1:
return G__19802__1.call(this,x);
case 2:
return G__19802__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__19802.cljs$core$IFn$_invoke$arity$0 = G__19802__0;
G__19802.cljs$core$IFn$_invoke$arity$1 = G__19802__1;
G__19802.cljs$core$IFn$_invoke$arity$2 = G__19802__2;
return G__19802;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__19809 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__19809) : xform.call(null,G__19809));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__19810 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__19810) : f__$1.call(null,G__19810));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__19811__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__19811 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19812__i = 0, G__19812__a = new Array(arguments.length -  2);
while (G__19812__i < G__19812__a.length) {G__19812__a[G__19812__i] = arguments[G__19812__i + 2]; ++G__19812__i;}
  more = new cljs.core.IndexedSeq(G__19812__a,0);
} 
return G__19811__delegate.call(this,x,y,more);};
G__19811.cljs$lang$maxFixedArity = 2;
G__19811.cljs$lang$applyTo = (function (arglist__19813){
var x = cljs.core.first(arglist__19813);
arglist__19813 = cljs.core.next(arglist__19813);
var y = cljs.core.first(arglist__19813);
var more = cljs.core.rest(arglist__19813);
return G__19811__delegate(x,y,more);
});
G__19811.cljs$core$IFn$_invoke$arity$variadic = G__19811__delegate;
return G__19811;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__19814 = null;
if (arguments.length > 2) {
var G__19815__i = 0, G__19815__a = new Array(arguments.length -  2);
while (G__19815__i < G__19815__a.length) {G__19815__a[G__19815__i] = arguments[G__19815__i + 2]; ++G__19815__i;}
G__19814 = new cljs.core.IndexedSeq(G__19815__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19814);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__19816__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__19816 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19817__i = 0, G__19817__a = new Array(arguments.length -  2);
while (G__19817__i < G__19817__a.length) {G__19817__a[G__19817__i] = arguments[G__19817__i + 2]; ++G__19817__i;}
  more = new cljs.core.IndexedSeq(G__19817__a,0);
} 
return G__19816__delegate.call(this,x,y,more);};
G__19816.cljs$lang$maxFixedArity = 2;
G__19816.cljs$lang$applyTo = (function (arglist__19818){
var x = cljs.core.first(arglist__19818);
arglist__19818 = cljs.core.next(arglist__19818);
var y = cljs.core.first(arglist__19818);
var more = cljs.core.rest(arglist__19818);
return G__19816__delegate(x,y,more);
});
G__19816.cljs$core$IFn$_invoke$arity$variadic = G__19816__delegate;
return G__19816;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__19819 = null;
if (arguments.length > 2) {
var G__19820__i = 0, G__19820__a = new Array(arguments.length -  2);
while (G__19820__i < G__19820__a.length) {G__19820__a[G__19820__i] = arguments[G__19820__i + 2]; ++G__19820__i;}
G__19819 = new cljs.core.IndexedSeq(G__19820__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19819);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__19821__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__19821 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19822__i = 0, G__19822__a = new Array(arguments.length -  2);
while (G__19822__i < G__19822__a.length) {G__19822__a[G__19822__i] = arguments[G__19822__i + 2]; ++G__19822__i;}
  more = new cljs.core.IndexedSeq(G__19822__a,0);
} 
return G__19821__delegate.call(this,x,y,more);};
G__19821.cljs$lang$maxFixedArity = 2;
G__19821.cljs$lang$applyTo = (function (arglist__19823){
var x = cljs.core.first(arglist__19823);
arglist__19823 = cljs.core.next(arglist__19823);
var y = cljs.core.first(arglist__19823);
var more = cljs.core.rest(arglist__19823);
return G__19821__delegate(x,y,more);
});
G__19821.cljs$core$IFn$_invoke$arity$variadic = G__19821__delegate;
return G__19821;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__19824 = null;
if (arguments.length > 2) {
var G__19825__i = 0, G__19825__a = new Array(arguments.length -  2);
while (G__19825__i < G__19825__a.length) {G__19825__a[G__19825__i] = arguments[G__19825__i + 2]; ++G__19825__i;}
G__19824 = new cljs.core.IndexedSeq(G__19825__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19824);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__19830__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19830 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19831__i = 0, G__19831__a = new Array(arguments.length -  2);
while (G__19831__i < G__19831__a.length) {G__19831__a[G__19831__i] = arguments[G__19831__i + 2]; ++G__19831__i;}
  more = new cljs.core.IndexedSeq(G__19831__a,0);
} 
return G__19830__delegate.call(this,x,y,more);};
G__19830.cljs$lang$maxFixedArity = 2;
G__19830.cljs$lang$applyTo = (function (arglist__19832){
var x = cljs.core.first(arglist__19832);
arglist__19832 = cljs.core.next(arglist__19832);
var y = cljs.core.first(arglist__19832);
var more = cljs.core.rest(arglist__19832);
return G__19830__delegate(x,y,more);
});
G__19830.cljs$core$IFn$_invoke$arity$variadic = G__19830__delegate;
return G__19830;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__19833 = null;
if (arguments.length > 2) {
var G__19834__i = 0, G__19834__a = new Array(arguments.length -  2);
while (G__19834__i < G__19834__a.length) {G__19834__a[G__19834__i] = arguments[G__19834__i + 2]; ++G__19834__i;}
G__19833 = new cljs.core.IndexedSeq(G__19834__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19833);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__19835__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__19836 = y;
var G__19837 = cljs.core.first(more);
var G__19838 = cljs.core.next(more);
x = G__19836;
y = G__19837;
more = G__19838;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19835 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19839__i = 0, G__19839__a = new Array(arguments.length -  2);
while (G__19839__i < G__19839__a.length) {G__19839__a[G__19839__i] = arguments[G__19839__i + 2]; ++G__19839__i;}
  more = new cljs.core.IndexedSeq(G__19839__a,0);
} 
return G__19835__delegate.call(this,x,y,more);};
G__19835.cljs$lang$maxFixedArity = 2;
G__19835.cljs$lang$applyTo = (function (arglist__19840){
var x = cljs.core.first(arglist__19840);
arglist__19840 = cljs.core.next(arglist__19840);
var y = cljs.core.first(arglist__19840);
var more = cljs.core.rest(arglist__19840);
return G__19835__delegate(x,y,more);
});
G__19835.cljs$core$IFn$_invoke$arity$variadic = G__19835__delegate;
return G__19835;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__19841 = null;
if (arguments.length > 2) {
var G__19842__i = 0, G__19842__a = new Array(arguments.length -  2);
while (G__19842__i < G__19842__a.length) {G__19842__a[G__19842__i] = arguments[G__19842__i + 2]; ++G__19842__i;}
G__19841 = new cljs.core.IndexedSeq(G__19842__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19841);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__19843__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__19844 = y;
var G__19845 = cljs.core.first(more);
var G__19846 = cljs.core.next(more);
x = G__19844;
y = G__19845;
more = G__19846;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19843 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19847__i = 0, G__19847__a = new Array(arguments.length -  2);
while (G__19847__i < G__19847__a.length) {G__19847__a[G__19847__i] = arguments[G__19847__i + 2]; ++G__19847__i;}
  more = new cljs.core.IndexedSeq(G__19847__a,0);
} 
return G__19843__delegate.call(this,x,y,more);};
G__19843.cljs$lang$maxFixedArity = 2;
G__19843.cljs$lang$applyTo = (function (arglist__19848){
var x = cljs.core.first(arglist__19848);
arglist__19848 = cljs.core.next(arglist__19848);
var y = cljs.core.first(arglist__19848);
var more = cljs.core.rest(arglist__19848);
return G__19843__delegate(x,y,more);
});
G__19843.cljs$core$IFn$_invoke$arity$variadic = G__19843__delegate;
return G__19843;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__19849 = null;
if (arguments.length > 2) {
var G__19850__i = 0, G__19850__a = new Array(arguments.length -  2);
while (G__19850__i < G__19850__a.length) {G__19850__a[G__19850__i] = arguments[G__19850__i + 2]; ++G__19850__i;}
G__19849 = new cljs.core.IndexedSeq(G__19850__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19849);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__19851__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__19852 = y;
var G__19853 = cljs.core.first(more);
var G__19854 = cljs.core.next(more);
x = G__19852;
y = G__19853;
more = G__19854;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19851 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19855__i = 0, G__19855__a = new Array(arguments.length -  2);
while (G__19855__i < G__19855__a.length) {G__19855__a[G__19855__i] = arguments[G__19855__i + 2]; ++G__19855__i;}
  more = new cljs.core.IndexedSeq(G__19855__a,0);
} 
return G__19851__delegate.call(this,x,y,more);};
G__19851.cljs$lang$maxFixedArity = 2;
G__19851.cljs$lang$applyTo = (function (arglist__19856){
var x = cljs.core.first(arglist__19856);
arglist__19856 = cljs.core.next(arglist__19856);
var y = cljs.core.first(arglist__19856);
var more = cljs.core.rest(arglist__19856);
return G__19851__delegate(x,y,more);
});
G__19851.cljs$core$IFn$_invoke$arity$variadic = G__19851__delegate;
return G__19851;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__19857 = null;
if (arguments.length > 2) {
var G__19858__i = 0, G__19858__a = new Array(arguments.length -  2);
while (G__19858__i < G__19858__a.length) {G__19858__a[G__19858__i] = arguments[G__19858__i + 2]; ++G__19858__i;}
G__19857 = new cljs.core.IndexedSeq(G__19858__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19857);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__19859__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__19860 = y;
var G__19861 = cljs.core.first(more);
var G__19862 = cljs.core.next(more);
x = G__19860;
y = G__19861;
more = G__19862;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19859 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19863__i = 0, G__19863__a = new Array(arguments.length -  2);
while (G__19863__i < G__19863__a.length) {G__19863__a[G__19863__i] = arguments[G__19863__i + 2]; ++G__19863__i;}
  more = new cljs.core.IndexedSeq(G__19863__a,0);
} 
return G__19859__delegate.call(this,x,y,more);};
G__19859.cljs$lang$maxFixedArity = 2;
G__19859.cljs$lang$applyTo = (function (arglist__19864){
var x = cljs.core.first(arglist__19864);
arglist__19864 = cljs.core.next(arglist__19864);
var y = cljs.core.first(arglist__19864);
var more = cljs.core.rest(arglist__19864);
return G__19859__delegate(x,y,more);
});
G__19859.cljs$core$IFn$_invoke$arity$variadic = G__19859__delegate;
return G__19859;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__19865 = null;
if (arguments.length > 2) {
var G__19866__i = 0, G__19866__a = new Array(arguments.length -  2);
while (G__19866__i < G__19866__a.length) {G__19866__a[G__19866__i] = arguments[G__19866__i + 2]; ++G__19866__i;}
G__19865 = new cljs.core.IndexedSeq(G__19866__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19865);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__4089__auto__ = x;
var y__4090__auto__ = y;
return ((x__4089__auto__ > y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
});
var max__3 = (function() { 
var G__19867__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__4089__auto__ = x;
var y__4090__auto__ = y;
return ((x__4089__auto__ > y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
})(),more);
};
var G__19867 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19868__i = 0, G__19868__a = new Array(arguments.length -  2);
while (G__19868__i < G__19868__a.length) {G__19868__a[G__19868__i] = arguments[G__19868__i + 2]; ++G__19868__i;}
  more = new cljs.core.IndexedSeq(G__19868__a,0);
} 
return G__19867__delegate.call(this,x,y,more);};
G__19867.cljs$lang$maxFixedArity = 2;
G__19867.cljs$lang$applyTo = (function (arglist__19869){
var x = cljs.core.first(arglist__19869);
arglist__19869 = cljs.core.next(arglist__19869);
var y = cljs.core.first(arglist__19869);
var more = cljs.core.rest(arglist__19869);
return G__19867__delegate(x,y,more);
});
G__19867.cljs$core$IFn$_invoke$arity$variadic = G__19867__delegate;
return G__19867;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__19870 = null;
if (arguments.length > 2) {
var G__19871__i = 0, G__19871__a = new Array(arguments.length -  2);
while (G__19871__i < G__19871__a.length) {G__19871__a[G__19871__i] = arguments[G__19871__i + 2]; ++G__19871__i;}
G__19870 = new cljs.core.IndexedSeq(G__19871__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19870);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__4096__auto__ = x;
var y__4097__auto__ = y;
return ((x__4096__auto__ < y__4097__auto__) ? x__4096__auto__ : y__4097__auto__);
});
var min__3 = (function() { 
var G__19872__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__4096__auto__ = x;
var y__4097__auto__ = y;
return ((x__4096__auto__ < y__4097__auto__) ? x__4096__auto__ : y__4097__auto__);
})(),more);
};
var G__19872 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19873__i = 0, G__19873__a = new Array(arguments.length -  2);
while (G__19873__i < G__19873__a.length) {G__19873__a[G__19873__i] = arguments[G__19873__i + 2]; ++G__19873__i;}
  more = new cljs.core.IndexedSeq(G__19873__a,0);
} 
return G__19872__delegate.call(this,x,y,more);};
G__19872.cljs$lang$maxFixedArity = 2;
G__19872.cljs$lang$applyTo = (function (arglist__19874){
var x = cljs.core.first(arglist__19874);
arglist__19874 = cljs.core.next(arglist__19874);
var y = cljs.core.first(arglist__19874);
var more = cljs.core.rest(arglist__19874);
return G__19872__delegate(x,y,more);
});
G__19872.cljs$core$IFn$_invoke$arity$variadic = G__19872__delegate;
return G__19872;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__19875 = null;
if (arguments.length > 2) {
var G__19876__i = 0, G__19876__a = new Array(arguments.length -  2);
while (G__19876__i < G__19876__a.length) {G__19876__a[G__19876__i] = arguments[G__19876__i + 2]; ++G__19876__i;}
G__19875 = new cljs.core.IndexedSeq(G__19876__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19875);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__19877__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__19877 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19878__i = 0, G__19878__a = new Array(arguments.length -  2);
while (G__19878__i < G__19878__a.length) {G__19878__a[G__19878__i] = arguments[G__19878__i + 2]; ++G__19878__i;}
  more = new cljs.core.IndexedSeq(G__19878__a,0);
} 
return G__19877__delegate.call(this,x,y,more);};
G__19877.cljs$lang$maxFixedArity = 2;
G__19877.cljs$lang$applyTo = (function (arglist__19879){
var x = cljs.core.first(arglist__19879);
arglist__19879 = cljs.core.next(arglist__19879);
var y = cljs.core.first(arglist__19879);
var more = cljs.core.rest(arglist__19879);
return G__19877__delegate(x,y,more);
});
G__19877.cljs$core$IFn$_invoke$arity$variadic = G__19877__delegate;
return G__19877;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__19880 = null;
if (arguments.length > 2) {
var G__19881__i = 0, G__19881__a = new Array(arguments.length -  2);
while (G__19881__i < G__19881__a.length) {G__19881__a[G__19881__i] = arguments[G__19881__i + 2]; ++G__19881__i;}
G__19880 = new cljs.core.IndexedSeq(G__19881__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19880);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__19882__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__19882 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19883__i = 0, G__19883__a = new Array(arguments.length -  2);
while (G__19883__i < G__19883__a.length) {G__19883__a[G__19883__i] = arguments[G__19883__i + 2]; ++G__19883__i;}
  more = new cljs.core.IndexedSeq(G__19883__a,0);
} 
return G__19882__delegate.call(this,x,y,more);};
G__19882.cljs$lang$maxFixedArity = 2;
G__19882.cljs$lang$applyTo = (function (arglist__19884){
var x = cljs.core.first(arglist__19884);
arglist__19884 = cljs.core.next(arglist__19884);
var y = cljs.core.first(arglist__19884);
var more = cljs.core.rest(arglist__19884);
return G__19882__delegate(x,y,more);
});
G__19882.cljs$core$IFn$_invoke$arity$variadic = G__19882__delegate;
return G__19882;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__19885 = null;
if (arguments.length > 2) {
var G__19886__i = 0, G__19886__a = new Array(arguments.length -  2);
while (G__19886__i < G__19886__a.length) {G__19886__a[G__19886__i] = arguments[G__19886__i + 2]; ++G__19886__i;}
G__19885 = new cljs.core.IndexedSeq(G__19886__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__19891__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__19891 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19892__i = 0, G__19892__a = new Array(arguments.length -  2);
while (G__19892__i < G__19892__a.length) {G__19892__a[G__19892__i] = arguments[G__19892__i + 2]; ++G__19892__i;}
  more = new cljs.core.IndexedSeq(G__19892__a,0);
} 
return G__19891__delegate.call(this,x,y,more);};
G__19891.cljs$lang$maxFixedArity = 2;
G__19891.cljs$lang$applyTo = (function (arglist__19893){
var x = cljs.core.first(arglist__19893);
arglist__19893 = cljs.core.next(arglist__19893);
var y = cljs.core.first(arglist__19893);
var more = cljs.core.rest(arglist__19893);
return G__19891__delegate(x,y,more);
});
G__19891.cljs$core$IFn$_invoke$arity$variadic = G__19891__delegate;
return G__19891;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__19894 = null;
if (arguments.length > 2) {
var G__19895__i = 0, G__19895__a = new Array(arguments.length -  2);
while (G__19895__i < G__19895__a.length) {G__19895__a[G__19895__i] = arguments[G__19895__i + 2]; ++G__19895__i;}
G__19894 = new cljs.core.IndexedSeq(G__19895__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19894);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__19896__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__19896 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19897__i = 0, G__19897__a = new Array(arguments.length -  2);
while (G__19897__i < G__19897__a.length) {G__19897__a[G__19897__i] = arguments[G__19897__i + 2]; ++G__19897__i;}
  more = new cljs.core.IndexedSeq(G__19897__a,0);
} 
return G__19896__delegate.call(this,x,y,more);};
G__19896.cljs$lang$maxFixedArity = 2;
G__19896.cljs$lang$applyTo = (function (arglist__19898){
var x = cljs.core.first(arglist__19898);
arglist__19898 = cljs.core.next(arglist__19898);
var y = cljs.core.first(arglist__19898);
var more = cljs.core.rest(arglist__19898);
return G__19896__delegate(x,y,more);
});
G__19896.cljs$core$IFn$_invoke$arity$variadic = G__19896__delegate;
return G__19896;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__19899 = null;
if (arguments.length > 2) {
var G__19900__i = 0, G__19900__a = new Array(arguments.length -  2);
while (G__19900__i < G__19900__a.length) {G__19900__a[G__19900__i] = arguments[G__19900__i + 2]; ++G__19900__i;}
G__19899 = new cljs.core.IndexedSeq(G__19900__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19899);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__19901__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__19901 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19902__i = 0, G__19902__a = new Array(arguments.length -  2);
while (G__19902__i < G__19902__a.length) {G__19902__a[G__19902__i] = arguments[G__19902__i + 2]; ++G__19902__i;}
  more = new cljs.core.IndexedSeq(G__19902__a,0);
} 
return G__19901__delegate.call(this,x,y,more);};
G__19901.cljs$lang$maxFixedArity = 2;
G__19901.cljs$lang$applyTo = (function (arglist__19903){
var x = cljs.core.first(arglist__19903);
arglist__19903 = cljs.core.next(arglist__19903);
var y = cljs.core.first(arglist__19903);
var more = cljs.core.rest(arglist__19903);
return G__19901__delegate(x,y,more);
});
G__19901.cljs$core$IFn$_invoke$arity$variadic = G__19901__delegate;
return G__19901;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__19904 = null;
if (arguments.length > 2) {
var G__19905__i = 0, G__19905__a = new Array(arguments.length -  2);
while (G__19905__i < G__19905__a.length) {G__19905__a[G__19905__i] = arguments[G__19905__i + 2]; ++G__19905__i;}
G__19904 = new cljs.core.IndexedSeq(G__19905__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19904);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__19908 = x;
var G__19909 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__19908,G__19909) : cljs.core.mod.call(null,G__19908,G__19909));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__19910__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__19910 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19911__i = 0, G__19911__a = new Array(arguments.length -  2);
while (G__19911__i < G__19911__a.length) {G__19911__a[G__19911__i] = arguments[G__19911__i + 2]; ++G__19911__i;}
  more = new cljs.core.IndexedSeq(G__19911__a,0);
} 
return G__19910__delegate.call(this,x,y,more);};
G__19910.cljs$lang$maxFixedArity = 2;
G__19910.cljs$lang$applyTo = (function (arglist__19912){
var x = cljs.core.first(arglist__19912);
arglist__19912 = cljs.core.next(arglist__19912);
var y = cljs.core.first(arglist__19912);
var more = cljs.core.rest(arglist__19912);
return G__19910__delegate(x,y,more);
});
G__19910.cljs$core$IFn$_invoke$arity$variadic = G__19910__delegate;
return G__19910;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__19913 = null;
if (arguments.length > 2) {
var G__19914__i = 0, G__19914__a = new Array(arguments.length -  2);
while (G__19914__i < G__19914__a.length) {G__19914__a[G__19914__i] = arguments[G__19914__i + 2]; ++G__19914__i;}
G__19913 = new cljs.core.IndexedSeq(G__19914__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19913);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__19915__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__19915 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19916__i = 0, G__19916__a = new Array(arguments.length -  2);
while (G__19916__i < G__19916__a.length) {G__19916__a[G__19916__i] = arguments[G__19916__i + 2]; ++G__19916__i;}
  more = new cljs.core.IndexedSeq(G__19916__a,0);
} 
return G__19915__delegate.call(this,x,y,more);};
G__19915.cljs$lang$maxFixedArity = 2;
G__19915.cljs$lang$applyTo = (function (arglist__19917){
var x = cljs.core.first(arglist__19917);
arglist__19917 = cljs.core.next(arglist__19917);
var y = cljs.core.first(arglist__19917);
var more = cljs.core.rest(arglist__19917);
return G__19915__delegate(x,y,more);
});
G__19915.cljs$core$IFn$_invoke$arity$variadic = G__19915__delegate;
return G__19915;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__19918 = null;
if (arguments.length > 2) {
var G__19919__i = 0, G__19919__a = new Array(arguments.length -  2);
while (G__19919__i < G__19919__a.length) {G__19919__a[G__19919__i] = arguments[G__19919__i + 2]; ++G__19919__i;}
G__19918 = new cljs.core.IndexedSeq(G__19919__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19918);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__19922 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__19922) : Math.floor.call(null,G__19922));
} else {
var G__19923 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__19923) : Math.ceil.call(null,G__19923));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__19924__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__19924 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19925__i = 0, G__19925__a = new Array(arguments.length -  2);
while (G__19925__i < G__19925__a.length) {G__19925__a[G__19925__i] = arguments[G__19925__i + 2]; ++G__19925__i;}
  more = new cljs.core.IndexedSeq(G__19925__a,0);
} 
return G__19924__delegate.call(this,x,y,more);};
G__19924.cljs$lang$maxFixedArity = 2;
G__19924.cljs$lang$applyTo = (function (arglist__19926){
var x = cljs.core.first(arglist__19926);
arglist__19926 = cljs.core.next(arglist__19926);
var y = cljs.core.first(arglist__19926);
var more = cljs.core.rest(arglist__19926);
return G__19924__delegate(x,y,more);
});
G__19924.cljs$core$IFn$_invoke$arity$variadic = G__19924__delegate;
return G__19924;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__19927 = null;
if (arguments.length > 2) {
var G__19928__i = 0, G__19928__a = new Array(arguments.length -  2);
while (G__19928__i < G__19928__a.length) {G__19928__a[G__19928__i] = arguments[G__19928__i + 2]; ++G__19928__i;}
G__19927 = new cljs.core.IndexedSeq(G__19928__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19927);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__19929__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__19929 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19930__i = 0, G__19930__a = new Array(arguments.length -  2);
while (G__19930__i < G__19930__a.length) {G__19930__a[G__19930__i] = arguments[G__19930__i + 2]; ++G__19930__i;}
  more = new cljs.core.IndexedSeq(G__19930__a,0);
} 
return G__19929__delegate.call(this,x,y,more);};
G__19929.cljs$lang$maxFixedArity = 2;
G__19929.cljs$lang$applyTo = (function (arglist__19931){
var x = cljs.core.first(arglist__19931);
arglist__19931 = cljs.core.next(arglist__19931);
var y = cljs.core.first(arglist__19931);
var more = cljs.core.rest(arglist__19931);
return G__19929__delegate(x,y,more);
});
G__19929.cljs$core$IFn$_invoke$arity$variadic = G__19929__delegate;
return G__19929;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__19932 = null;
if (arguments.length > 2) {
var G__19933__i = 0, G__19933__a = new Array(arguments.length -  2);
while (G__19933__i < G__19933__a.length) {G__19933__a[G__19933__i] = arguments[G__19933__i + 2]; ++G__19933__i;}
G__19932 = new cljs.core.IndexedSeq(G__19933__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19932);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__19934__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__19934 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19935__i = 0, G__19935__a = new Array(arguments.length -  2);
while (G__19935__i < G__19935__a.length) {G__19935__a[G__19935__i] = arguments[G__19935__i + 2]; ++G__19935__i;}
  more = new cljs.core.IndexedSeq(G__19935__a,0);
} 
return G__19934__delegate.call(this,x,y,more);};
G__19934.cljs$lang$maxFixedArity = 2;
G__19934.cljs$lang$applyTo = (function (arglist__19936){
var x = cljs.core.first(arglist__19936);
arglist__19936 = cljs.core.next(arglist__19936);
var y = cljs.core.first(arglist__19936);
var more = cljs.core.rest(arglist__19936);
return G__19934__delegate(x,y,more);
});
G__19934.cljs$core$IFn$_invoke$arity$variadic = G__19934__delegate;
return G__19934;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__19937 = null;
if (arguments.length > 2) {
var G__19938__i = 0, G__19938__a = new Array(arguments.length -  2);
while (G__19938__i < G__19938__a.length) {G__19938__a[G__19938__i] = arguments[G__19938__i + 2]; ++G__19938__i;}
G__19937 = new cljs.core.IndexedSeq(G__19938__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19937);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__19939__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__19939 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19940__i = 0, G__19940__a = new Array(arguments.length -  2);
while (G__19940__i < G__19940__a.length) {G__19940__a[G__19940__i] = arguments[G__19940__i + 2]; ++G__19940__i;}
  more = new cljs.core.IndexedSeq(G__19940__a,0);
} 
return G__19939__delegate.call(this,x,y,more);};
G__19939.cljs$lang$maxFixedArity = 2;
G__19939.cljs$lang$applyTo = (function (arglist__19941){
var x = cljs.core.first(arglist__19941);
arglist__19941 = cljs.core.next(arglist__19941);
var y = cljs.core.first(arglist__19941);
var more = cljs.core.rest(arglist__19941);
return G__19939__delegate(x,y,more);
});
G__19939.cljs$core$IFn$_invoke$arity$variadic = G__19939__delegate;
return G__19939;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__19942 = null;
if (arguments.length > 2) {
var G__19943__i = 0, G__19943__a = new Array(arguments.length -  2);
while (G__19943__i < G__19943__a.length) {G__19943__a[G__19943__i] = arguments[G__19943__i + 2]; ++G__19943__i;}
G__19942 = new cljs.core.IndexedSeq(G__19943__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19942);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__19948__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__19949 = y;
var G__19950 = cljs.core.first(more);
var G__19951 = cljs.core.next(more);
x = G__19949;
y = G__19950;
more = G__19951;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__19948 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__19952__i = 0, G__19952__a = new Array(arguments.length -  2);
while (G__19952__i < G__19952__a.length) {G__19952__a[G__19952__i] = arguments[G__19952__i + 2]; ++G__19952__i;}
  more = new cljs.core.IndexedSeq(G__19952__a,0);
} 
return G__19948__delegate.call(this,x,y,more);};
G__19948.cljs$lang$maxFixedArity = 2;
G__19948.cljs$lang$applyTo = (function (arglist__19953){
var x = cljs.core.first(arglist__19953);
arglist__19953 = cljs.core.next(arglist__19953);
var y = cljs.core.first(arglist__19953);
var more = cljs.core.rest(arglist__19953);
return G__19948__delegate(x,y,more);
});
G__19948.cljs$core$IFn$_invoke$arity$variadic = G__19948__delegate;
return G__19948;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__19954 = null;
if (arguments.length > 2) {
var G__19955__i = 0, G__19955__a = new Array(arguments.length -  2);
while (G__19955__i < G__19955__a.length) {G__19955__a[G__19955__i] = arguments[G__19955__i + 2]; ++G__19955__i;}
G__19954 = new cljs.core.IndexedSeq(G__19955__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__19954);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__19956 = (n__$1 - (1));
var G__19957 = cljs.core.next(xs);
n__$1 = G__19956;
xs = G__19957;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__19961 = x;
return goog.string.buildString(G__19961);
}
});
var str__2 = (function() { 
var G__19962__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__19963 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__19964 = cljs.core.next(more);
sb = G__19963;
more = G__19964;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__19962 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__19965__i = 0, G__19965__a = new Array(arguments.length -  1);
while (G__19965__i < G__19965__a.length) {G__19965__a[G__19965__i] = arguments[G__19965__i + 1]; ++G__19965__i;}
  ys = new cljs.core.IndexedSeq(G__19965__a,0);
} 
return G__19962__delegate.call(this,x,ys);};
G__19962.cljs$lang$maxFixedArity = 1;
G__19962.cljs$lang$applyTo = (function (arglist__19966){
var x = cljs.core.first(arglist__19966);
var ys = cljs.core.rest(arglist__19966);
return G__19962__delegate(x,ys);
});
G__19962.cljs$core$IFn$_invoke$arity$variadic = G__19962__delegate;
return G__19962;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__19967 = null;
if (arguments.length > 1) {
var G__19968__i = 0, G__19968__a = new Array(arguments.length -  1);
while (G__19968__i < G__19968__a.length) {G__19968__a[G__19968__i] = arguments[G__19968__i + 1]; ++G__19968__i;}
G__19967 = new cljs.core.IndexedSeq(G__19968__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__19967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__19969 = cljs.core.next(xs);
var G__19970 = cljs.core.next(ys);
xs = G__19969;
ys = G__19970;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__19971 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__19972 = cljs.core.next(s);
res = G__19971;
s = G__19972;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__19977 = ((h + (cljs.core.hash((function (){var G__19975 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__19975) : cljs.core.key.call(null,G__19975));
})()) ^ cljs.core.hash((function (){var G__19976 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__19976) : cljs.core.val.call(null,G__19976));
})()))) % (4503599627370496));
var G__19978 = cljs.core.next(s);
h = G__19977;
s = G__19978;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__19979 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__19980 = cljs.core.next(s__$1);
h = G__19979;
s__$1 = G__19980;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__19991_20001 = cljs.core.seq(fn_map);
var chunk__19992_20002 = null;
var count__19993_20003 = (0);
var i__19994_20004 = (0);
while(true){
if((i__19994_20004 < count__19993_20003)){
var vec__19995_20005 = chunk__19992_20002.cljs$core$IIndexed$_nth$arity$2(null,i__19994_20004);
var key_name_20006 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19995_20005,(0),null);
var f_20007 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19995_20005,(1),null);
var str_name_20008 = (function (){var G__19996 = key_name_20006;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__19996) : cljs.core.name.call(null,G__19996));
})();
(obj[str_name_20008] = f_20007);

var G__20009 = seq__19991_20001;
var G__20010 = chunk__19992_20002;
var G__20011 = count__19993_20003;
var G__20012 = (i__19994_20004 + (1));
seq__19991_20001 = G__20009;
chunk__19992_20002 = G__20010;
count__19993_20003 = G__20011;
i__19994_20004 = G__20012;
continue;
} else {
var temp__4126__auto___20013 = cljs.core.seq(seq__19991_20001);
if(temp__4126__auto___20013){
var seq__19991_20014__$1 = temp__4126__auto___20013;
if(cljs.core.chunked_seq_QMARK_(seq__19991_20014__$1)){
var c__4559__auto___20015 = (function (){var G__19997 = seq__19991_20014__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__19997) : cljs.core.chunk_first.call(null,G__19997));
})();
var G__20016 = (function (){var G__19998 = seq__19991_20014__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__19998) : cljs.core.chunk_rest.call(null,G__19998));
})();
var G__20017 = c__4559__auto___20015;
var G__20018 = cljs.core.count(c__4559__auto___20015);
var G__20019 = (0);
seq__19991_20001 = G__20016;
chunk__19992_20002 = G__20017;
count__19993_20003 = G__20018;
i__19994_20004 = G__20019;
continue;
} else {
var vec__19999_20020 = cljs.core.first(seq__19991_20014__$1);
var key_name_20021 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19999_20020,(0),null);
var f_20022 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__19999_20020,(1),null);
var str_name_20023 = (function (){var G__20000 = key_name_20021;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20000) : cljs.core.name.call(null,G__20000));
})();
(obj[str_name_20023] = f_20022);

var G__20024 = cljs.core.next(seq__19991_20014__$1);
var G__20025 = null;
var G__20026 = (0);
var G__20027 = (0);
seq__19991_20001 = G__20024;
chunk__19992_20002 = G__20025;
count__19993_20003 = G__20026;
i__19994_20004 = G__20027;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__20029 = coll;
if(G__20029){
var bit__4453__auto__ = (G__20029.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__4453__auto__) || (G__20029.cljs$core$IReversible$)){
return true;
} else {
if((!G__20029.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__20029);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__20029);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__20030 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__20030;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__20031 = (i - (1));
var G__20032 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__20031;
r = G__20032;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__20033__i = 0, G__20033__a = new Array(arguments.length -  0);
while (G__20033__i < G__20033__a.length) {G__20033__a[G__20033__i] = arguments[G__20033__i + 0]; ++G__20033__i;}
  xs = new cljs.core.IndexedSeq(G__20033__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__20034){
var xs = cljs.core.seq(arglist__20034);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__3772__auto__ = (coll == null);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var G__20038 = coll;
if(G__20038){
var bit__4446__auto__ = (G__20038.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__4446__auto__) || (G__20038.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__20040 = x;
if(G__20040){
var bit__4453__auto__ = (G__20040.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__4453__auto__) || (G__20040.cljs$core$IList$)){
return true;
} else {
if((!G__20040.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__20040);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__20040);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__3760__auto__ = cljs.core.not(a.ns);
if(and__3760__auto__){
return b.ns;
} else {
return and__3760__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__20047 = a.ns;
var G__20048 = b.ns;
return goog.array.defaultCompare(G__20047,G__20048);
})();
if(((0) === nsc)){
var G__20049 = a.name;
var G__20050 = b.name;
return goog.array.defaultCompare(G__20049,G__20050);
} else {
return nsc;
}
}
} else {
var G__20051 = a.name;
var G__20052 = b.name;
return goog.array.defaultCompare(G__20051,G__20052);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__4193__auto__ = self__._hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__20054 = null;
var G__20054__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__20054__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__20054 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__20054__2.call(this,self__,coll);
case 3:
return G__20054__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20054.cljs$core$IFn$_invoke$arity$2 = G__20054__2;
G__20054.cljs$core$IFn$_invoke$arity$3 = G__20054__3;
return G__20054;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args20053){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args20053)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__20056 = x;
if(G__20056){
var bit__4446__auto__ = (G__20056.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4446__auto__) || (G__20056.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__20058 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__20058) : cljs.core.name.call(null,G__20058));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__20059 = ls.sval();
ls = G__20059;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__20061 = s;
if(G__20061){
var bit__4446__auto__ = (G__20061.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__4446__auto__) || (G__20061.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__20062 = cljs.core.next(s__$1);
s__$1 = G__20062;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_20063 = (0);
var xs_20064 = cljs.core.seq(coll);
while(true){
if(xs_20064){
(ret[i_20063] = cljs.core.to_array(cljs.core.first(xs_20064)));

var G__20065 = (i_20063 + (1));
var G__20066 = cljs.core.next(xs_20064);
i_20063 = G__20065;
xs_20064 = G__20066;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20069 = (i + (1));
var G__20070 = cljs.core.next(s__$1);
i = G__20069;
s__$1 = G__20070;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___20071 = size;
var i_20072 = (0);
while(true){
if((i_20072 < n__4659__auto___20071)){
(a[i_20072] = init_val_or_seq);

var G__20073 = (i_20072 + (1));
i_20072 = G__20073;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20076 = (i + (1));
var G__20077 = cljs.core.next(s__$1);
i = G__20076;
s__$1 = G__20077;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___20078 = size;
var i_20079 = (0);
while(true){
if((i_20079 < n__4659__auto___20078)){
(a[i_20079] = init_val_or_seq);

var G__20080 = (i_20079 + (1));
i_20079 = G__20080;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20083 = (i + (1));
var G__20084 = cljs.core.next(s__$1);
i = G__20083;
s__$1 = G__20084;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___20085 = size;
var i_20086 = (0);
while(true){
if((i_20086 < n__4659__auto___20085)){
(a[i_20086] = init_val_or_seq);

var G__20087 = (i_20086 + (1));
i_20086 = G__20087;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__20090 = (i + (1));
var G__20091 = cljs.core.next(s__$1);
i = G__20090;
s__$1 = G__20091;
continue;
} else {
return a;
}
break;
}
} else {
var n__4659__auto___20092 = size;
var i_20093 = (0);
while(true){
if((i_20093 < n__4659__auto___20092)){
(a[i_20093] = init_val_or_seq);

var G__20094 = (i_20093 + (1));
i_20093 = G__20094;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__20095 = cljs.core.next(s__$1);
var G__20096 = (i - (1));
var G__20097 = (sum + (1));
s__$1 = G__20095;
i = G__20096;
sum = G__20097;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__20117__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__20117 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__20118__i = 0, G__20118__a = new Array(arguments.length -  2);
while (G__20118__i < G__20118__a.length) {G__20118__a[G__20118__i] = arguments[G__20118__i + 2]; ++G__20118__i;}
  zs = new cljs.core.IndexedSeq(G__20118__a,0);
} 
return G__20117__delegate.call(this,x,y,zs);};
G__20117.cljs$lang$maxFixedArity = 2;
G__20117.cljs$lang$applyTo = (function (arglist__20119){
var x = cljs.core.first(arglist__20119);
arglist__20119 = cljs.core.next(arglist__20119);
var y = cljs.core.first(arglist__20119);
var zs = cljs.core.rest(arglist__20119);
return G__20117__delegate(x,y,zs);
});
G__20117.cljs$core$IFn$_invoke$arity$variadic = G__20117__delegate;
return G__20117;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__20120 = null;
if (arguments.length > 2) {
var G__20121__i = 0, G__20121__a = new Array(arguments.length -  2);
while (G__20121__i < G__20121__a.length) {G__20121__a[G__20121__i] = arguments[G__20121__i + 2]; ++G__20121__i;}
G__20120 = new cljs.core.IndexedSeq(G__20121__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__20122__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__20122 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__20123__i = 0, G__20123__a = new Array(arguments.length -  4);
while (G__20123__i < G__20123__a.length) {G__20123__a[G__20123__i] = arguments[G__20123__i + 4]; ++G__20123__i;}
  more = new cljs.core.IndexedSeq(G__20123__a,0);
} 
return G__20122__delegate.call(this,a,b,c,d,more);};
G__20122.cljs$lang$maxFixedArity = 4;
G__20122.cljs$lang$applyTo = (function (arglist__20124){
var a = cljs.core.first(arglist__20124);
arglist__20124 = cljs.core.next(arglist__20124);
var b = cljs.core.first(arglist__20124);
arglist__20124 = cljs.core.next(arglist__20124);
var c = cljs.core.first(arglist__20124);
arglist__20124 = cljs.core.next(arglist__20124);
var d = cljs.core.first(arglist__20124);
var more = cljs.core.rest(arglist__20124);
return G__20122__delegate(a,b,c,d,more);
});
G__20122.cljs$core$IFn$_invoke$arity$variadic = G__20122__delegate;
return G__20122;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__20125 = null;
if (arguments.length > 4) {
var G__20126__i = 0, G__20126__a = new Array(arguments.length -  4);
while (G__20126__i < G__20126__a.length) {G__20126__a[G__20126__i] = arguments[G__20126__i + 4]; ++G__20126__i;}
G__20125 = new cljs.core.IndexedSeq(G__20126__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__20125);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__20127__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__20128 = ntcoll;
var G__20129 = cljs.core.first(vals);
var G__20130 = cljs.core.next(vals);
tcoll = G__20128;
val = G__20129;
vals = G__20130;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20127 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__20131__i = 0, G__20131__a = new Array(arguments.length -  2);
while (G__20131__i < G__20131__a.length) {G__20131__a[G__20131__i] = arguments[G__20131__i + 2]; ++G__20131__i;}
  vals = new cljs.core.IndexedSeq(G__20131__a,0);
} 
return G__20127__delegate.call(this,tcoll,val,vals);};
G__20127.cljs$lang$maxFixedArity = 2;
G__20127.cljs$lang$applyTo = (function (arglist__20132){
var tcoll = cljs.core.first(arglist__20132);
arglist__20132 = cljs.core.next(arglist__20132);
var val = cljs.core.first(arglist__20132);
var vals = cljs.core.rest(arglist__20132);
return G__20127__delegate(tcoll,val,vals);
});
G__20127.cljs$core$IFn$_invoke$arity$variadic = G__20127__delegate;
return G__20127;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__20133 = null;
if (arguments.length > 2) {
var G__20134__i = 0, G__20134__a = new Array(arguments.length -  2);
while (G__20134__i < G__20134__a.length) {G__20134__a[G__20134__i] = arguments[G__20134__i + 2]; ++G__20134__i;}
G__20133 = new cljs.core.IndexedSeq(G__20134__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__20133);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__20135__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__20136 = ntcoll;
var G__20137 = cljs.core.first(kvs);
var G__20138 = cljs.core.second(kvs);
var G__20139 = cljs.core.nnext(kvs);
tcoll = G__20136;
key = G__20137;
val = G__20138;
kvs = G__20139;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20135 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__20140__i = 0, G__20140__a = new Array(arguments.length -  3);
while (G__20140__i < G__20140__a.length) {G__20140__a[G__20140__i] = arguments[G__20140__i + 3]; ++G__20140__i;}
  kvs = new cljs.core.IndexedSeq(G__20140__a,0);
} 
return G__20135__delegate.call(this,tcoll,key,val,kvs);};
G__20135.cljs$lang$maxFixedArity = 3;
G__20135.cljs$lang$applyTo = (function (arglist__20141){
var tcoll = cljs.core.first(arglist__20141);
arglist__20141 = cljs.core.next(arglist__20141);
var key = cljs.core.first(arglist__20141);
arglist__20141 = cljs.core.next(arglist__20141);
var val = cljs.core.first(arglist__20141);
var kvs = cljs.core.rest(arglist__20141);
return G__20135__delegate(tcoll,key,val,kvs);
});
G__20135.cljs$core$IFn$_invoke$arity$variadic = G__20135__delegate;
return G__20135;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__20142 = null;
if (arguments.length > 3) {
var G__20143__i = 0, G__20143__a = new Array(arguments.length -  3);
while (G__20143__i < G__20143__a.length) {G__20143__a[G__20143__i] = arguments[G__20143__i + 3]; ++G__20143__i;}
G__20142 = new cljs.core.IndexedSeq(G__20143__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__20142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__20144__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__20145 = ntcoll;
var G__20146 = cljs.core.first(ks);
var G__20147 = cljs.core.next(ks);
tcoll = G__20145;
key = G__20146;
ks = G__20147;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20144 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__20148__i = 0, G__20148__a = new Array(arguments.length -  2);
while (G__20148__i < G__20148__a.length) {G__20148__a[G__20148__i] = arguments[G__20148__i + 2]; ++G__20148__i;}
  ks = new cljs.core.IndexedSeq(G__20148__a,0);
} 
return G__20144__delegate.call(this,tcoll,key,ks);};
G__20144.cljs$lang$maxFixedArity = 2;
G__20144.cljs$lang$applyTo = (function (arglist__20149){
var tcoll = cljs.core.first(arglist__20149);
arglist__20149 = cljs.core.next(arglist__20149);
var key = cljs.core.first(arglist__20149);
var ks = cljs.core.rest(arglist__20149);
return G__20144__delegate(tcoll,key,ks);
});
G__20144.cljs$core$IFn$_invoke$arity$variadic = G__20144__delegate;
return G__20144;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__20150 = null;
if (arguments.length > 2) {
var G__20151__i = 0, G__20151__a = new Array(arguments.length -  2);
while (G__20151__i < G__20151__a.length) {G__20151__a[G__20151__i] = arguments[G__20151__i + 2]; ++G__20151__i;}
G__20150 = new cljs.core.IndexedSeq(G__20151__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__20150);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__20152__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__20153 = ntcoll;
var G__20154 = cljs.core.first(vals);
var G__20155 = cljs.core.next(vals);
tcoll = G__20153;
val = G__20154;
vals = G__20155;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__20152 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__20156__i = 0, G__20156__a = new Array(arguments.length -  2);
while (G__20156__i < G__20156__a.length) {G__20156__a[G__20156__i] = arguments[G__20156__i + 2]; ++G__20156__i;}
  vals = new cljs.core.IndexedSeq(G__20156__a,0);
} 
return G__20152__delegate.call(this,tcoll,val,vals);};
G__20152.cljs$lang$maxFixedArity = 2;
G__20152.cljs$lang$applyTo = (function (arglist__20157){
var tcoll = cljs.core.first(arglist__20157);
arglist__20157 = cljs.core.next(arglist__20157);
var val = cljs.core.first(arglist__20157);
var vals = cljs.core.rest(arglist__20157);
return G__20152__delegate(tcoll,val,vals);
});
G__20152.cljs$core$IFn$_invoke$arity$variadic = G__20152__delegate;
return G__20152;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__20158 = null;
if (arguments.length > 2) {
var G__20159__i = 0, G__20159__a = new Array(arguments.length -  2);
while (G__20159__i < G__20159__a.length) {G__20159__a[G__20159__i] = arguments[G__20159__i + 2]; ++G__20159__i;}
G__20158 = new cljs.core.IndexedSeq(G__20159__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__20158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a4703 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a4703);
} else {
var G__20370 = a4703;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20370) : f.call(null,G__20370));
}
} else {
var b4704 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a4703,b4704);
} else {
var G__20371 = a4703;
var G__20372 = b4704;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20371,G__20372) : f.call(null,G__20371,G__20372));
}
} else {
var c4705 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a4703,b4704,c4705);
} else {
var G__20373 = a4703;
var G__20374 = b4704;
var G__20375 = c4705;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20373,G__20374,G__20375) : f.call(null,G__20373,G__20374,G__20375));
}
} else {
var d4706 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a4703,b4704,c4705,d4706);
} else {
var G__20376 = a4703;
var G__20377 = b4704;
var G__20378 = c4705;
var G__20379 = d4706;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20376,G__20377,G__20378,G__20379) : f.call(null,G__20376,G__20377,G__20378,G__20379));
}
} else {
var e4707 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a4703,b4704,c4705,d4706,e4707);
} else {
var G__20380 = a4703;
var G__20381 = b4704;
var G__20382 = c4705;
var G__20383 = d4706;
var G__20384 = e4707;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20380,G__20381,G__20382,G__20383,G__20384) : f.call(null,G__20380,G__20381,G__20382,G__20383,G__20384));
}
} else {
var f4708 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a4703,b4704,c4705,d4706,e4707,f4708);
} else {
var G__20385 = a4703;
var G__20386 = b4704;
var G__20387 = c4705;
var G__20388 = d4706;
var G__20389 = e4707;
var G__20390 = f4708;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20385,G__20386,G__20387,G__20388,G__20389,G__20390) : f.call(null,G__20385,G__20386,G__20387,G__20388,G__20389,G__20390));
}
} else {
var g4709 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a4703,b4704,c4705,d4706,e4707,f4708,g4709);
} else {
var G__20391 = a4703;
var G__20392 = b4704;
var G__20393 = c4705;
var G__20394 = d4706;
var G__20395 = e4707;
var G__20396 = f4708;
var G__20397 = g4709;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__20391,G__20392,G__20393,G__20394,G__20395,G__20396,G__20397) : f.call(null,G__20391,G__20392,G__20393,G__20394,G__20395,G__20396,G__20397));
}
} else {
var h4710 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710);
} else {
var G__20398 = a4703;
var G__20399 = b4704;
var G__20400 = c4705;
var G__20401 = d4706;
var G__20402 = e4707;
var G__20403 = f4708;
var G__20404 = g4709;
var G__20405 = h4710;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__20398,G__20399,G__20400,G__20401,G__20402,G__20403,G__20404,G__20405) : f.call(null,G__20398,G__20399,G__20400,G__20401,G__20402,G__20403,G__20404,G__20405));
}
} else {
var i4711 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711);
} else {
var G__20406 = a4703;
var G__20407 = b4704;
var G__20408 = c4705;
var G__20409 = d4706;
var G__20410 = e4707;
var G__20411 = f4708;
var G__20412 = g4709;
var G__20413 = h4710;
var G__20414 = i4711;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__20406,G__20407,G__20408,G__20409,G__20410,G__20411,G__20412,G__20413,G__20414) : f.call(null,G__20406,G__20407,G__20408,G__20409,G__20410,G__20411,G__20412,G__20413,G__20414));
}
} else {
var j4712 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712);
} else {
var G__20415 = a4703;
var G__20416 = b4704;
var G__20417 = c4705;
var G__20418 = d4706;
var G__20419 = e4707;
var G__20420 = f4708;
var G__20421 = g4709;
var G__20422 = h4710;
var G__20423 = i4711;
var G__20424 = j4712;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__20415,G__20416,G__20417,G__20418,G__20419,G__20420,G__20421,G__20422,G__20423,G__20424) : f.call(null,G__20415,G__20416,G__20417,G__20418,G__20419,G__20420,G__20421,G__20422,G__20423,G__20424));
}
} else {
var k4713 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713);
} else {
var G__20425 = a4703;
var G__20426 = b4704;
var G__20427 = c4705;
var G__20428 = d4706;
var G__20429 = e4707;
var G__20430 = f4708;
var G__20431 = g4709;
var G__20432 = h4710;
var G__20433 = i4711;
var G__20434 = j4712;
var G__20435 = k4713;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__20425,G__20426,G__20427,G__20428,G__20429,G__20430,G__20431,G__20432,G__20433,G__20434,G__20435) : f.call(null,G__20425,G__20426,G__20427,G__20428,G__20429,G__20430,G__20431,G__20432,G__20433,G__20434,G__20435));
}
} else {
var l4714 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714);
} else {
var G__20436 = a4703;
var G__20437 = b4704;
var G__20438 = c4705;
var G__20439 = d4706;
var G__20440 = e4707;
var G__20441 = f4708;
var G__20442 = g4709;
var G__20443 = h4710;
var G__20444 = i4711;
var G__20445 = j4712;
var G__20446 = k4713;
var G__20447 = l4714;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__20436,G__20437,G__20438,G__20439,G__20440,G__20441,G__20442,G__20443,G__20444,G__20445,G__20446,G__20447) : f.call(null,G__20436,G__20437,G__20438,G__20439,G__20440,G__20441,G__20442,G__20443,G__20444,G__20445,G__20446,G__20447));
}
} else {
var m4715 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715);
} else {
var G__20448 = a4703;
var G__20449 = b4704;
var G__20450 = c4705;
var G__20451 = d4706;
var G__20452 = e4707;
var G__20453 = f4708;
var G__20454 = g4709;
var G__20455 = h4710;
var G__20456 = i4711;
var G__20457 = j4712;
var G__20458 = k4713;
var G__20459 = l4714;
var G__20460 = m4715;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__20448,G__20449,G__20450,G__20451,G__20452,G__20453,G__20454,G__20455,G__20456,G__20457,G__20458,G__20459,G__20460) : f.call(null,G__20448,G__20449,G__20450,G__20451,G__20452,G__20453,G__20454,G__20455,G__20456,G__20457,G__20458,G__20459,G__20460));
}
} else {
var n4716 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716);
} else {
var G__20461 = a4703;
var G__20462 = b4704;
var G__20463 = c4705;
var G__20464 = d4706;
var G__20465 = e4707;
var G__20466 = f4708;
var G__20467 = g4709;
var G__20468 = h4710;
var G__20469 = i4711;
var G__20470 = j4712;
var G__20471 = k4713;
var G__20472 = l4714;
var G__20473 = m4715;
var G__20474 = n4716;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__20461,G__20462,G__20463,G__20464,G__20465,G__20466,G__20467,G__20468,G__20469,G__20470,G__20471,G__20472,G__20473,G__20474) : f.call(null,G__20461,G__20462,G__20463,G__20464,G__20465,G__20466,G__20467,G__20468,G__20469,G__20470,G__20471,G__20472,G__20473,G__20474));
}
} else {
var o4717 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717);
} else {
var G__20475 = a4703;
var G__20476 = b4704;
var G__20477 = c4705;
var G__20478 = d4706;
var G__20479 = e4707;
var G__20480 = f4708;
var G__20481 = g4709;
var G__20482 = h4710;
var G__20483 = i4711;
var G__20484 = j4712;
var G__20485 = k4713;
var G__20486 = l4714;
var G__20487 = m4715;
var G__20488 = n4716;
var G__20489 = o4717;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__20475,G__20476,G__20477,G__20478,G__20479,G__20480,G__20481,G__20482,G__20483,G__20484,G__20485,G__20486,G__20487,G__20488,G__20489) : f.call(null,G__20475,G__20476,G__20477,G__20478,G__20479,G__20480,G__20481,G__20482,G__20483,G__20484,G__20485,G__20486,G__20487,G__20488,G__20489));
}
} else {
var p4718 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718);
} else {
var G__20490 = a4703;
var G__20491 = b4704;
var G__20492 = c4705;
var G__20493 = d4706;
var G__20494 = e4707;
var G__20495 = f4708;
var G__20496 = g4709;
var G__20497 = h4710;
var G__20498 = i4711;
var G__20499 = j4712;
var G__20500 = k4713;
var G__20501 = l4714;
var G__20502 = m4715;
var G__20503 = n4716;
var G__20504 = o4717;
var G__20505 = p4718;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__20490,G__20491,G__20492,G__20493,G__20494,G__20495,G__20496,G__20497,G__20498,G__20499,G__20500,G__20501,G__20502,G__20503,G__20504,G__20505) : f.call(null,G__20490,G__20491,G__20492,G__20493,G__20494,G__20495,G__20496,G__20497,G__20498,G__20499,G__20500,G__20501,G__20502,G__20503,G__20504,G__20505));
}
} else {
var q4719 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719);
} else {
var G__20506 = a4703;
var G__20507 = b4704;
var G__20508 = c4705;
var G__20509 = d4706;
var G__20510 = e4707;
var G__20511 = f4708;
var G__20512 = g4709;
var G__20513 = h4710;
var G__20514 = i4711;
var G__20515 = j4712;
var G__20516 = k4713;
var G__20517 = l4714;
var G__20518 = m4715;
var G__20519 = n4716;
var G__20520 = o4717;
var G__20521 = p4718;
var G__20522 = q4719;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__20506,G__20507,G__20508,G__20509,G__20510,G__20511,G__20512,G__20513,G__20514,G__20515,G__20516,G__20517,G__20518,G__20519,G__20520,G__20521,G__20522) : f.call(null,G__20506,G__20507,G__20508,G__20509,G__20510,G__20511,G__20512,G__20513,G__20514,G__20515,G__20516,G__20517,G__20518,G__20519,G__20520,G__20521,G__20522));
}
} else {
var r4720 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719,r4720);
} else {
var G__20523 = a4703;
var G__20524 = b4704;
var G__20525 = c4705;
var G__20526 = d4706;
var G__20527 = e4707;
var G__20528 = f4708;
var G__20529 = g4709;
var G__20530 = h4710;
var G__20531 = i4711;
var G__20532 = j4712;
var G__20533 = k4713;
var G__20534 = l4714;
var G__20535 = m4715;
var G__20536 = n4716;
var G__20537 = o4717;
var G__20538 = p4718;
var G__20539 = q4719;
var G__20540 = r4720;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__20523,G__20524,G__20525,G__20526,G__20527,G__20528,G__20529,G__20530,G__20531,G__20532,G__20533,G__20534,G__20535,G__20536,G__20537,G__20538,G__20539,G__20540) : f.call(null,G__20523,G__20524,G__20525,G__20526,G__20527,G__20528,G__20529,G__20530,G__20531,G__20532,G__20533,G__20534,G__20535,G__20536,G__20537,G__20538,G__20539,G__20540));
}
} else {
var s4721 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719,r4720,s4721);
} else {
var G__20541 = a4703;
var G__20542 = b4704;
var G__20543 = c4705;
var G__20544 = d4706;
var G__20545 = e4707;
var G__20546 = f4708;
var G__20547 = g4709;
var G__20548 = h4710;
var G__20549 = i4711;
var G__20550 = j4712;
var G__20551 = k4713;
var G__20552 = l4714;
var G__20553 = m4715;
var G__20554 = n4716;
var G__20555 = o4717;
var G__20556 = p4718;
var G__20557 = q4719;
var G__20558 = r4720;
var G__20559 = s4721;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__20541,G__20542,G__20543,G__20544,G__20545,G__20546,G__20547,G__20548,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558,G__20559) : f.call(null,G__20541,G__20542,G__20543,G__20544,G__20545,G__20546,G__20547,G__20548,G__20549,G__20550,G__20551,G__20552,G__20553,G__20554,G__20555,G__20556,G__20557,G__20558,G__20559));
}
} else {
var t4722 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a4703,b4704,c4705,d4706,e4707,f4708,g4709,h4710,i4711,j4712,k4713,l4714,m4715,n4716,o4717,p4718,q4719,r4720,s4721,t4722);
} else {
var G__20560 = a4703;
var G__20561 = b4704;
var G__20562 = c4705;
var G__20563 = d4706;
var G__20564 = e4707;
var G__20565 = f4708;
var G__20566 = g4709;
var G__20567 = h4710;
var G__20568 = i4711;
var G__20569 = j4712;
var G__20570 = k4713;
var G__20571 = l4714;
var G__20572 = m4715;
var G__20573 = n4716;
var G__20574 = o4717;
var G__20575 = p4718;
var G__20576 = q4719;
var G__20577 = r4720;
var G__20578 = s4721;
var G__20579 = t4722;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__20560,G__20561,G__20562,G__20563,G__20564,G__20565,G__20566,G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575,G__20576,G__20577,G__20578,G__20579) : f.call(null,G__20560,G__20561,G__20562,G__20563,G__20564,G__20565,G__20566,G__20567,G__20568,G__20569,G__20570,G__20571,G__20572,G__20573,G__20574,G__20575,G__20576,G__20577,G__20578,G__20579));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__20580__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__20580 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__20581__i = 0, G__20581__a = new Array(arguments.length -  5);
while (G__20581__i < G__20581__a.length) {G__20581__a[G__20581__i] = arguments[G__20581__i + 5]; ++G__20581__i;}
  args = new cljs.core.IndexedSeq(G__20581__a,0);
} 
return G__20580__delegate.call(this,f,a,b,c,d,args);};
G__20580.cljs$lang$maxFixedArity = 5;
G__20580.cljs$lang$applyTo = (function (arglist__20582){
var f = cljs.core.first(arglist__20582);
arglist__20582 = cljs.core.next(arglist__20582);
var a = cljs.core.first(arglist__20582);
arglist__20582 = cljs.core.next(arglist__20582);
var b = cljs.core.first(arglist__20582);
arglist__20582 = cljs.core.next(arglist__20582);
var c = cljs.core.first(arglist__20582);
arglist__20582 = cljs.core.next(arglist__20582);
var d = cljs.core.first(arglist__20582);
var args = cljs.core.rest(arglist__20582);
return G__20580__delegate(f,a,b,c,d,args);
});
G__20580.cljs$core$IFn$_invoke$arity$variadic = G__20580__delegate;
return G__20580;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__20583 = null;
if (arguments.length > 5) {
var G__20584__i = 0, G__20584__a = new Array(arguments.length -  5);
while (G__20584__i < G__20584__a.length) {G__20584__a[G__20584__i] = arguments[G__20584__i + 5]; ++G__20584__i;}
G__20583 = new cljs.core.IndexedSeq(G__20584__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__20583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__20600 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20600) : f.call(null,G__20600));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__20601 = cljs.core.meta(obj);
var G__20602 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20601,G__20602) : f.call(null,G__20601,G__20602));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__20603 = cljs.core.meta(obj);
var G__20604 = a;
var G__20605 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20603,G__20604,G__20605) : f.call(null,G__20603,G__20604,G__20605));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__20606 = cljs.core.meta(obj);
var G__20607 = a;
var G__20608 = b;
var G__20609 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20606,G__20607,G__20608,G__20609) : f.call(null,G__20606,G__20607,G__20608,G__20609));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__20610 = cljs.core.meta(obj);
var G__20611 = a;
var G__20612 = b;
var G__20613 = c;
var G__20614 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20610,G__20611,G__20612,G__20613,G__20614) : f.call(null,G__20610,G__20611,G__20612,G__20613,G__20614));
})());
});
var vary_meta__7 = (function() { 
var G__20615__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__20615 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__20616__i = 0, G__20616__a = new Array(arguments.length -  6);
while (G__20616__i < G__20616__a.length) {G__20616__a[G__20616__i] = arguments[G__20616__i + 6]; ++G__20616__i;}
  args = new cljs.core.IndexedSeq(G__20616__a,0);
} 
return G__20615__delegate.call(this,obj,f,a,b,c,d,args);};
G__20615.cljs$lang$maxFixedArity = 6;
G__20615.cljs$lang$applyTo = (function (arglist__20617){
var obj = cljs.core.first(arglist__20617);
arglist__20617 = cljs.core.next(arglist__20617);
var f = cljs.core.first(arglist__20617);
arglist__20617 = cljs.core.next(arglist__20617);
var a = cljs.core.first(arglist__20617);
arglist__20617 = cljs.core.next(arglist__20617);
var b = cljs.core.first(arglist__20617);
arglist__20617 = cljs.core.next(arglist__20617);
var c = cljs.core.first(arglist__20617);
arglist__20617 = cljs.core.next(arglist__20617);
var d = cljs.core.first(arglist__20617);
var args = cljs.core.rest(arglist__20617);
return G__20615__delegate(obj,f,a,b,c,d,args);
});
G__20615.cljs$core$IFn$_invoke$arity$variadic = G__20615__delegate;
return G__20615;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__20618 = null;
if (arguments.length > 6) {
var G__20619__i = 0, G__20619__a = new Array(arguments.length -  6);
while (G__20619__i < G__20619__a.length) {G__20619__a[G__20619__i] = arguments[G__20619__i + 6]; ++G__20619__i;}
G__20618 = new cljs.core.IndexedSeq(G__20619__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__20618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__20620__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__20620 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__20621__i = 0, G__20621__a = new Array(arguments.length -  2);
while (G__20621__i < G__20621__a.length) {G__20621__a[G__20621__i] = arguments[G__20621__i + 2]; ++G__20621__i;}
  more = new cljs.core.IndexedSeq(G__20621__a,0);
} 
return G__20620__delegate.call(this,x,y,more);};
G__20620.cljs$lang$maxFixedArity = 2;
G__20620.cljs$lang$applyTo = (function (arglist__20622){
var x = cljs.core.first(arglist__20622);
arglist__20622 = cljs.core.next(arglist__20622);
var y = cljs.core.first(arglist__20622);
var more = cljs.core.rest(arglist__20622);
return G__20620__delegate(x,y,more);
});
G__20620.cljs$core$IFn$_invoke$arity$variadic = G__20620__delegate;
return G__20620;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__20623 = null;
if (arguments.length > 2) {
var G__20624__i = 0, G__20624__a = new Array(arguments.length -  2);
while (G__20624__i < G__20624__a.length) {G__20624__a[G__20624__i] = arguments[G__20624__i + 2]; ++G__20624__i;}
G__20623 = new cljs.core.IndexedSeq(G__20624__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20623);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t20628 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t20628 = (function (nil_iter,meta20629){
this.nil_iter = nil_iter;
this.meta20629 = meta20629;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t20628.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t20628.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t20628.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t20628.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_20630){
var self__ = this;
var _20630__$1 = this;
return self__.meta20629;
});

cljs.core.t20628.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_20630,meta20629__$1){
var self__ = this;
var _20630__$1 = this;
return (new cljs.core.t20628(self__.nil_iter,meta20629__$1));
});

cljs.core.t20628.cljs$lang$type = true;

cljs.core.t20628.cljs$lang$ctorStr = "cljs.core/t20628";

cljs.core.t20628.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/t20628");
});

cljs.core.__GT_t20628 = (function __GT_t20628(nil_iter__$1,meta20629){
return (new cljs.core.t20628(nil_iter__$1,meta20629));
});

}

return (new cljs.core.t20628(nil_iter,new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$88,54,cljs.core.constant$keyword$89,3063,cljs.core.constant$keyword$90,3,cljs.core.constant$keyword$91,3059,cljs.core.constant$keyword$92,"/Users/smiller/Projects/testsAndTuts/reactcomparison/out-adv/cljs/core.cljs"], null)));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3760__auto__ = !((lt.stepper == null));
if(and__3760__auto__){
return self__.iter.hasNext();
} else {
return and__3760__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__20631 = lt;
var G__20632 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__20631,G__20632) : self__.xform.call(null,G__20631,G__20632));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__20633 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__20633) : self__.xform.call(null,G__20633));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__20635 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20635) : xform.call(null,G__20635));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__20637 = cljs.core.next(iters__$1);
iters__$1 = G__20637;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__4659__auto___20638 = self__.iters.length;
var i_20639 = (0);
while(true){
if((i_20639 < n__4659__auto___20638)){
(self__.nexts[i_20639] = (self__.iters[i_20639]).next());

var G__20640 = (i_20639 + (1));
i_20639 = G__20640;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__3760__auto__ = !((lt.stepper == null));
if(and__3760__auto__){
return this$.hasNext();
} else {
return and__3760__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__20636 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__20636) : self__.xform.call(null,G__20636));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__20645 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__20645) : xform.call(null,G__20645));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__20646_20650 = cljs.core.seq(colls);
var chunk__20647_20651 = null;
var count__20648_20652 = (0);
var i__20649_20653 = (0);
while(true){
if((i__20649_20653 < count__20648_20652)){
var coll_20654 = chunk__20647_20651.cljs$core$IIndexed$_nth$arity$2(null,i__20649_20653);
iters.push(cljs.core.iter(coll_20654));

var G__20655 = seq__20646_20650;
var G__20656 = chunk__20647_20651;
var G__20657 = count__20648_20652;
var G__20658 = (i__20649_20653 + (1));
seq__20646_20650 = G__20655;
chunk__20647_20651 = G__20656;
count__20648_20652 = G__20657;
i__20649_20653 = G__20658;
continue;
} else {
var temp__4126__auto___20659 = cljs.core.seq(seq__20646_20650);
if(temp__4126__auto___20659){
var seq__20646_20660__$1 = temp__4126__auto___20659;
if(cljs.core.chunked_seq_QMARK_(seq__20646_20660__$1)){
var c__4559__auto___20661 = cljs.core.chunk_first(seq__20646_20660__$1);
var G__20662 = cljs.core.chunk_rest(seq__20646_20660__$1);
var G__20663 = c__4559__auto___20661;
var G__20664 = cljs.core.count(c__4559__auto___20661);
var G__20665 = (0);
seq__20646_20650 = G__20662;
chunk__20647_20651 = G__20663;
count__20648_20652 = G__20664;
i__20649_20653 = G__20665;
continue;
} else {
var coll_20666 = cljs.core.first(seq__20646_20660__$1);
iters.push(cljs.core.iter(coll_20666));

var G__20667 = cljs.core.next(seq__20646_20660__$1);
var G__20668 = null;
var G__20669 = (0);
var G__20670 = (0);
seq__20646_20650 = G__20667;
chunk__20647_20651 = G__20668;
count__20648_20652 = G__20669;
i__20649_20653 = G__20670;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__3772__auto__ = cljs.core.seq(coll);
if(or__3772__auto__){
return or__3772__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__20671__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__20671 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__20672__i = 0, G__20672__a = new Array(arguments.length -  2);
while (G__20672__i < G__20672__a.length) {G__20672__a[G__20672__i] = arguments[G__20672__i + 2]; ++G__20672__i;}
  colls = new cljs.core.IndexedSeq(G__20672__a,0);
} 
return G__20671__delegate.call(this,xform,coll,colls);};
G__20671.cljs$lang$maxFixedArity = 2;
G__20671.cljs$lang$applyTo = (function (arglist__20673){
var xform = cljs.core.first(arglist__20673);
arglist__20673 = cljs.core.next(arglist__20673);
var coll = cljs.core.first(arglist__20673);
var colls = cljs.core.rest(arglist__20673);
return G__20671__delegate(xform,coll,colls);
});
G__20671.cljs$core$IFn$_invoke$arity$variadic = G__20671__delegate;
return G__20671;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__20674 = null;
if (arguments.length > 2) {
var G__20675__i = 0, G__20675__a = new Array(arguments.length -  2);
while (G__20675__i < G__20675__a.length) {G__20675__a[G__20675__i] = arguments[G__20675__i + 2]; ++G__20675__i;}
G__20674 = new cljs.core.IndexedSeq(G__20675__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__20674);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__20677 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20677) : pred.call(null,G__20677));
})())){
var G__20678 = pred;
var G__20679 = cljs.core.next(coll);
pred = G__20678;
coll = G__20679;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__3772__auto__ = (function (){var G__20683 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__20683) : pred.call(null,G__20683));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__20684 = pred;
var G__20685 = cljs.core.next(coll);
pred = G__20684;
coll = G__20685;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__20692 = null;
var G__20692__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__20692__1 = (function (x){
return cljs.core.not((function (){var G__20689 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20689) : f.call(null,G__20689));
})());
});
var G__20692__2 = (function (x,y){
return cljs.core.not((function (){var G__20690 = x;
var G__20691 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20690,G__20691) : f.call(null,G__20690,G__20691));
})());
});
var G__20692__3 = (function() { 
var G__20693__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__20693 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__20694__i = 0, G__20694__a = new Array(arguments.length -  2);
while (G__20694__i < G__20694__a.length) {G__20694__a[G__20694__i] = arguments[G__20694__i + 2]; ++G__20694__i;}
  zs = new cljs.core.IndexedSeq(G__20694__a,0);
} 
return G__20693__delegate.call(this,x,y,zs);};
G__20693.cljs$lang$maxFixedArity = 2;
G__20693.cljs$lang$applyTo = (function (arglist__20695){
var x = cljs.core.first(arglist__20695);
arglist__20695 = cljs.core.next(arglist__20695);
var y = cljs.core.first(arglist__20695);
var zs = cljs.core.rest(arglist__20695);
return G__20693__delegate(x,y,zs);
});
G__20693.cljs$core$IFn$_invoke$arity$variadic = G__20693__delegate;
return G__20693;
})()
;
G__20692 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__20692__0.call(this);
case 1:
return G__20692__1.call(this,x);
case 2:
return G__20692__2.call(this,x,y);
default:
var G__20696 = null;
if (arguments.length > 2) {
var G__20697__i = 0, G__20697__a = new Array(arguments.length -  2);
while (G__20697__i < G__20697__a.length) {G__20697__a[G__20697__i] = arguments[G__20697__i + 2]; ++G__20697__i;}
G__20696 = new cljs.core.IndexedSeq(G__20697__a,0);
}
return G__20692__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__20696);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20692.cljs$lang$maxFixedArity = 2;
G__20692.cljs$lang$applyTo = G__20692__3.cljs$lang$applyTo;
G__20692.cljs$core$IFn$_invoke$arity$0 = G__20692__0;
G__20692.cljs$core$IFn$_invoke$arity$1 = G__20692__1;
G__20692.cljs$core$IFn$_invoke$arity$2 = G__20692__2;
G__20692.cljs$core$IFn$_invoke$arity$variadic = G__20692__3.cljs$core$IFn$_invoke$arity$variadic;
return G__20692;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__20698__delegate = function (args){
return x;
};
var G__20698 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20699__i = 0, G__20699__a = new Array(arguments.length -  0);
while (G__20699__i < G__20699__a.length) {G__20699__a[G__20699__i] = arguments[G__20699__i + 0]; ++G__20699__i;}
  args = new cljs.core.IndexedSeq(G__20699__a,0);
} 
return G__20698__delegate.call(this,args);};
G__20698.cljs$lang$maxFixedArity = 0;
G__20698.cljs$lang$applyTo = (function (arglist__20700){
var args = cljs.core.seq(arglist__20700);
return G__20698__delegate(args);
});
G__20698.cljs$core$IFn$_invoke$arity$variadic = G__20698__delegate;
return G__20698;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__20755 = null;
var G__20755__0 = (function (){
var G__20728 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20728) : f.call(null,G__20728));
});
var G__20755__1 = (function (x){
var G__20729 = (function (){var G__20730 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20730) : g.call(null,G__20730));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20729) : f.call(null,G__20729));
});
var G__20755__2 = (function (x,y){
var G__20731 = (function (){var G__20732 = x;
var G__20733 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__20732,G__20733) : g.call(null,G__20732,G__20733));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20731) : f.call(null,G__20731));
});
var G__20755__3 = (function (x,y,z){
var G__20734 = (function (){var G__20735 = x;
var G__20736 = y;
var G__20737 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__20735,G__20736,G__20737) : g.call(null,G__20735,G__20736,G__20737));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20734) : f.call(null,G__20734));
});
var G__20755__4 = (function() { 
var G__20756__delegate = function (x,y,z,args){
var G__20738 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20738) : f.call(null,G__20738));
};
var G__20756 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20757__i = 0, G__20757__a = new Array(arguments.length -  3);
while (G__20757__i < G__20757__a.length) {G__20757__a[G__20757__i] = arguments[G__20757__i + 3]; ++G__20757__i;}
  args = new cljs.core.IndexedSeq(G__20757__a,0);
} 
return G__20756__delegate.call(this,x,y,z,args);};
G__20756.cljs$lang$maxFixedArity = 3;
G__20756.cljs$lang$applyTo = (function (arglist__20758){
var x = cljs.core.first(arglist__20758);
arglist__20758 = cljs.core.next(arglist__20758);
var y = cljs.core.first(arglist__20758);
arglist__20758 = cljs.core.next(arglist__20758);
var z = cljs.core.first(arglist__20758);
var args = cljs.core.rest(arglist__20758);
return G__20756__delegate(x,y,z,args);
});
G__20756.cljs$core$IFn$_invoke$arity$variadic = G__20756__delegate;
return G__20756;
})()
;
G__20755 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20755__0.call(this);
case 1:
return G__20755__1.call(this,x);
case 2:
return G__20755__2.call(this,x,y);
case 3:
return G__20755__3.call(this,x,y,z);
default:
var G__20759 = null;
if (arguments.length > 3) {
var G__20760__i = 0, G__20760__a = new Array(arguments.length -  3);
while (G__20760__i < G__20760__a.length) {G__20760__a[G__20760__i] = arguments[G__20760__i + 3]; ++G__20760__i;}
G__20759 = new cljs.core.IndexedSeq(G__20760__a,0);
}
return G__20755__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20759);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20755.cljs$lang$maxFixedArity = 3;
G__20755.cljs$lang$applyTo = G__20755__4.cljs$lang$applyTo;
G__20755.cljs$core$IFn$_invoke$arity$0 = G__20755__0;
G__20755.cljs$core$IFn$_invoke$arity$1 = G__20755__1;
G__20755.cljs$core$IFn$_invoke$arity$2 = G__20755__2;
G__20755.cljs$core$IFn$_invoke$arity$3 = G__20755__3;
G__20755.cljs$core$IFn$_invoke$arity$variadic = G__20755__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20755;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__20761 = null;
var G__20761__0 = (function (){
var G__20739 = (function (){var G__20740 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20740) : g.call(null,G__20740));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20739) : f.call(null,G__20739));
});
var G__20761__1 = (function (x){
var G__20741 = (function (){var G__20742 = (function (){var G__20743 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__20743) : h.call(null,G__20743));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20742) : g.call(null,G__20742));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20741) : f.call(null,G__20741));
});
var G__20761__2 = (function (x,y){
var G__20744 = (function (){var G__20745 = (function (){var G__20746 = x;
var G__20747 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__20746,G__20747) : h.call(null,G__20746,G__20747));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20745) : g.call(null,G__20745));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20744) : f.call(null,G__20744));
});
var G__20761__3 = (function (x,y,z){
var G__20748 = (function (){var G__20749 = (function (){var G__20750 = x;
var G__20751 = y;
var G__20752 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__20750,G__20751,G__20752) : h.call(null,G__20750,G__20751,G__20752));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20749) : g.call(null,G__20749));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20748) : f.call(null,G__20748));
});
var G__20761__4 = (function() { 
var G__20762__delegate = function (x,y,z,args){
var G__20753 = (function (){var G__20754 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__20754) : g.call(null,G__20754));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20753) : f.call(null,G__20753));
};
var G__20762 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20763__i = 0, G__20763__a = new Array(arguments.length -  3);
while (G__20763__i < G__20763__a.length) {G__20763__a[G__20763__i] = arguments[G__20763__i + 3]; ++G__20763__i;}
  args = new cljs.core.IndexedSeq(G__20763__a,0);
} 
return G__20762__delegate.call(this,x,y,z,args);};
G__20762.cljs$lang$maxFixedArity = 3;
G__20762.cljs$lang$applyTo = (function (arglist__20764){
var x = cljs.core.first(arglist__20764);
arglist__20764 = cljs.core.next(arglist__20764);
var y = cljs.core.first(arglist__20764);
arglist__20764 = cljs.core.next(arglist__20764);
var z = cljs.core.first(arglist__20764);
var args = cljs.core.rest(arglist__20764);
return G__20762__delegate(x,y,z,args);
});
G__20762.cljs$core$IFn$_invoke$arity$variadic = G__20762__delegate;
return G__20762;
})()
;
G__20761 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20761__0.call(this);
case 1:
return G__20761__1.call(this,x);
case 2:
return G__20761__2.call(this,x,y);
case 3:
return G__20761__3.call(this,x,y,z);
default:
var G__20765 = null;
if (arguments.length > 3) {
var G__20766__i = 0, G__20766__a = new Array(arguments.length -  3);
while (G__20766__i < G__20766__a.length) {G__20766__a[G__20766__i] = arguments[G__20766__i + 3]; ++G__20766__i;}
G__20765 = new cljs.core.IndexedSeq(G__20766__a,0);
}
return G__20761__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20765);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20761.cljs$lang$maxFixedArity = 3;
G__20761.cljs$lang$applyTo = G__20761__4.cljs$lang$applyTo;
G__20761.cljs$core$IFn$_invoke$arity$0 = G__20761__0;
G__20761.cljs$core$IFn$_invoke$arity$1 = G__20761__1;
G__20761.cljs$core$IFn$_invoke$arity$2 = G__20761__2;
G__20761.cljs$core$IFn$_invoke$arity$3 = G__20761__3;
G__20761.cljs$core$IFn$_invoke$arity$variadic = G__20761__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20761;
})()
});
var comp__4 = (function() { 
var G__20767__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__20768__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__20769 = cljs.core.first(fs__$2).call(null,ret);
var G__20770 = cljs.core.next(fs__$2);
ret = G__20769;
fs__$2 = G__20770;
continue;
} else {
return ret;
}
break;
}
};
var G__20768 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20771__i = 0, G__20771__a = new Array(arguments.length -  0);
while (G__20771__i < G__20771__a.length) {G__20771__a[G__20771__i] = arguments[G__20771__i + 0]; ++G__20771__i;}
  args = new cljs.core.IndexedSeq(G__20771__a,0);
} 
return G__20768__delegate.call(this,args);};
G__20768.cljs$lang$maxFixedArity = 0;
G__20768.cljs$lang$applyTo = (function (arglist__20772){
var args = cljs.core.seq(arglist__20772);
return G__20768__delegate(args);
});
G__20768.cljs$core$IFn$_invoke$arity$variadic = G__20768__delegate;
return G__20768;
})()
;
;})(fs__$1))
};
var G__20767 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__20773__i = 0, G__20773__a = new Array(arguments.length -  3);
while (G__20773__i < G__20773__a.length) {G__20773__a[G__20773__i] = arguments[G__20773__i + 3]; ++G__20773__i;}
  fs = new cljs.core.IndexedSeq(G__20773__a,0);
} 
return G__20767__delegate.call(this,f1,f2,f3,fs);};
G__20767.cljs$lang$maxFixedArity = 3;
G__20767.cljs$lang$applyTo = (function (arglist__20774){
var f1 = cljs.core.first(arglist__20774);
arglist__20774 = cljs.core.next(arglist__20774);
var f2 = cljs.core.first(arglist__20774);
arglist__20774 = cljs.core.next(arglist__20774);
var f3 = cljs.core.first(arglist__20774);
var fs = cljs.core.rest(arglist__20774);
return G__20767__delegate(f1,f2,f3,fs);
});
G__20767.cljs$core$IFn$_invoke$arity$variadic = G__20767__delegate;
return G__20767;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__20775 = null;
if (arguments.length > 3) {
var G__20776__i = 0, G__20776__a = new Array(arguments.length -  3);
while (G__20776__i < G__20776__a.length) {G__20776__a[G__20776__i] = arguments[G__20776__i + 3]; ++G__20776__i;}
G__20775 = new cljs.core.IndexedSeq(G__20776__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__20775);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__20861 = null;
var G__20861__0 = (function (){
var G__20819 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20819) : f.call(null,G__20819));
});
var G__20861__1 = (function (x){
var G__20820 = arg1;
var G__20821 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20820,G__20821) : f.call(null,G__20820,G__20821));
});
var G__20861__2 = (function (x,y){
var G__20822 = arg1;
var G__20823 = x;
var G__20824 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20822,G__20823,G__20824) : f.call(null,G__20822,G__20823,G__20824));
});
var G__20861__3 = (function (x,y,z){
var G__20825 = arg1;
var G__20826 = x;
var G__20827 = y;
var G__20828 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20825,G__20826,G__20827,G__20828) : f.call(null,G__20825,G__20826,G__20827,G__20828));
});
var G__20861__4 = (function() { 
var G__20862__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__20862 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20863__i = 0, G__20863__a = new Array(arguments.length -  3);
while (G__20863__i < G__20863__a.length) {G__20863__a[G__20863__i] = arguments[G__20863__i + 3]; ++G__20863__i;}
  args = new cljs.core.IndexedSeq(G__20863__a,0);
} 
return G__20862__delegate.call(this,x,y,z,args);};
G__20862.cljs$lang$maxFixedArity = 3;
G__20862.cljs$lang$applyTo = (function (arglist__20864){
var x = cljs.core.first(arglist__20864);
arglist__20864 = cljs.core.next(arglist__20864);
var y = cljs.core.first(arglist__20864);
arglist__20864 = cljs.core.next(arglist__20864);
var z = cljs.core.first(arglist__20864);
var args = cljs.core.rest(arglist__20864);
return G__20862__delegate(x,y,z,args);
});
G__20862.cljs$core$IFn$_invoke$arity$variadic = G__20862__delegate;
return G__20862;
})()
;
G__20861 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20861__0.call(this);
case 1:
return G__20861__1.call(this,x);
case 2:
return G__20861__2.call(this,x,y);
case 3:
return G__20861__3.call(this,x,y,z);
default:
var G__20865 = null;
if (arguments.length > 3) {
var G__20866__i = 0, G__20866__a = new Array(arguments.length -  3);
while (G__20866__i < G__20866__a.length) {G__20866__a[G__20866__i] = arguments[G__20866__i + 3]; ++G__20866__i;}
G__20865 = new cljs.core.IndexedSeq(G__20866__a,0);
}
return G__20861__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20865);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20861.cljs$lang$maxFixedArity = 3;
G__20861.cljs$lang$applyTo = G__20861__4.cljs$lang$applyTo;
G__20861.cljs$core$IFn$_invoke$arity$0 = G__20861__0;
G__20861.cljs$core$IFn$_invoke$arity$1 = G__20861__1;
G__20861.cljs$core$IFn$_invoke$arity$2 = G__20861__2;
G__20861.cljs$core$IFn$_invoke$arity$3 = G__20861__3;
G__20861.cljs$core$IFn$_invoke$arity$variadic = G__20861__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20861;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__20867 = null;
var G__20867__0 = (function (){
var G__20829 = arg1;
var G__20830 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20829,G__20830) : f.call(null,G__20829,G__20830));
});
var G__20867__1 = (function (x){
var G__20831 = arg1;
var G__20832 = arg2;
var G__20833 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20831,G__20832,G__20833) : f.call(null,G__20831,G__20832,G__20833));
});
var G__20867__2 = (function (x,y){
var G__20834 = arg1;
var G__20835 = arg2;
var G__20836 = x;
var G__20837 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20834,G__20835,G__20836,G__20837) : f.call(null,G__20834,G__20835,G__20836,G__20837));
});
var G__20867__3 = (function (x,y,z){
var G__20838 = arg1;
var G__20839 = arg2;
var G__20840 = x;
var G__20841 = y;
var G__20842 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20838,G__20839,G__20840,G__20841,G__20842) : f.call(null,G__20838,G__20839,G__20840,G__20841,G__20842));
});
var G__20867__4 = (function() { 
var G__20868__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__20868 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20869__i = 0, G__20869__a = new Array(arguments.length -  3);
while (G__20869__i < G__20869__a.length) {G__20869__a[G__20869__i] = arguments[G__20869__i + 3]; ++G__20869__i;}
  args = new cljs.core.IndexedSeq(G__20869__a,0);
} 
return G__20868__delegate.call(this,x,y,z,args);};
G__20868.cljs$lang$maxFixedArity = 3;
G__20868.cljs$lang$applyTo = (function (arglist__20870){
var x = cljs.core.first(arglist__20870);
arglist__20870 = cljs.core.next(arglist__20870);
var y = cljs.core.first(arglist__20870);
arglist__20870 = cljs.core.next(arglist__20870);
var z = cljs.core.first(arglist__20870);
var args = cljs.core.rest(arglist__20870);
return G__20868__delegate(x,y,z,args);
});
G__20868.cljs$core$IFn$_invoke$arity$variadic = G__20868__delegate;
return G__20868;
})()
;
G__20867 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20867__0.call(this);
case 1:
return G__20867__1.call(this,x);
case 2:
return G__20867__2.call(this,x,y);
case 3:
return G__20867__3.call(this,x,y,z);
default:
var G__20871 = null;
if (arguments.length > 3) {
var G__20872__i = 0, G__20872__a = new Array(arguments.length -  3);
while (G__20872__i < G__20872__a.length) {G__20872__a[G__20872__i] = arguments[G__20872__i + 3]; ++G__20872__i;}
G__20871 = new cljs.core.IndexedSeq(G__20872__a,0);
}
return G__20867__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20871);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20867.cljs$lang$maxFixedArity = 3;
G__20867.cljs$lang$applyTo = G__20867__4.cljs$lang$applyTo;
G__20867.cljs$core$IFn$_invoke$arity$0 = G__20867__0;
G__20867.cljs$core$IFn$_invoke$arity$1 = G__20867__1;
G__20867.cljs$core$IFn$_invoke$arity$2 = G__20867__2;
G__20867.cljs$core$IFn$_invoke$arity$3 = G__20867__3;
G__20867.cljs$core$IFn$_invoke$arity$variadic = G__20867__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20867;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__20873 = null;
var G__20873__0 = (function (){
var G__20843 = arg1;
var G__20844 = arg2;
var G__20845 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20843,G__20844,G__20845) : f.call(null,G__20843,G__20844,G__20845));
});
var G__20873__1 = (function (x){
var G__20846 = arg1;
var G__20847 = arg2;
var G__20848 = arg3;
var G__20849 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__20846,G__20847,G__20848,G__20849) : f.call(null,G__20846,G__20847,G__20848,G__20849));
});
var G__20873__2 = (function (x,y){
var G__20850 = arg1;
var G__20851 = arg2;
var G__20852 = arg3;
var G__20853 = x;
var G__20854 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__20850,G__20851,G__20852,G__20853,G__20854) : f.call(null,G__20850,G__20851,G__20852,G__20853,G__20854));
});
var G__20873__3 = (function (x,y,z){
var G__20855 = arg1;
var G__20856 = arg2;
var G__20857 = arg3;
var G__20858 = x;
var G__20859 = y;
var G__20860 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__20855,G__20856,G__20857,G__20858,G__20859,G__20860) : f.call(null,G__20855,G__20856,G__20857,G__20858,G__20859,G__20860));
});
var G__20873__4 = (function() { 
var G__20874__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__20874 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__20875__i = 0, G__20875__a = new Array(arguments.length -  3);
while (G__20875__i < G__20875__a.length) {G__20875__a[G__20875__i] = arguments[G__20875__i + 3]; ++G__20875__i;}
  args = new cljs.core.IndexedSeq(G__20875__a,0);
} 
return G__20874__delegate.call(this,x,y,z,args);};
G__20874.cljs$lang$maxFixedArity = 3;
G__20874.cljs$lang$applyTo = (function (arglist__20876){
var x = cljs.core.first(arglist__20876);
arglist__20876 = cljs.core.next(arglist__20876);
var y = cljs.core.first(arglist__20876);
arglist__20876 = cljs.core.next(arglist__20876);
var z = cljs.core.first(arglist__20876);
var args = cljs.core.rest(arglist__20876);
return G__20874__delegate(x,y,z,args);
});
G__20874.cljs$core$IFn$_invoke$arity$variadic = G__20874__delegate;
return G__20874;
})()
;
G__20873 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__20873__0.call(this);
case 1:
return G__20873__1.call(this,x);
case 2:
return G__20873__2.call(this,x,y);
case 3:
return G__20873__3.call(this,x,y,z);
default:
var G__20877 = null;
if (arguments.length > 3) {
var G__20878__i = 0, G__20878__a = new Array(arguments.length -  3);
while (G__20878__i < G__20878__a.length) {G__20878__a[G__20878__i] = arguments[G__20878__i + 3]; ++G__20878__i;}
G__20877 = new cljs.core.IndexedSeq(G__20878__a,0);
}
return G__20873__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__20877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20873.cljs$lang$maxFixedArity = 3;
G__20873.cljs$lang$applyTo = G__20873__4.cljs$lang$applyTo;
G__20873.cljs$core$IFn$_invoke$arity$0 = G__20873__0;
G__20873.cljs$core$IFn$_invoke$arity$1 = G__20873__1;
G__20873.cljs$core$IFn$_invoke$arity$2 = G__20873__2;
G__20873.cljs$core$IFn$_invoke$arity$3 = G__20873__3;
G__20873.cljs$core$IFn$_invoke$arity$variadic = G__20873__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20873;
})()
});
var partial__5 = (function() { 
var G__20879__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__20880__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__20880 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__20881__i = 0, G__20881__a = new Array(arguments.length -  0);
while (G__20881__i < G__20881__a.length) {G__20881__a[G__20881__i] = arguments[G__20881__i + 0]; ++G__20881__i;}
  args = new cljs.core.IndexedSeq(G__20881__a,0);
} 
return G__20880__delegate.call(this,args);};
G__20880.cljs$lang$maxFixedArity = 0;
G__20880.cljs$lang$applyTo = (function (arglist__20882){
var args = cljs.core.seq(arglist__20882);
return G__20880__delegate(args);
});
G__20880.cljs$core$IFn$_invoke$arity$variadic = G__20880__delegate;
return G__20880;
})()
;
};
var G__20879 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__20883__i = 0, G__20883__a = new Array(arguments.length -  4);
while (G__20883__i < G__20883__a.length) {G__20883__a[G__20883__i] = arguments[G__20883__i + 4]; ++G__20883__i;}
  more = new cljs.core.IndexedSeq(G__20883__a,0);
} 
return G__20879__delegate.call(this,f,arg1,arg2,arg3,more);};
G__20879.cljs$lang$maxFixedArity = 4;
G__20879.cljs$lang$applyTo = (function (arglist__20884){
var f = cljs.core.first(arglist__20884);
arglist__20884 = cljs.core.next(arglist__20884);
var arg1 = cljs.core.first(arglist__20884);
arglist__20884 = cljs.core.next(arglist__20884);
var arg2 = cljs.core.first(arglist__20884);
arglist__20884 = cljs.core.next(arglist__20884);
var arg3 = cljs.core.first(arglist__20884);
var more = cljs.core.rest(arglist__20884);
return G__20879__delegate(f,arg1,arg2,arg3,more);
});
G__20879.cljs$core$IFn$_invoke$arity$variadic = G__20879__delegate;
return G__20879;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__20885 = null;
if (arguments.length > 4) {
var G__20886__i = 0, G__20886__a = new Array(arguments.length -  4);
while (G__20886__i < G__20886__a.length) {G__20886__a[G__20886__i] = arguments[G__20886__i + 4]; ++G__20886__i;}
G__20885 = new cljs.core.IndexedSeq(G__20886__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__20885);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__20919 = null;
var G__20919__1 = (function (a){
var G__20903 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__20903) : f.call(null,G__20903));
});
var G__20919__2 = (function (a,b){
var G__20904 = (((a == null))?x:a);
var G__20905 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20904,G__20905) : f.call(null,G__20904,G__20905));
});
var G__20919__3 = (function (a,b,c){
var G__20906 = (((a == null))?x:a);
var G__20907 = b;
var G__20908 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20906,G__20907,G__20908) : f.call(null,G__20906,G__20907,G__20908));
});
var G__20919__4 = (function() { 
var G__20920__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__20920 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20921__i = 0, G__20921__a = new Array(arguments.length -  3);
while (G__20921__i < G__20921__a.length) {G__20921__a[G__20921__i] = arguments[G__20921__i + 3]; ++G__20921__i;}
  ds = new cljs.core.IndexedSeq(G__20921__a,0);
} 
return G__20920__delegate.call(this,a,b,c,ds);};
G__20920.cljs$lang$maxFixedArity = 3;
G__20920.cljs$lang$applyTo = (function (arglist__20922){
var a = cljs.core.first(arglist__20922);
arglist__20922 = cljs.core.next(arglist__20922);
var b = cljs.core.first(arglist__20922);
arglist__20922 = cljs.core.next(arglist__20922);
var c = cljs.core.first(arglist__20922);
var ds = cljs.core.rest(arglist__20922);
return G__20920__delegate(a,b,c,ds);
});
G__20920.cljs$core$IFn$_invoke$arity$variadic = G__20920__delegate;
return G__20920;
})()
;
G__20919 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__20919__1.call(this,a);
case 2:
return G__20919__2.call(this,a,b);
case 3:
return G__20919__3.call(this,a,b,c);
default:
var G__20923 = null;
if (arguments.length > 3) {
var G__20924__i = 0, G__20924__a = new Array(arguments.length -  3);
while (G__20924__i < G__20924__a.length) {G__20924__a[G__20924__i] = arguments[G__20924__i + 3]; ++G__20924__i;}
G__20923 = new cljs.core.IndexedSeq(G__20924__a,0);
}
return G__20919__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20923);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20919.cljs$lang$maxFixedArity = 3;
G__20919.cljs$lang$applyTo = G__20919__4.cljs$lang$applyTo;
G__20919.cljs$core$IFn$_invoke$arity$1 = G__20919__1;
G__20919.cljs$core$IFn$_invoke$arity$2 = G__20919__2;
G__20919.cljs$core$IFn$_invoke$arity$3 = G__20919__3;
G__20919.cljs$core$IFn$_invoke$arity$variadic = G__20919__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20919;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__20925 = null;
var G__20925__2 = (function (a,b){
var G__20909 = (((a == null))?x:a);
var G__20910 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20909,G__20910) : f.call(null,G__20909,G__20910));
});
var G__20925__3 = (function (a,b,c){
var G__20911 = (((a == null))?x:a);
var G__20912 = (((b == null))?y:b);
var G__20913 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20911,G__20912,G__20913) : f.call(null,G__20911,G__20912,G__20913));
});
var G__20925__4 = (function() { 
var G__20926__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__20926 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20927__i = 0, G__20927__a = new Array(arguments.length -  3);
while (G__20927__i < G__20927__a.length) {G__20927__a[G__20927__i] = arguments[G__20927__i + 3]; ++G__20927__i;}
  ds = new cljs.core.IndexedSeq(G__20927__a,0);
} 
return G__20926__delegate.call(this,a,b,c,ds);};
G__20926.cljs$lang$maxFixedArity = 3;
G__20926.cljs$lang$applyTo = (function (arglist__20928){
var a = cljs.core.first(arglist__20928);
arglist__20928 = cljs.core.next(arglist__20928);
var b = cljs.core.first(arglist__20928);
arglist__20928 = cljs.core.next(arglist__20928);
var c = cljs.core.first(arglist__20928);
var ds = cljs.core.rest(arglist__20928);
return G__20926__delegate(a,b,c,ds);
});
G__20926.cljs$core$IFn$_invoke$arity$variadic = G__20926__delegate;
return G__20926;
})()
;
G__20925 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20925__2.call(this,a,b);
case 3:
return G__20925__3.call(this,a,b,c);
default:
var G__20929 = null;
if (arguments.length > 3) {
var G__20930__i = 0, G__20930__a = new Array(arguments.length -  3);
while (G__20930__i < G__20930__a.length) {G__20930__a[G__20930__i] = arguments[G__20930__i + 3]; ++G__20930__i;}
G__20929 = new cljs.core.IndexedSeq(G__20930__a,0);
}
return G__20925__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20929);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20925.cljs$lang$maxFixedArity = 3;
G__20925.cljs$lang$applyTo = G__20925__4.cljs$lang$applyTo;
G__20925.cljs$core$IFn$_invoke$arity$2 = G__20925__2;
G__20925.cljs$core$IFn$_invoke$arity$3 = G__20925__3;
G__20925.cljs$core$IFn$_invoke$arity$variadic = G__20925__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20925;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__20931 = null;
var G__20931__2 = (function (a,b){
var G__20914 = (((a == null))?x:a);
var G__20915 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20914,G__20915) : f.call(null,G__20914,G__20915));
});
var G__20931__3 = (function (a,b,c){
var G__20916 = (((a == null))?x:a);
var G__20917 = (((b == null))?y:b);
var G__20918 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__20916,G__20917,G__20918) : f.call(null,G__20916,G__20917,G__20918));
});
var G__20931__4 = (function() { 
var G__20932__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__20932 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__20933__i = 0, G__20933__a = new Array(arguments.length -  3);
while (G__20933__i < G__20933__a.length) {G__20933__a[G__20933__i] = arguments[G__20933__i + 3]; ++G__20933__i;}
  ds = new cljs.core.IndexedSeq(G__20933__a,0);
} 
return G__20932__delegate.call(this,a,b,c,ds);};
G__20932.cljs$lang$maxFixedArity = 3;
G__20932.cljs$lang$applyTo = (function (arglist__20934){
var a = cljs.core.first(arglist__20934);
arglist__20934 = cljs.core.next(arglist__20934);
var b = cljs.core.first(arglist__20934);
arglist__20934 = cljs.core.next(arglist__20934);
var c = cljs.core.first(arglist__20934);
var ds = cljs.core.rest(arglist__20934);
return G__20932__delegate(a,b,c,ds);
});
G__20932.cljs$core$IFn$_invoke$arity$variadic = G__20932__delegate;
return G__20932;
})()
;
G__20931 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__20931__2.call(this,a,b);
case 3:
return G__20931__3.call(this,a,b,c);
default:
var G__20935 = null;
if (arguments.length > 3) {
var G__20936__i = 0, G__20936__a = new Array(arguments.length -  3);
while (G__20936__i < G__20936__a.length) {G__20936__a[G__20936__i] = arguments[G__20936__i + 3]; ++G__20936__i;}
G__20935 = new cljs.core.IndexedSeq(G__20936__a,0);
}
return G__20931__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__20935);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20931.cljs$lang$maxFixedArity = 3;
G__20931.cljs$lang$applyTo = G__20931__4.cljs$lang$applyTo;
G__20931.cljs$core$IFn$_invoke$arity$2 = G__20931__2;
G__20931.cljs$core$IFn$_invoke$arity$3 = G__20931__3;
G__20931.cljs$core$IFn$_invoke$arity$variadic = G__20931__4.cljs$core$IFn$_invoke$arity$variadic;
return G__20931;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__20967 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__20967) : cljs.core.volatile_BANG_.call(null,G__20967));
})();
return ((function (i){
return (function() {
var G__20997 = null;
var G__20997__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__20997__1 = (function (result){
var G__20968 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__20968) : rf.call(null,G__20968));
});
var G__20997__2 = (function (result,input){
var G__20969 = result;
var G__20970 = (function (){var G__20971 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__20972 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20971,G__20972) : f.call(null,G__20971,G__20972));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__20969,G__20970) : rf.call(null,G__20969,G__20970));
});
G__20997 = function(result,input){
switch(arguments.length){
case 0:
return G__20997__0.call(this);
case 1:
return G__20997__1.call(this,result);
case 2:
return G__20997__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__20997.cljs$core$IFn$_invoke$arity$0 = G__20997__0;
G__20997.cljs$core$IFn$_invoke$arity$1 = G__20997__1;
G__20997.cljs$core$IFn$_invoke$arity$2 = G__20997__2;
return G__20997;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___20998 = size;
var i_20999 = (0);
while(true){
if((i_20999 < n__4659__auto___20998)){
cljs.core.chunk_append(b,(function (){var G__20993 = (idx + i_20999);
var G__20994 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_20999);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20993,G__20994) : f.call(null,G__20993,G__20994));
})());

var G__21000 = (i_20999 + (1));
i_20999 = G__21000;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__20995 = idx;
var G__20996 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__20995,G__20996) : f.call(null,G__20995,G__20996));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__21019 = null;
var G__21019__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21019__1 = (function (result){
var G__21013 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21013) : rf.call(null,G__21013));
});
var G__21019__2 = (function (result,input){
var v = (function (){var G__21014 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21014) : f.call(null,G__21014));
})();
if((v == null)){
return result;
} else {
var G__21015 = result;
var G__21016 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21015,G__21016) : rf.call(null,G__21015,G__21016));
}
});
G__21019 = function(result,input){
switch(arguments.length){
case 0:
return G__21019__0.call(this);
case 1:
return G__21019__1.call(this,result);
case 2:
return G__21019__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21019.cljs$core$IFn$_invoke$arity$0 = G__21019__0;
G__21019.cljs$core$IFn$_invoke$arity$1 = G__21019__1;
G__21019.cljs$core$IFn$_invoke$arity$2 = G__21019__2;
return G__21019;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___21020 = size;
var i_21021 = (0);
while(true){
if((i_21021 < n__4659__auto___21020)){
var x_21022 = (function (){var G__21017 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21021);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21017) : f.call(null,G__21017));
})();
if((x_21022 == null)){
} else {
cljs.core.chunk_append(b,x_21022);
}

var G__21023 = (i_21021 + (1));
i_21021 = G__21023;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__21018 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21018) : f.call(null,G__21018));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__21024 = this$__$1;
return goog.getUid(G__21024);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__21025 = cljs.core.seq(self__.watches);
var chunk__21026 = null;
var count__21027 = (0);
var i__21028 = (0);
while(true){
if((i__21028 < count__21027)){
var vec__21029 = chunk__21026.cljs$core$IIndexed$_nth$arity$2(null,i__21028);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21029,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21029,(1),null);
var G__21030_21039 = key;
var G__21031_21040 = this$__$1;
var G__21032_21041 = oldval;
var G__21033_21042 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21030_21039,G__21031_21040,G__21032_21041,G__21033_21042) : f.call(null,G__21030_21039,G__21031_21040,G__21032_21041,G__21033_21042));

var G__21043 = seq__21025;
var G__21044 = chunk__21026;
var G__21045 = count__21027;
var G__21046 = (i__21028 + (1));
seq__21025 = G__21043;
chunk__21026 = G__21044;
count__21027 = G__21045;
i__21028 = G__21046;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__21025);
if(temp__4126__auto__){
var seq__21025__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__21025__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__21025__$1);
var G__21047 = cljs.core.chunk_rest(seq__21025__$1);
var G__21048 = c__4559__auto__;
var G__21049 = cljs.core.count(c__4559__auto__);
var G__21050 = (0);
seq__21025 = G__21047;
chunk__21026 = G__21048;
count__21027 = G__21049;
i__21028 = G__21050;
continue;
} else {
var vec__21034 = cljs.core.first(seq__21025__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21034,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__21034,(1),null);
var G__21035_21051 = key;
var G__21036_21052 = this$__$1;
var G__21037_21053 = oldval;
var G__21038_21054 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__21035_21051,G__21036_21052,G__21037_21053,G__21038_21054) : f.call(null,G__21035_21051,G__21036_21052,G__21037_21053,G__21038_21054));

var G__21055 = cljs.core.next(seq__21025__$1);
var G__21056 = null;
var G__21057 = (0);
var G__21058 = (0);
seq__21025 = G__21055;
chunk__21026 = G__21056;
count__21027 = G__21057;
i__21028 = G__21058;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__21062__delegate = function (x,p__21059){
var map__21061 = p__21059;
var map__21061__$1 = ((cljs.core.seq_QMARK_(map__21061))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__21061):map__21061);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21061__$1,cljs.core.constant$keyword$93);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__21061__$1,cljs.core.constant$keyword$83);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__21062 = function (x,var_args){
var p__21059 = null;
if (arguments.length > 1) {
var G__21063__i = 0, G__21063__a = new Array(arguments.length -  1);
while (G__21063__i < G__21063__a.length) {G__21063__a[G__21063__i] = arguments[G__21063__i + 1]; ++G__21063__i;}
  p__21059 = new cljs.core.IndexedSeq(G__21063__a,0);
} 
return G__21062__delegate.call(this,x,p__21059);};
G__21062.cljs$lang$maxFixedArity = 1;
G__21062.cljs$lang$applyTo = (function (arglist__21064){
var x = cljs.core.first(arglist__21064);
var p__21059 = cljs.core.rest(arglist__21064);
return G__21062__delegate(x,p__21059);
});
G__21062.cljs$core$IFn$_invoke$arity$variadic = G__21062__delegate;
return G__21062;
})()
;
atom = function(x,var_args){
var p__21059 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__21065 = null;
if (arguments.length > 1) {
var G__21066__i = 0, G__21066__a = new Array(arguments.length -  1);
while (G__21066__i < G__21066__a.length) {G__21066__a[G__21066__i] = arguments[G__21066__i + 1]; ++G__21066__i;}
G__21065 = new cljs.core.IndexedSeq(G__21066__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__21065);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__21069 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__21069) : validate.call(null,G__21069));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__21070 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__21070) : cljs.core.pr_str.call(null,G__21070));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21077 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__21077) : f.call(null,G__21077));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21078 = a.state;
var G__21079 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21078,G__21079) : f.call(null,G__21078,G__21079));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__21080 = a.state;
var G__21081 = x;
var G__21082 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__21080,G__21081,G__21082) : f.call(null,G__21080,G__21081,G__21082));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__21083__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__21083 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__21084__i = 0, G__21084__a = new Array(arguments.length -  4);
while (G__21084__i < G__21084__a.length) {G__21084__a[G__21084__i] = arguments[G__21084__i + 4]; ++G__21084__i;}
  more = new cljs.core.IndexedSeq(G__21084__a,0);
} 
return G__21083__delegate.call(this,a,f,x,y,more);};
G__21083.cljs$lang$maxFixedArity = 4;
G__21083.cljs$lang$applyTo = (function (arglist__21085){
var a = cljs.core.first(arglist__21085);
arglist__21085 = cljs.core.next(arglist__21085);
var f = cljs.core.first(arglist__21085);
arglist__21085 = cljs.core.next(arglist__21085);
var x = cljs.core.first(arglist__21085);
arglist__21085 = cljs.core.next(arglist__21085);
var y = cljs.core.first(arglist__21085);
var more = cljs.core.rest(arglist__21085);
return G__21083__delegate(a,f,x,y,more);
});
G__21083.cljs$core$IFn$_invoke$arity$variadic = G__21083__delegate;
return G__21083;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__21086 = null;
if (arguments.length > 4) {
var G__21087__i = 0, G__21087__a = new Array(arguments.length -  4);
while (G__21087__i < G__21087__a.length) {G__21087__a[G__21087__i] = arguments[G__21087__i + 4]; ++G__21087__i;}
G__21086 = new cljs.core.IndexedSeq(G__21087__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__21086);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__21154 = null;
var G__21154__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__21154__1 = (function (result){
var G__21121 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__21121) : rf.call(null,G__21121));
});
var G__21154__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__21122 = i;
var G__21123 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21122,G__21123) : f.call(null,G__21122,G__21123));
})();
if((v == null)){
return result;
} else {
var G__21124 = result;
var G__21125 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__21124,G__21125) : rf.call(null,G__21124,G__21125));
}
});
G__21154 = function(result,input){
switch(arguments.length){
case 0:
return G__21154__0.call(this);
case 1:
return G__21154__1.call(this,result);
case 2:
return G__21154__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__21154.cljs$core$IFn$_invoke$arity$0 = G__21154__0;
G__21154.cljs$core$IFn$_invoke$arity$1 = G__21154__1;
G__21154.cljs$core$IFn$_invoke$arity$2 = G__21154__2;
return G__21154;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___21155 = size;
var i_21156 = (0);
while(true){
if((i_21156 < n__4659__auto___21155)){
var x_21157 = (function (){var G__21150 = (idx + i_21156);
var G__21151 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_21156);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21150,G__21151) : f.call(null,G__21150,G__21151));
})();
if((x_21157 == null)){
} else {
cljs.core.chunk_append(b,x_21157);
}

var G__21158 = (i_21156 + (1));
i_21156 = G__21158;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__21152 = idx;
var G__21153 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__21152,G__21153) : f.call(null,G__21152,G__21153));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__21372 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21372) : p.call(null,G__21372));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21374 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21374) : p.call(null,G__21374));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__21375 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21375) : p.call(null,G__21375));
} else {
return and__3760__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21377 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21377) : p.call(null,G__21377));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21379 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21379) : p.call(null,G__21379));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__21380 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21380) : p.call(null,G__21380));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__21549__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__21549 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21550__i = 0, G__21550__a = new Array(arguments.length -  3);
while (G__21550__i < G__21550__a.length) {G__21550__a[G__21550__i] = arguments[G__21550__i + 3]; ++G__21550__i;}
  args = new cljs.core.IndexedSeq(G__21550__a,0);
} 
return G__21549__delegate.call(this,x,y,z,args);};
G__21549.cljs$lang$maxFixedArity = 3;
G__21549.cljs$lang$applyTo = (function (arglist__21551){
var x = cljs.core.first(arglist__21551);
arglist__21551 = cljs.core.next(arglist__21551);
var y = cljs.core.first(arglist__21551);
arglist__21551 = cljs.core.next(arglist__21551);
var z = cljs.core.first(arglist__21551);
var args = cljs.core.rest(arglist__21551);
return G__21549__delegate(x,y,z,args);
});
G__21549.cljs$core$IFn$_invoke$arity$variadic = G__21549__delegate;
return G__21549;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__21552 = null;
if (arguments.length > 3) {
var G__21553__i = 0, G__21553__a = new Array(arguments.length -  3);
while (G__21553__i < G__21553__a.length) {G__21553__a[G__21553__i] = arguments[G__21553__i + 3]; ++G__21553__i;}
G__21552 = new cljs.core.IndexedSeq(G__21553__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21552);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21412 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21412) : p1.call(null,G__21412));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__21413 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21413) : p2.call(null,G__21413));
} else {
return and__3760__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21415 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21415) : p1.call(null,G__21415));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21417 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21417) : p1.call(null,G__21417));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__21419 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21419) : p2.call(null,G__21419));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var G__21420 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21420) : p2.call(null,G__21420));
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21422 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21422) : p1.call(null,G__21422));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21424 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21424) : p1.call(null,G__21424));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__21426 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21426) : p1.call(null,G__21426));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var and__3760__auto____$3 = (function (){var G__21428 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21428) : p2.call(null,G__21428));
})();
if(cljs.core.truth_(and__3760__auto____$3)){
var and__3760__auto____$4 = (function (){var G__21430 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21430) : p2.call(null,G__21430));
})();
if(cljs.core.truth_(and__3760__auto____$4)){
var G__21431 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21431) : p2.call(null,G__21431));
} else {
return and__3760__auto____$4;
}
} else {
return and__3760__auto____$3;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__21554__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21159_SHARP_){
var and__3760__auto__ = (function (){var G__21436 = p1__21159_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21436) : p1.call(null,G__21436));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__21437 = p1__21159_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21437) : p2.call(null,G__21437));
} else {
return and__3760__auto__;
}
}),args)));
};
var G__21554 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21555__i = 0, G__21555__a = new Array(arguments.length -  3);
while (G__21555__i < G__21555__a.length) {G__21555__a[G__21555__i] = arguments[G__21555__i + 3]; ++G__21555__i;}
  args = new cljs.core.IndexedSeq(G__21555__a,0);
} 
return G__21554__delegate.call(this,x,y,z,args);};
G__21554.cljs$lang$maxFixedArity = 3;
G__21554.cljs$lang$applyTo = (function (arglist__21556){
var x = cljs.core.first(arglist__21556);
arglist__21556 = cljs.core.next(arglist__21556);
var y = cljs.core.first(arglist__21556);
arglist__21556 = cljs.core.next(arglist__21556);
var z = cljs.core.first(arglist__21556);
var args = cljs.core.rest(arglist__21556);
return G__21554__delegate(x,y,z,args);
});
G__21554.cljs$core$IFn$_invoke$arity$variadic = G__21554__delegate;
return G__21554;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__21557 = null;
if (arguments.length > 3) {
var G__21558__i = 0, G__21558__a = new Array(arguments.length -  3);
while (G__21558__i < G__21558__a.length) {G__21558__a[G__21558__i] = arguments[G__21558__i + 3]; ++G__21558__i;}
G__21557 = new cljs.core.IndexedSeq(G__21558__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21483 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21483) : p1.call(null,G__21483));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21485 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21485) : p2.call(null,G__21485));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__21486 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21486) : p3.call(null,G__21486));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21488 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21488) : p1.call(null,G__21488));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21490 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21490) : p2.call(null,G__21490));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__21492 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21492) : p3.call(null,G__21492));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var and__3760__auto____$3 = (function (){var G__21494 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21494) : p1.call(null,G__21494));
})();
if(cljs.core.truth_(and__3760__auto____$3)){
var and__3760__auto____$4 = (function (){var G__21496 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21496) : p2.call(null,G__21496));
})();
if(cljs.core.truth_(and__3760__auto____$4)){
var G__21497 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21497) : p3.call(null,G__21497));
} else {
return and__3760__auto____$4;
}
} else {
return and__3760__auto____$3;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__3760__auto__ = (function (){var G__21499 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21499) : p1.call(null,G__21499));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21501 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21501) : p2.call(null,G__21501));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var and__3760__auto____$2 = (function (){var G__21503 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21503) : p3.call(null,G__21503));
})();
if(cljs.core.truth_(and__3760__auto____$2)){
var and__3760__auto____$3 = (function (){var G__21505 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21505) : p1.call(null,G__21505));
})();
if(cljs.core.truth_(and__3760__auto____$3)){
var and__3760__auto____$4 = (function (){var G__21507 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21507) : p2.call(null,G__21507));
})();
if(cljs.core.truth_(and__3760__auto____$4)){
var and__3760__auto____$5 = (function (){var G__21509 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21509) : p3.call(null,G__21509));
})();
if(cljs.core.truth_(and__3760__auto____$5)){
var and__3760__auto____$6 = (function (){var G__21511 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21511) : p1.call(null,G__21511));
})();
if(cljs.core.truth_(and__3760__auto____$6)){
var and__3760__auto____$7 = (function (){var G__21513 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21513) : p2.call(null,G__21513));
})();
if(cljs.core.truth_(and__3760__auto____$7)){
var G__21514 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21514) : p3.call(null,G__21514));
} else {
return and__3760__auto____$7;
}
} else {
return and__3760__auto____$6;
}
} else {
return and__3760__auto____$5;
}
} else {
return and__3760__auto____$4;
}
} else {
return and__3760__auto____$3;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__21559__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__21160_SHARP_){
var and__3760__auto__ = (function (){var G__21521 = p1__21160_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21521) : p1.call(null,G__21521));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21523 = p1__21160_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21523) : p2.call(null,G__21523));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__21524 = p1__21160_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21524) : p3.call(null,G__21524));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
}),args)));
};
var G__21559 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21560__i = 0, G__21560__a = new Array(arguments.length -  3);
while (G__21560__i < G__21560__a.length) {G__21560__a[G__21560__i] = arguments[G__21560__i + 3]; ++G__21560__i;}
  args = new cljs.core.IndexedSeq(G__21560__a,0);
} 
return G__21559__delegate.call(this,x,y,z,args);};
G__21559.cljs$lang$maxFixedArity = 3;
G__21559.cljs$lang$applyTo = (function (arglist__21561){
var x = cljs.core.first(arglist__21561);
arglist__21561 = cljs.core.next(arglist__21561);
var y = cljs.core.first(arglist__21561);
arglist__21561 = cljs.core.next(arglist__21561);
var z = cljs.core.first(arglist__21561);
var args = cljs.core.rest(arglist__21561);
return G__21559__delegate(x,y,z,args);
});
G__21559.cljs$core$IFn$_invoke$arity$variadic = G__21559__delegate;
return G__21559;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__21562 = null;
if (arguments.length > 3) {
var G__21563__i = 0, G__21563__a = new Array(arguments.length -  3);
while (G__21563__i < G__21563__a.length) {G__21563__a[G__21563__i] = arguments[G__21563__i + 3]; ++G__21563__i;}
G__21562 = new cljs.core.IndexedSeq(G__21563__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__21564__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21161_SHARP_){
var G__21540 = x;
return (p1__21161_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21161_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21540) : p1__21161_SHARP_.call(null,G__21540));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21162_SHARP_){
var and__3760__auto__ = (function (){var G__21542 = x;
return (p1__21162_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21162_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21542) : p1__21162_SHARP_.call(null,G__21542));
})();
if(cljs.core.truth_(and__3760__auto__)){
var G__21543 = y;
return (p1__21162_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21162_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21543) : p1__21162_SHARP_.call(null,G__21543));
} else {
return and__3760__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21163_SHARP_){
var and__3760__auto__ = (function (){var G__21545 = x;
return (p1__21163_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21163_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21545) : p1__21163_SHARP_.call(null,G__21545));
})();
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__21547 = y;
return (p1__21163_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21163_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21547) : p1__21163_SHARP_.call(null,G__21547));
})();
if(cljs.core.truth_(and__3760__auto____$1)){
var G__21548 = z;
return (p1__21163_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21163_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21548) : p1__21163_SHARP_.call(null,G__21548));
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__21565__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__21164_SHARP_){
return cljs.core.every_QMARK_(p1__21164_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__21565 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21566__i = 0, G__21566__a = new Array(arguments.length -  3);
while (G__21566__i < G__21566__a.length) {G__21566__a[G__21566__i] = arguments[G__21566__i + 3]; ++G__21566__i;}
  args = new cljs.core.IndexedSeq(G__21566__a,0);
} 
return G__21565__delegate.call(this,x,y,z,args);};
G__21565.cljs$lang$maxFixedArity = 3;
G__21565.cljs$lang$applyTo = (function (arglist__21567){
var x = cljs.core.first(arglist__21567);
arglist__21567 = cljs.core.next(arglist__21567);
var y = cljs.core.first(arglist__21567);
arglist__21567 = cljs.core.next(arglist__21567);
var z = cljs.core.first(arglist__21567);
var args = cljs.core.rest(arglist__21567);
return G__21565__delegate(x,y,z,args);
});
G__21565.cljs$core$IFn$_invoke$arity$variadic = G__21565__delegate;
return G__21565;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__21568 = null;
if (arguments.length > 3) {
var G__21569__i = 0, G__21569__a = new Array(arguments.length -  3);
while (G__21569__i < G__21569__a.length) {G__21569__a[G__21569__i] = arguments[G__21569__i + 3]; ++G__21569__i;}
G__21568 = new cljs.core.IndexedSeq(G__21569__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21568);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__21564 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21570__i = 0, G__21570__a = new Array(arguments.length -  3);
while (G__21570__i < G__21570__a.length) {G__21570__a[G__21570__i] = arguments[G__21570__i + 3]; ++G__21570__i;}
  ps = new cljs.core.IndexedSeq(G__21570__a,0);
} 
return G__21564__delegate.call(this,p1,p2,p3,ps);};
G__21564.cljs$lang$maxFixedArity = 3;
G__21564.cljs$lang$applyTo = (function (arglist__21571){
var p1 = cljs.core.first(arglist__21571);
arglist__21571 = cljs.core.next(arglist__21571);
var p2 = cljs.core.first(arglist__21571);
arglist__21571 = cljs.core.next(arglist__21571);
var p3 = cljs.core.first(arglist__21571);
var ps = cljs.core.rest(arglist__21571);
return G__21564__delegate(p1,p2,p3,ps);
});
G__21564.cljs$core$IFn$_invoke$arity$variadic = G__21564__delegate;
return G__21564;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__21572 = null;
if (arguments.length > 3) {
var G__21573__i = 0, G__21573__a = new Array(arguments.length -  3);
while (G__21573__i < G__21573__a.length) {G__21573__a[G__21573__i] = arguments[G__21573__i + 3]; ++G__21573__i;}
G__21572 = new cljs.core.IndexedSeq(G__21573__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21572);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__21779 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21779) : p.call(null,G__21779));
});
var sp1__2 = (function (x,y){
var or__3772__auto__ = (function (){var G__21781 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21781) : p.call(null,G__21781));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__21782 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21782) : p.call(null,G__21782));
}
});
var sp1__3 = (function (x,y,z){
var or__3772__auto__ = (function (){var G__21784 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21784) : p.call(null,G__21784));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21786 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21786) : p.call(null,G__21786));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__21787 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__21787) : p.call(null,G__21787));
}
}
});
var sp1__4 = (function() { 
var G__21948__delegate = function (x,y,z,args){
var or__3772__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__21948 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21949__i = 0, G__21949__a = new Array(arguments.length -  3);
while (G__21949__i < G__21949__a.length) {G__21949__a[G__21949__i] = arguments[G__21949__i + 3]; ++G__21949__i;}
  args = new cljs.core.IndexedSeq(G__21949__a,0);
} 
return G__21948__delegate.call(this,x,y,z,args);};
G__21948.cljs$lang$maxFixedArity = 3;
G__21948.cljs$lang$applyTo = (function (arglist__21950){
var x = cljs.core.first(arglist__21950);
arglist__21950 = cljs.core.next(arglist__21950);
var y = cljs.core.first(arglist__21950);
arglist__21950 = cljs.core.next(arglist__21950);
var z = cljs.core.first(arglist__21950);
var args = cljs.core.rest(arglist__21950);
return G__21948__delegate(x,y,z,args);
});
G__21948.cljs$core$IFn$_invoke$arity$variadic = G__21948__delegate;
return G__21948;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__21951 = null;
if (arguments.length > 3) {
var G__21952__i = 0, G__21952__a = new Array(arguments.length -  3);
while (G__21952__i < G__21952__a.length) {G__21952__a[G__21952__i] = arguments[G__21952__i + 3]; ++G__21952__i;}
G__21951 = new cljs.core.IndexedSeq(G__21952__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21951);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__3772__auto__ = (function (){var G__21819 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21819) : p1.call(null,G__21819));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__21820 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21820) : p2.call(null,G__21820));
}
});
var sp2__2 = (function (x,y){
var or__3772__auto__ = (function (){var G__21822 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21822) : p1.call(null,G__21822));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21824 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21824) : p1.call(null,G__21824));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__21826 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21826) : p2.call(null,G__21826));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var G__21827 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21827) : p2.call(null,G__21827));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__3772__auto__ = (function (){var G__21829 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21829) : p1.call(null,G__21829));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21831 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21831) : p1.call(null,G__21831));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__21833 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21833) : p1.call(null,G__21833));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var or__3772__auto____$3 = (function (){var G__21835 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21835) : p2.call(null,G__21835));
})();
if(cljs.core.truth_(or__3772__auto____$3)){
return or__3772__auto____$3;
} else {
var or__3772__auto____$4 = (function (){var G__21837 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21837) : p2.call(null,G__21837));
})();
if(cljs.core.truth_(or__3772__auto____$4)){
return or__3772__auto____$4;
} else {
var G__21838 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21838) : p2.call(null,G__21838));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__21953__delegate = function (x,y,z,args){
var or__3772__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(((function (or__3772__auto__){
return (function (p1__21574_SHARP_){
var or__3772__auto____$1 = (function (){var G__21840 = p1__21574_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21840) : p1.call(null,G__21840));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__21841 = p1__21574_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21841) : p2.call(null,G__21841));
}
});})(or__3772__auto__))
,args);
}
};
var G__21953 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21954__i = 0, G__21954__a = new Array(arguments.length -  3);
while (G__21954__i < G__21954__a.length) {G__21954__a[G__21954__i] = arguments[G__21954__i + 3]; ++G__21954__i;}
  args = new cljs.core.IndexedSeq(G__21954__a,0);
} 
return G__21953__delegate.call(this,x,y,z,args);};
G__21953.cljs$lang$maxFixedArity = 3;
G__21953.cljs$lang$applyTo = (function (arglist__21955){
var x = cljs.core.first(arglist__21955);
arglist__21955 = cljs.core.next(arglist__21955);
var y = cljs.core.first(arglist__21955);
arglist__21955 = cljs.core.next(arglist__21955);
var z = cljs.core.first(arglist__21955);
var args = cljs.core.rest(arglist__21955);
return G__21953__delegate(x,y,z,args);
});
G__21953.cljs$core$IFn$_invoke$arity$variadic = G__21953__delegate;
return G__21953;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__21956 = null;
if (arguments.length > 3) {
var G__21957__i = 0, G__21957__a = new Array(arguments.length -  3);
while (G__21957__i < G__21957__a.length) {G__21957__a[G__21957__i] = arguments[G__21957__i + 3]; ++G__21957__i;}
G__21956 = new cljs.core.IndexedSeq(G__21957__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21956);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__3772__auto__ = (function (){var G__21887 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21887) : p1.call(null,G__21887));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21889 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21889) : p2.call(null,G__21889));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__21890 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21890) : p3.call(null,G__21890));
}
}
});
var sp3__2 = (function (x,y){
var or__3772__auto__ = (function (){var G__21892 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21892) : p1.call(null,G__21892));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21894 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21894) : p2.call(null,G__21894));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__21896 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21896) : p3.call(null,G__21896));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var or__3772__auto____$3 = (function (){var G__21898 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21898) : p1.call(null,G__21898));
})();
if(cljs.core.truth_(or__3772__auto____$3)){
return or__3772__auto____$3;
} else {
var or__3772__auto____$4 = (function (){var G__21900 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21900) : p2.call(null,G__21900));
})();
if(cljs.core.truth_(or__3772__auto____$4)){
return or__3772__auto____$4;
} else {
var G__21901 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21901) : p3.call(null,G__21901));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__3772__auto__ = (function (){var G__21903 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21903) : p1.call(null,G__21903));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21905 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21905) : p2.call(null,G__21905));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__21907 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21907) : p3.call(null,G__21907));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var or__3772__auto____$3 = (function (){var G__21909 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21909) : p1.call(null,G__21909));
})();
if(cljs.core.truth_(or__3772__auto____$3)){
return or__3772__auto____$3;
} else {
var or__3772__auto____$4 = (function (){var G__21911 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21911) : p2.call(null,G__21911));
})();
if(cljs.core.truth_(or__3772__auto____$4)){
return or__3772__auto____$4;
} else {
var or__3772__auto____$5 = (function (){var G__21913 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21913) : p3.call(null,G__21913));
})();
if(cljs.core.truth_(or__3772__auto____$5)){
return or__3772__auto____$5;
} else {
var or__3772__auto____$6 = (function (){var G__21915 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21915) : p1.call(null,G__21915));
})();
if(cljs.core.truth_(or__3772__auto____$6)){
return or__3772__auto____$6;
} else {
var or__3772__auto____$7 = (function (){var G__21917 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21917) : p2.call(null,G__21917));
})();
if(cljs.core.truth_(or__3772__auto____$7)){
return or__3772__auto____$7;
} else {
var G__21918 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21918) : p3.call(null,G__21918));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__21958__delegate = function (x,y,z,args){
var or__3772__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(((function (or__3772__auto__){
return (function (p1__21575_SHARP_){
var or__3772__auto____$1 = (function (){var G__21920 = p1__21575_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__21920) : p1.call(null,G__21920));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var G__21922 = p1__21575_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__21922) : p2.call(null,G__21922));
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
var G__21923 = p1__21575_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__21923) : p3.call(null,G__21923));
}
}
});})(or__3772__auto__))
,args);
}
};
var G__21958 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21959__i = 0, G__21959__a = new Array(arguments.length -  3);
while (G__21959__i < G__21959__a.length) {G__21959__a[G__21959__i] = arguments[G__21959__i + 3]; ++G__21959__i;}
  args = new cljs.core.IndexedSeq(G__21959__a,0);
} 
return G__21958__delegate.call(this,x,y,z,args);};
G__21958.cljs$lang$maxFixedArity = 3;
G__21958.cljs$lang$applyTo = (function (arglist__21960){
var x = cljs.core.first(arglist__21960);
arglist__21960 = cljs.core.next(arglist__21960);
var y = cljs.core.first(arglist__21960);
arglist__21960 = cljs.core.next(arglist__21960);
var z = cljs.core.first(arglist__21960);
var args = cljs.core.rest(arglist__21960);
return G__21958__delegate(x,y,z,args);
});
G__21958.cljs$core$IFn$_invoke$arity$variadic = G__21958__delegate;
return G__21958;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__21961 = null;
if (arguments.length > 3) {
var G__21962__i = 0, G__21962__a = new Array(arguments.length -  3);
while (G__21962__i < G__21962__a.length) {G__21962__a[G__21962__i] = arguments[G__21962__i + 3]; ++G__21962__i;}
G__21961 = new cljs.core.IndexedSeq(G__21962__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21961);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__21963__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__21576_SHARP_){
var G__21939 = x;
return (p1__21576_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21576_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21939) : p1__21576_SHARP_.call(null,G__21939));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__21577_SHARP_){
var or__3772__auto__ = (function (){var G__21941 = x;
return (p1__21577_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21577_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21941) : p1__21577_SHARP_.call(null,G__21941));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var G__21942 = y;
return (p1__21577_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21577_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21942) : p1__21577_SHARP_.call(null,G__21942));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__21578_SHARP_){
var or__3772__auto__ = (function (){var G__21944 = x;
return (p1__21578_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21578_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21944) : p1__21578_SHARP_.call(null,G__21944));
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var G__21946 = y;
return (p1__21578_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21578_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21946) : p1__21578_SHARP_.call(null,G__21946));
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var G__21947 = z;
return (p1__21578_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__21578_SHARP_.cljs$core$IFn$_invoke$arity$1(G__21947) : p1__21578_SHARP_.call(null,G__21947));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__21964__delegate = function (x,y,z,args){
var or__3772__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.some(((function (or__3772__auto__,ps__$1){
return (function (p1__21579_SHARP_){
return cljs.core.some(p1__21579_SHARP_,args);
});})(or__3772__auto__,ps__$1))
,ps__$1);
}
};
var G__21964 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__21965__i = 0, G__21965__a = new Array(arguments.length -  3);
while (G__21965__i < G__21965__a.length) {G__21965__a[G__21965__i] = arguments[G__21965__i + 3]; ++G__21965__i;}
  args = new cljs.core.IndexedSeq(G__21965__a,0);
} 
return G__21964__delegate.call(this,x,y,z,args);};
G__21964.cljs$lang$maxFixedArity = 3;
G__21964.cljs$lang$applyTo = (function (arglist__21966){
var x = cljs.core.first(arglist__21966);
arglist__21966 = cljs.core.next(arglist__21966);
var y = cljs.core.first(arglist__21966);
arglist__21966 = cljs.core.next(arglist__21966);
var z = cljs.core.first(arglist__21966);
var args = cljs.core.rest(arglist__21966);
return G__21964__delegate(x,y,z,args);
});
G__21964.cljs$core$IFn$_invoke$arity$variadic = G__21964__delegate;
return G__21964;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__21967 = null;
if (arguments.length > 3) {
var G__21968__i = 0, G__21968__a = new Array(arguments.length -  3);
while (G__21968__i < G__21968__a.length) {G__21968__a[G__21968__i] = arguments[G__21968__i + 3]; ++G__21968__i;}
G__21967 = new cljs.core.IndexedSeq(G__21968__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__21967);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__21963 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__21969__i = 0, G__21969__a = new Array(arguments.length -  3);
while (G__21969__i < G__21969__a.length) {G__21969__a[G__21969__i] = arguments[G__21969__i + 3]; ++G__21969__i;}
  ps = new cljs.core.IndexedSeq(G__21969__a,0);
} 
return G__21963__delegate.call(this,p1,p2,p3,ps);};
G__21963.cljs$lang$maxFixedArity = 3;
G__21963.cljs$lang$applyTo = (function (arglist__21970){
var p1 = cljs.core.first(arglist__21970);
arglist__21970 = cljs.core.next(arglist__21970);
var p2 = cljs.core.first(arglist__21970);
arglist__21970 = cljs.core.next(arglist__21970);
var p3 = cljs.core.first(arglist__21970);
var ps = cljs.core.rest(arglist__21970);
return G__21963__delegate(p1,p2,p3,ps);
});
G__21963.cljs$core$IFn$_invoke$arity$variadic = G__21963__delegate;
return G__21963;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__21971 = null;
if (arguments.length > 3) {
var G__21972__i = 0, G__21972__a = new Array(arguments.length -  3);
while (G__21972__i < G__21972__a.length) {G__21972__a[G__21972__i] = arguments[G__21972__i + 3]; ++G__21972__i;}
G__21971 = new cljs.core.IndexedSeq(G__21972__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__21971);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__22027 = null;
var G__22027__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22027__1 = (function (result){
var G__22013 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22013) : rf.call(null,G__22013));
});
var G__22027__2 = (function (result,input){
var G__22014 = result;
var G__22015 = (function (){var G__22016 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22016) : f.call(null,G__22016));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22014,G__22015) : rf.call(null,G__22014,G__22015));
});
var G__22027__3 = (function() { 
var G__22028__delegate = function (result,input,inputs){
var G__22017 = result;
var G__22018 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22017,G__22018) : rf.call(null,G__22017,G__22018));
};
var G__22028 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__22029__i = 0, G__22029__a = new Array(arguments.length -  2);
while (G__22029__i < G__22029__a.length) {G__22029__a[G__22029__i] = arguments[G__22029__i + 2]; ++G__22029__i;}
  inputs = new cljs.core.IndexedSeq(G__22029__a,0);
} 
return G__22028__delegate.call(this,result,input,inputs);};
G__22028.cljs$lang$maxFixedArity = 2;
G__22028.cljs$lang$applyTo = (function (arglist__22030){
var result = cljs.core.first(arglist__22030);
arglist__22030 = cljs.core.next(arglist__22030);
var input = cljs.core.first(arglist__22030);
var inputs = cljs.core.rest(arglist__22030);
return G__22028__delegate(result,input,inputs);
});
G__22028.cljs$core$IFn$_invoke$arity$variadic = G__22028__delegate;
return G__22028;
})()
;
G__22027 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__22027__0.call(this);
case 1:
return G__22027__1.call(this,result);
case 2:
return G__22027__2.call(this,result,input);
default:
var G__22031 = null;
if (arguments.length > 2) {
var G__22032__i = 0, G__22032__a = new Array(arguments.length -  2);
while (G__22032__i < G__22032__a.length) {G__22032__a[G__22032__i] = arguments[G__22032__i + 2]; ++G__22032__i;}
G__22031 = new cljs.core.IndexedSeq(G__22032__a,0);
}
return G__22027__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__22031);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22027.cljs$lang$maxFixedArity = 2;
G__22027.cljs$lang$applyTo = G__22027__3.cljs$lang$applyTo;
G__22027.cljs$core$IFn$_invoke$arity$0 = G__22027__0;
G__22027.cljs$core$IFn$_invoke$arity$1 = G__22027__1;
G__22027.cljs$core$IFn$_invoke$arity$2 = G__22027__2;
G__22027.cljs$core$IFn$_invoke$arity$variadic = G__22027__3.cljs$core$IFn$_invoke$arity$variadic;
return G__22027;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___22033 = size;
var i_22034 = (0);
while(true){
if((i_22034 < n__4659__auto___22033)){
cljs.core.chunk_append(b,(function (){var G__22019 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22034);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22019) : f.call(null,G__22019));
})());

var G__22035 = (i_22034 + (1));
i_22034 = G__22035;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__22020 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22020) : f.call(null,G__22020));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__22021 = cljs.core.first(s1);
var G__22022 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22021,G__22022) : f.call(null,G__22021,G__22022));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__22023 = cljs.core.first(s1);
var G__22024 = cljs.core.first(s2);
var G__22025 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22023,G__22024,G__22025) : f.call(null,G__22023,G__22024,G__22025));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__22036__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__21973_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__21973_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__22036 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__22037__i = 0, G__22037__a = new Array(arguments.length -  4);
while (G__22037__i < G__22037__a.length) {G__22037__a[G__22037__i] = arguments[G__22037__i + 4]; ++G__22037__i;}
  colls = new cljs.core.IndexedSeq(G__22037__a,0);
} 
return G__22036__delegate.call(this,f,c1,c2,c3,colls);};
G__22036.cljs$lang$maxFixedArity = 4;
G__22036.cljs$lang$applyTo = (function (arglist__22038){
var f = cljs.core.first(arglist__22038);
arglist__22038 = cljs.core.next(arglist__22038);
var c1 = cljs.core.first(arglist__22038);
arglist__22038 = cljs.core.next(arglist__22038);
var c2 = cljs.core.first(arglist__22038);
arglist__22038 = cljs.core.next(arglist__22038);
var c3 = cljs.core.first(arglist__22038);
var colls = cljs.core.rest(arglist__22038);
return G__22036__delegate(f,c1,c2,c3,colls);
});
G__22036.cljs$core$IFn$_invoke$arity$variadic = G__22036__delegate;
return G__22036;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__22039 = null;
if (arguments.length > 4) {
var G__22040__i = 0, G__22040__a = new Array(arguments.length -  4);
while (G__22040__i < G__22040__a.length) {G__22040__a[G__22040__i] = arguments[G__22040__i + 4]; ++G__22040__i;}
G__22039 = new cljs.core.IndexedSeq(G__22040__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__22039);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__22049 = null;
var G__22049__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22049__1 = (function (result){
var G__22046 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22046) : rf.call(null,G__22046));
});
var G__22049__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__22047 = result;
var G__22048 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22047,G__22048) : rf.call(null,G__22047,G__22048));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__22049 = function(result,input){
switch(arguments.length){
case 0:
return G__22049__0.call(this);
case 1:
return G__22049__1.call(this,result);
case 2:
return G__22049__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22049.cljs$core$IFn$_invoke$arity$0 = G__22049__0;
G__22049.cljs$core$IFn$_invoke$arity$1 = G__22049__1;
G__22049.cljs$core$IFn$_invoke$arity$2 = G__22049__2;
return G__22049;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__22056 = null;
var G__22056__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22056__1 = (function (result){
var G__22053 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22053) : rf.call(null,G__22053));
});
var G__22056__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__22054 = result;
var G__22055 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22054,G__22055) : rf.call(null,G__22054,G__22055));
}
});
G__22056 = function(result,input){
switch(arguments.length){
case 0:
return G__22056__0.call(this);
case 1:
return G__22056__1.call(this,result);
case 2:
return G__22056__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22056.cljs$core$IFn$_invoke$arity$0 = G__22056__0;
G__22056.cljs$core$IFn$_invoke$arity$1 = G__22056__1;
G__22056.cljs$core$IFn$_invoke$arity$2 = G__22056__2;
return G__22056;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__22057 = (n__$1 - (1));
var G__22058 = cljs.core.rest(s);
n__$1 = G__22057;
coll__$1 = G__22058;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__22061 = cljs.core.next(s);
var G__22062 = cljs.core.next(lead);
s = G__22061;
lead = G__22062;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__22075 = null;
var G__22075__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22075__1 = (function (result){
var G__22069 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22069) : rf.call(null,G__22069));
});
var G__22075__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__3760__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__3760__auto__)){
var G__22070 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22070) : pred.call(null,G__22070));
} else {
return and__3760__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__22071 = result;
var G__22072 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22071,G__22072) : rf.call(null,G__22071,G__22072));
}
});
G__22075 = function(result,input){
switch(arguments.length){
case 0:
return G__22075__0.call(this);
case 1:
return G__22075__1.call(this,result);
case 2:
return G__22075__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22075.cljs$core$IFn$_invoke$arity$0 = G__22075__0;
G__22075.cljs$core$IFn$_invoke$arity$1 = G__22075__1;
G__22075.cljs$core$IFn$_invoke$arity$2 = G__22075__2;
return G__22075;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__3760__auto__ = s;
if(and__3760__auto__){
var G__22074 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__22074) : pred__$1.call(null,G__22074));
} else {
return and__3760__auto__;
}
})())){
var G__22076 = pred__$1;
var G__22077 = cljs.core.rest(s);
pred__$1 = G__22076;
coll__$1 = G__22077;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__22086 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22086) : f.call(null,G__22086));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__22089__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__22089 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__22090__i = 0, G__22090__a = new Array(arguments.length -  2);
while (G__22090__i < G__22090__a.length) {G__22090__a[G__22090__i] = arguments[G__22090__i + 2]; ++G__22090__i;}
  colls = new cljs.core.IndexedSeq(G__22090__a,0);
} 
return G__22089__delegate.call(this,c1,c2,colls);};
G__22089.cljs$lang$maxFixedArity = 2;
G__22089.cljs$lang$applyTo = (function (arglist__22091){
var c1 = cljs.core.first(arglist__22091);
arglist__22091 = cljs.core.next(arglist__22091);
var c2 = cljs.core.first(arglist__22091);
var colls = cljs.core.rest(arglist__22091);
return G__22089__delegate(c1,c2,colls);
});
G__22089.cljs$core$IFn$_invoke$arity$variadic = G__22089__delegate;
return G__22089;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__22092 = null;
if (arguments.length > 2) {
var G__22093__i = 0, G__22093__a = new Array(arguments.length -  2);
while (G__22093__i < G__22093__a.length) {G__22093__a[G__22093__i] = arguments[G__22093__i + 2]; ++G__22093__i;}
G__22092 = new cljs.core.IndexedSeq(G__22093__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__22092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__22108 = null;
var G__22108__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22108__1 = (function (result){
var G__22101 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22101) : rf.call(null,G__22101));
});
var G__22108__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__22102 = result;
var G__22103 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22102,G__22103) : rf.call(null,G__22102,G__22103));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__22104 = sepr;
var G__22105 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22104,G__22105) : rf.call(null,G__22104,G__22105));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__22106 = result;
var G__22107 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22106,G__22107) : rf.call(null,G__22106,G__22107));
}
});
G__22108 = function(result,input){
switch(arguments.length){
case 0:
return G__22108__0.call(this);
case 1:
return G__22108__1.call(this,result);
case 2:
return G__22108__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22108.cljs$core$IFn$_invoke$arity$0 = G__22108__0;
G__22108.cljs$core$IFn$_invoke$arity$1 = G__22108__1;
G__22108.cljs$core$IFn$_invoke$arity$2 = G__22108__2;
return G__22108;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__22117__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__22117 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__22118__i = 0, G__22118__a = new Array(arguments.length -  1);
while (G__22118__i < G__22118__a.length) {G__22118__a[G__22118__i] = arguments[G__22118__i + 1]; ++G__22118__i;}
  colls = new cljs.core.IndexedSeq(G__22118__a,0);
} 
return G__22117__delegate.call(this,f,colls);};
G__22117.cljs$lang$maxFixedArity = 1;
G__22117.cljs$lang$applyTo = (function (arglist__22119){
var f = cljs.core.first(arglist__22119);
var colls = cljs.core.rest(arglist__22119);
return G__22117__delegate(f,colls);
});
G__22117.cljs$core$IFn$_invoke$arity$variadic = G__22117__delegate;
return G__22117;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__22120 = null;
if (arguments.length > 1) {
var G__22121__i = 0, G__22121__a = new Array(arguments.length -  1);
while (G__22121__i < G__22121__a.length) {G__22121__a[G__22121__i] = arguments[G__22121__i + 1]; ++G__22121__i;}
G__22120 = new cljs.core.IndexedSeq(G__22121__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__22120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__22140 = null;
var G__22140__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22140__1 = (function (result){
var G__22134 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22134) : rf.call(null,G__22134));
});
var G__22140__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22135 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22135) : pred.call(null,G__22135));
})())){
var G__22136 = result;
var G__22137 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22136,G__22137) : rf.call(null,G__22136,G__22137));
} else {
return result;
}
});
G__22140 = function(result,input){
switch(arguments.length){
case 0:
return G__22140__0.call(this);
case 1:
return G__22140__1.call(this,result);
case 2:
return G__22140__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22140.cljs$core$IFn$_invoke$arity$0 = G__22140__0;
G__22140.cljs$core$IFn$_invoke$arity$1 = G__22140__1;
G__22140.cljs$core$IFn$_invoke$arity$2 = G__22140__2;
return G__22140;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__4659__auto___22141 = size;
var i_22142 = (0);
while(true){
if((i_22142 < n__4659__auto___22141)){
if(cljs.core.truth_((function (){var G__22138 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22142);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22138) : pred.call(null,G__22138));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_22142));
} else {
}

var G__22143 = (i_22142 + (1));
i_22142 = G__22143;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__22139 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22139) : pred.call(null,G__22139));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__22150 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__22150) : branch_QMARK_.call(null,G__22150));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__22151 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__22151) : children.call(null,G__22151));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__22152_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__22152_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__22155 = to;
if(G__22155){
var bit__4446__auto__ = (G__22155.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4446__auto__) || (G__22155.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__22156 = to;
if(G__22156){
var bit__4446__auto__ = (G__22156.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__4446__auto__) || (G__22156.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__22158 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22158) : f.call(null,G__22158));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__22159__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__22159 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__22160__i = 0, G__22160__a = new Array(arguments.length -  4);
while (G__22160__i < G__22160__a.length) {G__22160__a[G__22160__i] = arguments[G__22160__i + 4]; ++G__22160__i;}
  colls = new cljs.core.IndexedSeq(G__22160__a,0);
} 
return G__22159__delegate.call(this,f,c1,c2,c3,colls);};
G__22159.cljs$lang$maxFixedArity = 4;
G__22159.cljs$lang$applyTo = (function (arglist__22161){
var f = cljs.core.first(arglist__22161);
arglist__22161 = cljs.core.next(arglist__22161);
var c1 = cljs.core.first(arglist__22161);
arglist__22161 = cljs.core.next(arglist__22161);
var c2 = cljs.core.first(arglist__22161);
arglist__22161 = cljs.core.next(arglist__22161);
var c3 = cljs.core.first(arglist__22161);
var colls = cljs.core.rest(arglist__22161);
return G__22159__delegate(f,c1,c2,c3,colls);
});
G__22159.cljs$core$IFn$_invoke$arity$variadic = G__22159__delegate;
return G__22159;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__22162 = null;
if (arguments.length > 4) {
var G__22163__i = 0, G__22163__a = new Array(arguments.length -  4);
while (G__22163__i < G__22163__a.length) {G__22163__a[G__22163__i] = arguments[G__22163__i + 4]; ++G__22163__i;}
G__22162 = new cljs.core.IndexedSeq(G__22163__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__22162);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__22165 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22165) : pred.call(null,G__22165));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__22180 = m__$1;
if(G__22180){
var bit__4453__auto__ = (G__22180.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__4453__auto__) || (G__22180.cljs$core$ILookup$)){
return true;
} else {
if((!G__22180.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22180);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__22180);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__22181 = sentinel;
var G__22182 = m__$2;
var G__22183 = cljs.core.next(ks__$1);
sentinel = G__22181;
m__$1 = G__22182;
ks__$1 = G__22183;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__22184,v){
var vec__22189 = p__22184;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22189,(0),null);
var ks = cljs.core.nthnext(vec__22189,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__22190,f){
var vec__22228 = p__22190;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22228,(0),null);
var ks = cljs.core.nthnext(vec__22228,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22229 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22229) : f.call(null,G__22229));
})());
}
});
var update_in__4 = (function (m,p__22191,f,a){
var vec__22230 = p__22191;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22230,(0),null);
var ks = cljs.core.nthnext(vec__22230,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22231 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22232 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22231,G__22232) : f.call(null,G__22231,G__22232));
})());
}
});
var update_in__5 = (function (m,p__22192,f,a,b){
var vec__22233 = p__22192;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22233,(0),null);
var ks = cljs.core.nthnext(vec__22233,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22234 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22235 = a;
var G__22236 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22234,G__22235,G__22236) : f.call(null,G__22234,G__22235,G__22236));
})());
}
});
var update_in__6 = (function (m,p__22193,f,a,b,c){
var vec__22237 = p__22193;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22237,(0),null);
var ks = cljs.core.nthnext(vec__22237,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22238 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22239 = a;
var G__22240 = b;
var G__22241 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22238,G__22239,G__22240,G__22241) : f.call(null,G__22238,G__22239,G__22240,G__22241));
})());
}
});
var update_in__7 = (function() { 
var G__22243__delegate = function (m,p__22194,f,a,b,c,args){
var vec__22242 = p__22194;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22242,(0),null);
var ks = cljs.core.nthnext(vec__22242,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__22243 = function (m,p__22194,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__22244__i = 0, G__22244__a = new Array(arguments.length -  6);
while (G__22244__i < G__22244__a.length) {G__22244__a[G__22244__i] = arguments[G__22244__i + 6]; ++G__22244__i;}
  args = new cljs.core.IndexedSeq(G__22244__a,0);
} 
return G__22243__delegate.call(this,m,p__22194,f,a,b,c,args);};
G__22243.cljs$lang$maxFixedArity = 6;
G__22243.cljs$lang$applyTo = (function (arglist__22245){
var m = cljs.core.first(arglist__22245);
arglist__22245 = cljs.core.next(arglist__22245);
var p__22194 = cljs.core.first(arglist__22245);
arglist__22245 = cljs.core.next(arglist__22245);
var f = cljs.core.first(arglist__22245);
arglist__22245 = cljs.core.next(arglist__22245);
var a = cljs.core.first(arglist__22245);
arglist__22245 = cljs.core.next(arglist__22245);
var b = cljs.core.first(arglist__22245);
arglist__22245 = cljs.core.next(arglist__22245);
var c = cljs.core.first(arglist__22245);
var args = cljs.core.rest(arglist__22245);
return G__22243__delegate(m,p__22194,f,a,b,c,args);
});
G__22243.cljs$core$IFn$_invoke$arity$variadic = G__22243__delegate;
return G__22243;
})()
;
update_in = function(m,p__22194,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__22194,f);
case 4:
return update_in__4.call(this,m,p__22194,f,a);
case 5:
return update_in__5.call(this,m,p__22194,f,a,b);
case 6:
return update_in__6.call(this,m,p__22194,f,a,b,c);
default:
var G__22246 = null;
if (arguments.length > 6) {
var G__22247__i = 0, G__22247__a = new Array(arguments.length -  6);
while (G__22247__i < G__22247__a.length) {G__22247__a[G__22247__i] = arguments[G__22247__i + 6]; ++G__22247__i;}
G__22246 = new cljs.core.IndexedSeq(G__22247__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__22194,f,a,b,c, G__22246);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22258 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22258) : f.call(null,G__22258));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22259 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22260 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22259,G__22260) : f.call(null,G__22259,G__22260));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22261 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22262 = x;
var G__22263 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22261,G__22262,G__22263) : f.call(null,G__22261,G__22262,G__22263));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22264 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22265 = x;
var G__22266 = y;
var G__22267 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__22264,G__22265,G__22266,G__22267) : f.call(null,G__22264,G__22265,G__22266,G__22267));
})());
});
var update__7 = (function() { 
var G__22268__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__22268 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__22269__i = 0, G__22269__a = new Array(arguments.length -  6);
while (G__22269__i < G__22269__a.length) {G__22269__a[G__22269__i] = arguments[G__22269__i + 6]; ++G__22269__i;}
  more = new cljs.core.IndexedSeq(G__22269__a,0);
} 
return G__22268__delegate.call(this,m,k,f,x,y,z,more);};
G__22268.cljs$lang$maxFixedArity = 6;
G__22268.cljs$lang$applyTo = (function (arglist__22270){
var m = cljs.core.first(arglist__22270);
arglist__22270 = cljs.core.next(arglist__22270);
var k = cljs.core.first(arglist__22270);
arglist__22270 = cljs.core.next(arglist__22270);
var f = cljs.core.first(arglist__22270);
arglist__22270 = cljs.core.next(arglist__22270);
var x = cljs.core.first(arglist__22270);
arglist__22270 = cljs.core.next(arglist__22270);
var y = cljs.core.first(arglist__22270);
arglist__22270 = cljs.core.next(arglist__22270);
var z = cljs.core.first(arglist__22270);
var more = cljs.core.rest(arglist__22270);
return G__22268__delegate(m,k,f,x,y,z,more);
});
G__22268.cljs$core$IFn$_invoke$arity$variadic = G__22268__delegate;
return G__22268;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__22271 = null;
if (arguments.length > 6) {
var G__22272__i = 0, G__22272__a = new Array(arguments.length -  6);
while (G__22272__i < G__22272__a.length) {G__22272__a[G__22272__i] = arguments[G__22272__i + 6]; ++G__22272__i;}
G__22271 = new cljs.core.IndexedSeq(G__22272__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__22271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__22273 = (ll - (5));
var G__22274 = r;
ll = G__22273;
ret = G__22274;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__22279 = cljs.core.pv_aget(node,(0));
var G__22280 = (level - (5));
node = G__22279;
level = G__22280;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__22281 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__22282 = (level - (5));
node = G__22281;
level = G__22282;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__22292 = init__$2;
var G__22293 = (j + i);
var G__22294 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22292,G__22293,G__22294) : f.call(null,G__22292,G__22293,G__22294));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__22305 = (j + (1));
var G__22306 = init__$3;
j = G__22305;
init__$2 = G__22306;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22295 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22295) : cljs.core.deref.call(null,G__22295));
} else {
var G__22307 = (i + len);
var G__22308 = init__$2;
i = G__22307;
init__$1 = G__22308;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__22296 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__22296) : cljs.core.tv_editable_root.call(null,G__22296));
})(),(function (){var G__22297 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__22297) : cljs.core.tv_editable_tail.call(null,G__22297));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__22298 = init__$2;
var G__22299 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22298,G__22299) : f.call(null,G__22298,G__22299));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__22309 = (j + (1));
var G__22310 = init__$3;
j = G__22309;
init__$2 = G__22310;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22300 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22300) : cljs.core.deref.call(null,G__22300));
} else {
var G__22311 = (i + len);
var G__22312 = init__$2;
i = G__22311;
init__$1 = G__22312;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__22301 = coll__$1;
var G__22302 = cljs.core.first_array_for_longvec(coll__$1);
var G__22303 = (0);
var G__22304 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22301,G__22302,G__22303,G__22304) : cljs.core.chunked_seq.call(null,G__22301,G__22302,G__22303,G__22304));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__4659__auto___22313 = len;
var i_22314 = (0);
while(true){
if((i_22314 < n__4659__auto___22313)){
(new_tail[i_22314] = (self__.tail[i_22314]));

var G__22315 = (i_22314 + (1));
i_22314 = G__22315;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__22316 = null;
var G__22316__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__22316__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__22316 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22316__2.call(this,self__,k);
case 3:
return G__22316__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22316.cljs$core$IFn$_invoke$arity$2 = G__22316__2;
G__22316.cljs$core$IFn$_invoke$arity$3 = G__22316__3;
return G__22316;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args22291){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22291)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__22317 = (i + (1));
var G__22318 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__22317;
out = G__22318;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__22319__i = 0, G__22319__a = new Array(arguments.length -  0);
while (G__22319__i < G__22319__a.length) {G__22319__a[G__22319__i] = arguments[G__22319__i + 0]; ++G__22319__i;}
  args = new cljs.core.IndexedSeq(G__22319__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__22320){
var args = cljs.core.seq(arglist__22320);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__22321 = self__.vec;
var G__22322 = self__.node;
var G__22323 = self__.i;
var G__22324 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22321,G__22322,G__22323,G__22324) : cljs.core.chunked_seq.call(null,G__22321,G__22322,G__22323,G__22324));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__22325 = self__.vec;
var G__22326 = (self__.i + self__.off);
var G__22327 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22325,G__22326,G__22327) : cljs.core.subvec.call(null,G__22325,G__22326,G__22327));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__22328 = self__.vec;
var G__22329 = (self__.i + self__.off);
var G__22330 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__22328,G__22329,G__22330) : cljs.core.subvec.call(null,G__22328,G__22329,G__22330));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__22331 = self__.vec;
var G__22332 = self__.node;
var G__22333 = self__.i;
var G__22334 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22331,G__22332,G__22333,G__22334) : cljs.core.chunked_seq.call(null,G__22331,G__22332,G__22333,G__22334));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__22335 = self__.vec;
var G__22336 = cljs.core.unchecked_array_for(self__.vec,end);
var G__22337 = end;
var G__22338 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22335,G__22336,G__22337,G__22338) : cljs.core.chunked_seq.call(null,G__22335,G__22336,G__22337,G__22338));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__22339 = self__.vec;
var G__22340 = self__.node;
var G__22341 = self__.i;
var G__22342 = self__.off;
var G__22343 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__22339,G__22340,G__22341,G__22342,G__22343) : cljs.core.chunked_seq.call(null,G__22339,G__22340,G__22341,G__22342,G__22343));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__22344 = self__.vec;
var G__22345 = cljs.core.unchecked_array_for(self__.vec,end);
var G__22346 = end;
var G__22347 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__22344,G__22345,G__22346,G__22347) : cljs.core.chunked_seq.call(null,G__22344,G__22345,G__22346,G__22347));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__22349 = self__.meta;
var G__22350 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__22351 = self__.start;
var G__22352 = (function (){var x__4089__auto__ = self__.end;
var y__4090__auto__ = (v_pos + (1));
return ((x__4089__auto__ > y__4090__auto__) ? x__4089__auto__ : y__4090__auto__);
})();
var G__22353 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22349,G__22350,G__22351,G__22352,G__22353) : cljs.core.build_subvec.call(null,G__22349,G__22350,G__22351,G__22352,G__22353));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__22354 = self__.meta;
var G__22355 = self__.v;
var G__22356 = self__.start;
var G__22357 = (self__.end - (1));
var G__22358 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22354,G__22355,G__22356,G__22357,G__22358) : cljs.core.build_subvec.call(null,G__22354,G__22355,G__22356,G__22357,G__22358));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__22360 = meta__$1;
var G__22361 = self__.v;
var G__22362 = self__.start;
var G__22363 = self__.end;
var G__22364 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22360,G__22361,G__22362,G__22363,G__22364) : cljs.core.build_subvec.call(null,G__22360,G__22361,G__22362,G__22363,G__22364));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__22365 = self__.meta;
var G__22366 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__22367 = self__.start;
var G__22368 = (self__.end + (1));
var G__22369 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__22365,G__22366,G__22367,G__22368,G__22369) : cljs.core.build_subvec.call(null,G__22365,G__22366,G__22367,G__22368,G__22369));
});

cljs.core.Subvec.prototype.call = (function() {
var G__22370 = null;
var G__22370__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__22370__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__22370 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22370__2.call(this,self__,k);
case 3:
return G__22370__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22370.cljs$core$IFn$_invoke$arity$2 = G__22370__2;
G__22370.cljs$core$IFn$_invoke$arity$3 = G__22370__3;
return G__22370;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args22348){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22348)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__22371 = meta;
var G__22372 = v.v;
var G__22373 = (v.start + start);
var G__22374 = (v.start + end);
var G__22375 = __hash;
meta = G__22371;
v = G__22372;
start = G__22373;
end = G__22374;
__hash = G__22375;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj22382 = {};
return obj22382;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__22390 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__22391 = (level - (5));
node = G__22390;
level = G__22391;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__22395 = null;
var G__22395__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22395__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22395 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22395__2.call(this,self__,k);
case 3:
return G__22395__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22395.cljs$core$IFn$_invoke$arity$2 = G__22395__2;
G__22395.cljs$core$IFn$_invoke$arity$3 = G__22395__3;
return G__22395;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args22392){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22392)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__3772__auto__ = self__.front;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3772__auto__ = self__.rear;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__22396 = (i + incr);
i = G__22396;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__22397 = (i + (1));
var G__22398 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__22397;
out = G__22398;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj22402 = {};
return obj22402;
})();
var l = ks.length;
var i_22403 = (0);
while(true){
if((i_22403 < l)){
var k_22404 = (ks[i_22403]);
(new_obj[k_22404] = (obj[k_22404]));

var G__22405 = (i_22403 + (1));
i_22403 = G__22405;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3760__auto__ = (function (){var G__22409 = k;
return goog.isString(G__22409);
})();
if(cljs.core.truth_(and__3760__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3760__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__22410 = init__$1;
var G__22411 = k;
var G__22412 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22410,G__22411,G__22412) : f.call(null,G__22410,G__22411,G__22412));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22413 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22413) : cljs.core.deref.call(null,G__22413));
} else {
var G__22419 = cljs.core.rest(keys__$1);
var G__22420 = init__$2;
keys__$1 = G__22419;
init__$1 = G__22420;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3760__auto__ = (function (){var G__22415 = k;
return goog.isString(G__22415);
})();
if(cljs.core.truth_(and__3760__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3760__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__22416 = k;
return goog.isString(G__22416);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__3760__auto__ = (function (){var G__22418 = k;
return goog.isString(G__22418);
})();
if(cljs.core.truth_(and__3760__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__3760__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__22406_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__22406_SHARP_,(self__.strobj[p1__22406_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__22421 = null;
var G__22421__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22421__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22421 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22421__2.call(this,self__,k);
case 3:
return G__22421__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22421.cljs$core$IFn$_invoke$arity$2 = G__22421__2;
G__22421.cljs$core$IFn$_invoke$arity$3 = G__22421__3;
return G__22421;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args22407){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22407)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj22423 = {};
return obj22423;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__22424 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22424,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22424,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__22425 = (i + (2));
i = G__22425;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__22426 = (i + (2));
i = G__22426;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__22427 = (i + (2));
i = G__22427;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__22428 = (i + (2));
i = G__22428;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__22429 = (i + (2));
i = G__22429;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__3772__auto__ = (function (){var G__22433 = k;
return goog.isString(G__22433);
})();
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_22434 = (0);
while(true){
if((i_22434 < l)){
(narr[i_22434] = (arr[i_22434]));

var G__22435 = (i_22434 + (1));
i_22434 = G__22435;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22437 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22437) : cljs.core.keys.call(null,G__22437));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22438 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22438) : cljs.core.vals.call(null,G__22438));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22439 = cljs.core.seq(coll);
var chunk__22440 = null;
var count__22441 = (0);
var i__22442 = (0);
while(true){
if((i__22442 < count__22441)){
var vec__22443 = chunk__22440.cljs$core$IIndexed$_nth$arity$2(null,i__22442);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22443,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22443,(1),null);
var G__22444_22457 = v;
var G__22445_22458 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22444_22457,G__22445_22458) : f.call(null,G__22444_22457,G__22445_22458));

var G__22459 = seq__22439;
var G__22460 = chunk__22440;
var G__22461 = count__22441;
var G__22462 = (i__22442 + (1));
seq__22439 = G__22459;
chunk__22440 = G__22460;
count__22441 = G__22461;
i__22442 = G__22462;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22439);
if(temp__4126__auto__){
var seq__22439__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22439__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__22439__$1);
var G__22463 = cljs.core.chunk_rest(seq__22439__$1);
var G__22464 = c__4559__auto__;
var G__22465 = cljs.core.count(c__4559__auto__);
var G__22466 = (0);
seq__22439 = G__22463;
chunk__22440 = G__22464;
count__22441 = G__22465;
i__22442 = G__22466;
continue;
} else {
var vec__22446 = cljs.core.first(seq__22439__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22446,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22446,(1),null);
var G__22447_22467 = v;
var G__22448_22468 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22447_22467,G__22448_22468) : f.call(null,G__22447_22467,G__22448_22468));

var G__22469 = cljs.core.next(seq__22439__$1);
var G__22470 = null;
var G__22471 = (0);
var G__22472 = (0);
seq__22439 = G__22469;
chunk__22440 = G__22470;
count__22441 = G__22471;
i__22442 = G__22472;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__22449 = init__$1;
var G__22450 = (self__.arr[i]);
var G__22451 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22449,G__22450,G__22451) : f.call(null,G__22449,G__22450,G__22451));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22452 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22452) : cljs.core.deref.call(null,G__22452));
} else {
var G__22473 = (i + (2));
var G__22474 = init__$2;
i = G__22473;
init__$1 = G__22474;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__22453 = other;
if(G__22453){
var bit__4446__auto__ = (G__22453.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__4446__auto__) || (G__22453.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__22475 = (i + (2));
i = G__22475;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj22455 = {};
return obj22455;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__22476 = (s + (2));
var G__22477 = d;
s = G__22476;
d = G__22477;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__22478 = (s + (2));
var G__22479 = (d + (2));
s = G__22478;
d = G__22479;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__22456 = cljs.core.aclone(self__.arr);
(G__22456[(idx + (1))] = v);

return G__22456;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22480 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22481 = cljs.core.next(es);
ret = G__22480;
es = G__22481;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__22482 = null;
var G__22482__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22482__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22482 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22482__2.call(this,self__,k);
case 3:
return G__22482__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22482.cljs$core$IFn$_invoke$arity$2 = G__22482__2;
G__22482.cljs$core$IFn$_invoke$arity$3 = G__22482__3;
return G__22482;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args22436){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22436)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__22483 = (i + (2));
var G__22484 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__22483;
ret = G__22484;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__22485_22493 = self__.arr;
G__22485_22493.pop();

G__22485_22493.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__22486 = self__.len;
var G__22487 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__22486,G__22487) : cljs.core.array__GT_transient_hash_map.call(null,G__22486,G__22487));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__22488 = o;
if(G__22488){
var bit__4453__auto__ = (G__22488.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4453__auto__) || (G__22488.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__22488.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22488);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22488);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__22489 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22489) : cljs.core.key.call(null,G__22489));
})(),(function (){var G__22490 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22490) : cljs.core.val.call(null,G__22490));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__22494 = cljs.core.next(es);
var G__22495 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__22491 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22491) : cljs.core.key.call(null,G__22491));
})(),(function (){var G__22492 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22492) : cljs.core.val.call(null,G__22492));
})());
es = G__22494;
tcoll__$2 = G__22495;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__22496 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__22497 = (i + (2));
out = G__22496;
i = G__22497;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__22500 = cljs.core.aclone(arr);
(G__22500[i] = a);

return G__22500;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__22501 = cljs.core.aclone(arr);
(G__22501[i] = a);

(G__22501[j] = b);

return G__22501;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__22506 = init__$1;
var G__22507 = k;
var G__22508 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22506,G__22507,G__22508) : f.call(null,G__22506,G__22507,G__22508));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22509 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22509) : cljs.core.deref.call(null,G__22509));
} else {
var G__22510 = (i + (2));
var G__22511 = init__$2;
i = G__22510;
init__$1 = G__22511;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22512 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__22512) : cljs.core.create_inode_seq.call(null,G__22512));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_22526 = (0);
var j_22527 = (0);
while(true){
if((i_22526 < (32))){
if((((self__.bitmap >>> i_22526) & (1)) === (0))){
var G__22528 = (i_22526 + (1));
var G__22529 = j_22527;
i_22526 = G__22528;
j_22527 = G__22529;
continue;
} else {
(nodes[i_22526] = ((!(((self__.arr[j_22527]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_22527])),(self__.arr[j_22527]),(self__.arr[(j_22527 + (1))]),added_leaf_QMARK_):(self__.arr[(j_22527 + (1))])));

var G__22530 = (i_22526 + (1));
var G__22531 = (j_22527 + (2));
i_22526 = G__22530;
j_22527 = G__22531;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__22513 = edit__$1;
var G__22514 = (shift + (5));
var G__22515 = key_or_nil;
var G__22516 = val_or_node;
var G__22517 = hash;
var G__22518 = key;
var G__22519 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__22513,G__22514,G__22515,G__22516,G__22517,G__22518,G__22519) : cljs.core.create_node.call(null,G__22513,G__22514,G__22515,G__22516,G__22517,G__22518,G__22519));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_22532 = (0);
var j_22533 = (0);
while(true){
if((i_22532 < (32))){
if((((self__.bitmap >>> i_22532) & (1)) === (0))){
var G__22534 = (i_22532 + (1));
var G__22535 = j_22533;
i_22532 = G__22534;
j_22533 = G__22535;
continue;
} else {
(nodes[i_22532] = ((!(((self__.arr[j_22533]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_22533])),(self__.arr[j_22533]),(self__.arr[(j_22533 + (1))]),added_leaf_QMARK_):(self__.arr[(j_22533 + (1))])));

var G__22536 = (i_22532 + (1));
var G__22537 = (j_22533 + (2));
i_22532 = G__22536;
j_22533 = G__22537;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__22520 = (shift + (5));
var G__22521 = key_or_nil;
var G__22522 = val_or_node;
var G__22523 = hash;
var G__22524 = key;
var G__22525 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__22520,G__22521,G__22522,G__22523,G__22524,G__22525) : cljs.core.create_node.call(null,G__22520,G__22521,G__22522,G__22523,G__22524,G__22525));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__22538 = (i + (1));
var G__22539 = (j + (2));
var G__22540 = (bitmap | ((1) << i));
i = G__22538;
j = G__22539;
bitmap = G__22540;
continue;
} else {
var G__22541 = (i + (1));
var G__22542 = j;
var G__22543 = bitmap;
i = G__22541;
j = G__22542;
bitmap = G__22543;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22544 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__22544) : cljs.core.create_array_node_seq.call(null,G__22544));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22545 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22545) : cljs.core.deref.call(null,G__22545));
} else {
var G__22546 = (i + (1));
var G__22547 = init__$2;
i = G__22546;
init__$1 = G__22547;
continue;
}
} else {
var G__22548 = (i + (1));
var G__22549 = init__$1;
i = G__22548;
init__$1 = G__22549;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__22550 = (i + (2));
i = G__22550;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__22551 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__22551) : cljs.core.create_inode_seq.call(null,G__22551));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__22552 = self__.nodes;
var G__22553 = (self__.i + (2));
var G__22554 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22552,G__22553,G__22554) : cljs.core.create_inode_seq.call(null,G__22552,G__22553,G__22554));
} else {
var G__22555 = self__.nodes;
var G__22556 = self__.i;
var G__22557 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__22555,G__22556,G__22557) : cljs.core.create_inode_seq.call(null,G__22555,G__22556,G__22557));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__22561 = (j + (2));
j = G__22561;
continue;
}
} else {
var G__22562 = (j + (2));
j = G__22562;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__22563 = null;
var G__22564 = self__.nodes;
var G__22565 = self__.i;
var G__22566 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__22563,G__22564,G__22565,G__22566) : cljs.core.create_array_node_seq.call(null,G__22563,G__22564,G__22565,G__22566));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__22571 = (j + (1));
j = G__22571;
continue;
}
} else {
var G__22572 = (j + (1));
j = G__22572;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22574 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22574) : cljs.core.keys.call(null,G__22574));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22575 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22575) : cljs.core.vals.call(null,G__22575));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22576 = cljs.core.seq(coll);
var chunk__22577 = null;
var count__22578 = (0);
var i__22579 = (0);
while(true){
if((i__22579 < count__22578)){
var vec__22580 = chunk__22577.cljs$core$IIndexed$_nth$arity$2(null,i__22579);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22580,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22580,(1),null);
var G__22581_22592 = v;
var G__22582_22593 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22581_22592,G__22582_22593) : f.call(null,G__22581_22592,G__22582_22593));

var G__22594 = seq__22576;
var G__22595 = chunk__22577;
var G__22596 = count__22578;
var G__22597 = (i__22579 + (1));
seq__22576 = G__22594;
chunk__22577 = G__22595;
count__22578 = G__22596;
i__22579 = G__22597;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22576);
if(temp__4126__auto__){
var seq__22576__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22576__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__22576__$1);
var G__22598 = cljs.core.chunk_rest(seq__22576__$1);
var G__22599 = c__4559__auto__;
var G__22600 = cljs.core.count(c__4559__auto__);
var G__22601 = (0);
seq__22576 = G__22598;
chunk__22577 = G__22599;
count__22578 = G__22600;
i__22579 = G__22601;
continue;
} else {
var vec__22583 = cljs.core.first(seq__22576__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22583,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22583,(1),null);
var G__22584_22602 = v;
var G__22585_22603 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22584_22602,G__22585_22603) : f.call(null,G__22584_22602,G__22585_22603));

var G__22604 = cljs.core.next(seq__22576__$1);
var G__22605 = null;
var G__22606 = (0);
var G__22607 = (0);
seq__22576 = G__22604;
chunk__22577 = G__22605;
count__22578 = G__22606;
i__22579 = G__22607;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__22586 = init;
var G__22587 = null;
var G__22588 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22586,G__22587,G__22588) : f.call(null,G__22586,G__22587,G__22588));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__22589 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22589) : cljs.core.deref.call(null,G__22589));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj22591 = {};
return obj22591;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22608 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22609 = cljs.core.next(es);
ret = G__22608;
es = G__22609;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__22610 = null;
var G__22610__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22610__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22610 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22610__2.call(this,self__,k);
case 3:
return G__22610__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22610.cljs$core$IFn$_invoke$arity$2 = G__22610__2;
G__22610.cljs$core$IFn$_invoke$arity$3 = G__22610__3;
return G__22610;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args22573){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22573)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__22611 = (i + (2));
var G__22612 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__22611;
ret = G__22612;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__22613 = (i + (1));
var G__22614 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__22613;
out = G__22614;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__22615 = o;
if(G__22615){
var bit__4453__auto__ = (G__22615.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__4453__auto__) || (G__22615.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__22615.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22615);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__22615);
}
})()){
return tcoll.assoc_BANG_((function (){var G__22616 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22616) : cljs.core.key.call(null,G__22616));
})(),(function (){var G__22617 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22617) : cljs.core.val.call(null,G__22617));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__22620 = cljs.core.next(es);
var G__22621 = tcoll__$1.assoc_BANG_((function (){var G__22618 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22618) : cljs.core.key.call(null,G__22618));
})(),(function (){var G__22619 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__22619) : cljs.core.val.call(null,G__22619));
})());
es = G__22620;
tcoll__$1 = G__22621;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__22622 = ((ascending_QMARK_)?t.left:t.right);
var G__22623 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__22622;
stack__$1 = G__22623;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__22636 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22636) : cljs.core.deref.call(null,G__22636));
} else {
var init__$2 = (function (){var G__22637 = init__$1;
var G__22638 = node.key;
var G__22639 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22637,G__22638,G__22639) : f.call(null,G__22637,G__22638,G__22639));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__22640 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22640) : cljs.core.deref.call(null,G__22640));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__22641 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22641) : cljs.core.deref.call(null,G__22641));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__22643 = null;
var G__22643__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22643__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22643 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22643__2.call(this,self__,k);
case 3:
return G__22643__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22643.cljs$core$IFn$_invoke$arity$2 = G__22643__2;
G__22643.cljs$core$IFn$_invoke$arity$3 = G__22643__3;
return G__22643;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args22642){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22642)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__22645 = null;
var G__22645__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22645__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22645 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22645__2.call(this,self__,k);
case 3:
return G__22645__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22645.cljs$core$IFn$_invoke$arity$2 = G__22645__2;
G__22645.cljs$core$IFn$_invoke$arity$3 = G__22645__3;
return G__22645;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args22644){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22644)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__22658 = k;
var G__22659 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22658,G__22659) : comp.call(null,G__22658,G__22659));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__22678 = k;
var G__22679 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22678,G__22679) : comp.call(null,G__22678,G__22679));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__22690 = k;
var G__22691 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22690,G__22691) : comp.call(null,G__22690,G__22691));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22693 = cljs.core.seq(coll);
var chunk__22694 = null;
var count__22695 = (0);
var i__22696 = (0);
while(true){
if((i__22696 < count__22695)){
var vec__22697 = chunk__22694.cljs$core$IIndexed$_nth$arity$2(null,i__22696);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22697,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22697,(1),null);
var G__22698_22710 = v;
var G__22699_22711 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22698_22710,G__22699_22711) : f.call(null,G__22698_22710,G__22699_22711));

var G__22712 = seq__22693;
var G__22713 = chunk__22694;
var G__22714 = count__22695;
var G__22715 = (i__22696 + (1));
seq__22693 = G__22712;
chunk__22694 = G__22713;
count__22695 = G__22714;
i__22696 = G__22715;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22693);
if(temp__4126__auto__){
var seq__22693__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22693__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__22693__$1);
var G__22716 = cljs.core.chunk_rest(seq__22693__$1);
var G__22717 = c__4559__auto__;
var G__22718 = cljs.core.count(c__4559__auto__);
var G__22719 = (0);
seq__22693 = G__22716;
chunk__22694 = G__22717;
count__22695 = G__22718;
i__22696 = G__22719;
continue;
} else {
var vec__22700 = cljs.core.first(seq__22693__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22700,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22700,(1),null);
var G__22701_22720 = v;
var G__22702_22721 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22701_22720,G__22702_22721) : f.call(null,G__22701_22720,G__22702_22721));

var G__22722 = cljs.core.next(seq__22693__$1);
var G__22723 = null;
var G__22724 = (0);
var G__22725 = (0);
seq__22693 = G__22722;
chunk__22694 = G__22723;
count__22695 = G__22724;
i__22696 = G__22725;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22703 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__22703) : cljs.core.keys.call(null,G__22703));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__22704 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__22704) : cljs.core.vals.call(null,G__22704));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__22705 = k;
var G__22706 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22705,G__22706) : self__.comp.call(null,G__22705,G__22706));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__22726 = t.left;
t = G__22726;
continue;
} else {
var G__22727 = t.right;
t = G__22727;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__22728 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__22729 = cljs.core.next(es);
ret = G__22728;
es = G__22729;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__22730 = null;
var G__22730__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22730__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22730 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22730__2.call(this,self__,k);
case 3:
return G__22730__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22730.cljs$core$IFn$_invoke$arity$2 = G__22730__2;
G__22730.cljs$core$IFn$_invoke$arity$3 = G__22730__3;
return G__22730;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args22692){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22692)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__22707 = k;
var G__22708 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__22707,G__22708) : self__.comp.call(null,G__22707,G__22708));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__22731 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22732 = t.left;
stack = G__22731;
t = G__22732;
continue;
} else {
var G__22733 = stack;
var G__22734 = t.right;
stack = G__22733;
t = G__22734;
continue;
}
} else {
if((c > (0))){
var G__22735 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__22736 = t.right;
stack = G__22735;
t = G__22736;
continue;
} else {
var G__22737 = stack;
var G__22738 = t.left;
stack = G__22737;
t = G__22738;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__22709 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__22709) : cljs.core.key.call(null,G__22709));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__22739 = cljs.core.nnext(in$);
var G__22740 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22739;
out = G__22740;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22741__i = 0, G__22741__a = new Array(arguments.length -  0);
while (G__22741__i < G__22741__a.length) {G__22741__a[G__22741__i] = arguments[G__22741__i + 0]; ++G__22741__i;}
  keyvals = new cljs.core.IndexedSeq(G__22741__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__22742){
var keyvals = cljs.core.seq(arglist__22742);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22743__i = 0, G__22743__a = new Array(arguments.length -  0);
while (G__22743__i < G__22743__a.length) {G__22743__a[G__22743__i] = arguments[G__22743__i + 0]; ++G__22743__i;}
  keyvals = new cljs.core.IndexedSeq(G__22743__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__22744){
var keyvals = cljs.core.seq(arglist__22744);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj22748 = {};
return obj22748;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__22749 = cljs.core.nnext(kvs);
kvs = G__22749;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22750__i = 0, G__22750__a = new Array(arguments.length -  0);
while (G__22750__i < G__22750__a.length) {G__22750__a[G__22750__i] = arguments[G__22750__i + 0]; ++G__22750__i;}
  keyvals = new cljs.core.IndexedSeq(G__22750__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__22751){
var keyvals = cljs.core.seq(arglist__22751);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__22752 = cljs.core.nnext(in$);
var G__22753 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22752;
out = G__22753;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__22754__i = 0, G__22754__a = new Array(arguments.length -  0);
while (G__22754__i < G__22754__a.length) {G__22754__a[G__22754__i] = arguments[G__22754__i + 0]; ++G__22754__i;}
  keyvals = new cljs.core.IndexedSeq(G__22754__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__22755){
var keyvals = cljs.core.seq(arglist__22755);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__22756 = cljs.core.nnext(in$);
var G__22757 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__22756;
out = G__22757;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__22758__i = 0, G__22758__a = new Array(arguments.length -  1);
while (G__22758__i < G__22758__a.length) {G__22758__a[G__22758__i] = arguments[G__22758__i + 1]; ++G__22758__i;}
  keyvals = new cljs.core.IndexedSeq(G__22758__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__22759){
var comparator = cljs.core.first(arglist__22759);
var keyvals = cljs.core.rest(arglist__22759);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22760 = self__.mseq;
if(G__22760){
var bit__4453__auto__ = (G__22760.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__22760.cljs$core$INext$)){
return true;
} else {
if((!G__22760.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22760);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22760);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22761 = self__.mseq;
if(G__22761){
var bit__4453__auto__ = (G__22761.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__22761.cljs$core$INext$)){
return true;
} else {
if((!G__22761.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22761);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22761);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22762 = self__.mseq;
if(G__22762){
var bit__4453__auto__ = (G__22762.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__22762.cljs$core$INext$)){
return true;
} else {
if((!G__22762.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22762);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22762);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__22763 = self__.mseq;
if(G__22763){
var bit__4453__auto__ = (G__22763.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__4453__auto__) || (G__22763.cljs$core$INext$)){
return true;
} else {
if((!G__22763.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22763);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__22763);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__22764_SHARP_,p2__22765_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__3772__auto__ = p1__22764_SHARP_;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__22765_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__22766__i = 0, G__22766__a = new Array(arguments.length -  0);
while (G__22766__i < G__22766__a.length) {G__22766__a[G__22766__i] = arguments[G__22766__i + 0]; ++G__22766__i;}
  maps = new cljs.core.IndexedSeq(G__22766__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__22767){
var maps = cljs.core.seq(arglist__22767);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__22770 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__22771 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22770,G__22771) : f.call(null,G__22770,G__22771));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__3772__auto__ = m1;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__22772__i = 0, G__22772__a = new Array(arguments.length -  1);
while (G__22772__i < G__22772__a.length) {G__22772__a[G__22772__i] = arguments[G__22772__i + 1]; ++G__22772__i;}
  maps = new cljs.core.IndexedSeq(G__22772__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__22773){
var f = cljs.core.first(arglist__22773);
var maps = cljs.core.rest(arglist__22773);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$94);
var G__22774 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$94))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__22775 = cljs.core.next(keys);
ret = G__22774;
keys = G__22775;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22778 = cljs.core.seq(coll);
var chunk__22779 = null;
var count__22780 = (0);
var i__22781 = (0);
while(true){
if((i__22781 < count__22780)){
var vec__22782 = chunk__22779.cljs$core$IIndexed$_nth$arity$2(null,i__22781);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22782,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22782,(1),null);
var G__22783_22788 = v;
var G__22784_22789 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22783_22788,G__22784_22789) : f.call(null,G__22783_22788,G__22784_22789));

var G__22790 = seq__22778;
var G__22791 = chunk__22779;
var G__22792 = count__22780;
var G__22793 = (i__22781 + (1));
seq__22778 = G__22790;
chunk__22779 = G__22791;
count__22780 = G__22792;
i__22781 = G__22793;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22778);
if(temp__4126__auto__){
var seq__22778__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22778__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__22778__$1);
var G__22794 = cljs.core.chunk_rest(seq__22778__$1);
var G__22795 = c__4559__auto__;
var G__22796 = cljs.core.count(c__4559__auto__);
var G__22797 = (0);
seq__22778 = G__22794;
chunk__22779 = G__22795;
count__22780 = G__22796;
i__22781 = G__22797;
continue;
} else {
var vec__22785 = cljs.core.first(seq__22778__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22785,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22785,(1),null);
var G__22786_22798 = v;
var G__22787_22799 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22786_22798,G__22787_22799) : f.call(null,G__22786_22798,G__22787_22799));

var G__22800 = cljs.core.next(seq__22778__$1);
var G__22801 = null;
var G__22802 = (0);
var G__22803 = (0);
seq__22778 = G__22800;
chunk__22779 = G__22801;
count__22780 = G__22802;
i__22781 = G__22803;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22776_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22776_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__22804 = null;
var G__22804__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22804__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22804 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22804__2.call(this,self__,k);
case 3:
return G__22804__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22804.cljs$core$IFn$_invoke$arity$2 = G__22804__2;
G__22804.cljs$core$IFn$_invoke$arity$3 = G__22804__3;
return G__22804;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args22777){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22777)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__22805 = (i + (1));
var G__22806 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__22805;
out = G__22806;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__22807 = (i + (1));
var G__22808 = cljs.core._conj_BANG_(out,(items[i]));
i = G__22807;
out = G__22808;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__22810 = null;
var G__22810__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__22810__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__22810 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22810__2.call(this,self__,k);
case 3:
return G__22810__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22810.cljs$core$IFn$_invoke$arity$2 = G__22810__2;
G__22810.cljs$core$IFn$_invoke$arity$3 = G__22810__3;
return G__22810;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args22809){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22809)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__22813 = cljs.core.seq(coll);
var chunk__22814 = null;
var count__22815 = (0);
var i__22816 = (0);
while(true){
if((i__22816 < count__22815)){
var vec__22817 = chunk__22814.cljs$core$IIndexed$_nth$arity$2(null,i__22816);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22817,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22817,(1),null);
var G__22818_22823 = v;
var G__22819_22824 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22818_22823,G__22819_22824) : f.call(null,G__22818_22823,G__22819_22824));

var G__22825 = seq__22813;
var G__22826 = chunk__22814;
var G__22827 = count__22815;
var G__22828 = (i__22816 + (1));
seq__22813 = G__22825;
chunk__22814 = G__22826;
count__22815 = G__22827;
i__22816 = G__22828;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__22813);
if(temp__4126__auto__){
var seq__22813__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__22813__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__22813__$1);
var G__22829 = cljs.core.chunk_rest(seq__22813__$1);
var G__22830 = c__4559__auto__;
var G__22831 = cljs.core.count(c__4559__auto__);
var G__22832 = (0);
seq__22813 = G__22829;
chunk__22814 = G__22830;
count__22815 = G__22831;
i__22816 = G__22832;
continue;
} else {
var vec__22820 = cljs.core.first(seq__22813__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22820,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22820,(1),null);
var G__22821_22833 = v;
var G__22822_22834 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22821_22833,G__22822_22834) : f.call(null,G__22821_22833,G__22822_22834));

var G__22835 = cljs.core.next(seq__22813__$1);
var G__22836 = null;
var G__22837 = (0);
var G__22838 = (0);
seq__22813 = G__22835;
chunk__22814 = G__22836;
count__22815 = G__22837;
i__22816 = G__22838;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__22811_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__22811_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__22839 = null;
var G__22839__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__22839__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__22839 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__22839__2.call(this,self__,k);
case 3:
return G__22839__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22839.cljs$core$IFn$_invoke$arity$2 = G__22839__2;
G__22839.cljs$core$IFn$_invoke$arity$3 = G__22839__3;
return G__22839;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args22812){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args22812)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__4653__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__4653__auto__.length)){
var G__22840 = (i + (1));
var G__22841 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__22840;
res = G__22841;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__22842 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__22843 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__22842;
out = G__22843;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__22844__delegate = function (keys){
return cljs.core.set(keys);
};
var G__22844 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22845__i = 0, G__22845__a = new Array(arguments.length -  0);
while (G__22845__i < G__22845__a.length) {G__22845__a[G__22845__i] = arguments[G__22845__i + 0]; ++G__22845__i;}
  keys = new cljs.core.IndexedSeq(G__22845__a,0);
} 
return G__22844__delegate.call(this,keys);};
G__22844.cljs$lang$maxFixedArity = 0;
G__22844.cljs$lang$applyTo = (function (arglist__22846){
var keys = cljs.core.seq(arglist__22846);
return G__22844__delegate(keys);
});
G__22844.cljs$core$IFn$_invoke$arity$variadic = G__22844__delegate;
return G__22844;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__22847 = null;
if (arguments.length > 0) {
var G__22848__i = 0, G__22848__a = new Array(arguments.length -  0);
while (G__22848__i < G__22848__a.length) {G__22848__a[G__22848__i] = arguments[G__22848__i + 0]; ++G__22848__i;}
G__22847 = new cljs.core.IndexedSeq(G__22848__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__22847);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__22849__i = 0, G__22849__a = new Array(arguments.length -  0);
while (G__22849__i < G__22849__a.length) {G__22849__a[G__22849__i] = arguments[G__22849__i + 0]; ++G__22849__i;}
  keys = new cljs.core.IndexedSeq(G__22849__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__22850){
var keys = cljs.core.seq(arglist__22850);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__22851__i = 0, G__22851__a = new Array(arguments.length -  1);
while (G__22851__i < G__22851__a.length) {G__22851__a[G__22851__i] = arguments[G__22851__i + 1]; ++G__22851__i;}
  keys = new cljs.core.IndexedSeq(G__22851__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__22852){
var comparator = cljs.core.first(arglist__22852);
var keys = cljs.core.rest(arglist__22852);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__22853_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22853_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__22853_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22854_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__22854_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__22854_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__22875 = null;
var G__22875__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22875__1 = (function (result){
var G__22865 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22865) : rf.call(null,G__22865));
});
var G__22875__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__22866 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22866) : cljs.core.deref.call(null,G__22866));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__22867 = result;
var G__22868 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22867,G__22868) : rf.call(null,G__22867,G__22868));
}
});
G__22875 = function(result,input){
switch(arguments.length){
case 0:
return G__22875__0.call(this);
case 1:
return G__22875__1.call(this,result);
case 2:
return G__22875__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22875.cljs$core$IFn$_invoke$arity$0 = G__22875__0;
G__22875.cljs$core$IFn$_invoke$arity$1 = G__22875__1;
G__22875.cljs$core$IFn$_invoke$arity$2 = G__22875__2;
return G__22875;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__22873,seen__$1){
while(true){
var vec__22874 = p__22873;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22874,(0),null);
var xs__$1 = vec__22874;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__22876 = cljs.core.rest(s);
var G__22877 = seen__$1;
p__22873 = G__22876;
seen__$1 = G__22877;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__22878 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__22879 = cljs.core.next(s__$1);
ret = G__22878;
s__$1 = G__22879;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__22881 = x;
if(G__22881){
var bit__4446__auto__ = (G__22881.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__4446__auto__) || (G__22881.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__22882 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__22883 = cljs.core.next(ks);
var G__22884 = cljs.core.next(vs);
map = G__22882;
ks = G__22883;
vs = G__22884;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__22895 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22895) : k.call(null,G__22895));
})() > (function (){var G__22896 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22896) : k.call(null,G__22896));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__22897__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22885_SHARP_,p2__22886_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__22885_SHARP_,p2__22886_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22897 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22898__i = 0, G__22898__a = new Array(arguments.length -  3);
while (G__22898__i < G__22898__a.length) {G__22898__a[G__22898__i] = arguments[G__22898__i + 3]; ++G__22898__i;}
  more = new cljs.core.IndexedSeq(G__22898__a,0);
} 
return G__22897__delegate.call(this,k,x,y,more);};
G__22897.cljs$lang$maxFixedArity = 3;
G__22897.cljs$lang$applyTo = (function (arglist__22899){
var k = cljs.core.first(arglist__22899);
arglist__22899 = cljs.core.next(arglist__22899);
var x = cljs.core.first(arglist__22899);
arglist__22899 = cljs.core.next(arglist__22899);
var y = cljs.core.first(arglist__22899);
var more = cljs.core.rest(arglist__22899);
return G__22897__delegate(k,x,y,more);
});
G__22897.cljs$core$IFn$_invoke$arity$variadic = G__22897__delegate;
return G__22897;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__22900 = null;
if (arguments.length > 3) {
var G__22901__i = 0, G__22901__a = new Array(arguments.length -  3);
while (G__22901__i < G__22901__a.length) {G__22901__a[G__22901__i] = arguments[G__22901__i + 3]; ++G__22901__i;}
G__22900 = new cljs.core.IndexedSeq(G__22901__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22900);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__22912 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22912) : k.call(null,G__22912));
})() < (function (){var G__22913 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__22913) : k.call(null,G__22913));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__22914__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__22902_SHARP_,p2__22903_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__22902_SHARP_,p2__22903_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__22914 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__22915__i = 0, G__22915__a = new Array(arguments.length -  3);
while (G__22915__i < G__22915__a.length) {G__22915__a[G__22915__i] = arguments[G__22915__i + 3]; ++G__22915__i;}
  more = new cljs.core.IndexedSeq(G__22915__a,0);
} 
return G__22914__delegate.call(this,k,x,y,more);};
G__22914.cljs$lang$maxFixedArity = 3;
G__22914.cljs$lang$applyTo = (function (arglist__22916){
var k = cljs.core.first(arglist__22916);
arglist__22916 = cljs.core.next(arglist__22916);
var x = cljs.core.first(arglist__22916);
arglist__22916 = cljs.core.next(arglist__22916);
var y = cljs.core.first(arglist__22916);
var more = cljs.core.rest(arglist__22916);
return G__22914__delegate(k,x,y,more);
});
G__22914.cljs$core$IFn$_invoke$arity$variadic = G__22914__delegate;
return G__22914;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__22917 = null;
if (arguments.length > 3) {
var G__22918__i = 0, G__22918__a = new Array(arguments.length -  3);
while (G__22918__i < G__22918__a.length) {G__22918__a[G__22918__i] = arguments[G__22918__i + 3]; ++G__22918__i;}
G__22917 = new cljs.core.IndexedSeq(G__22918__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__22917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__22935 = null;
var G__22935__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22935__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__22930 = result;
var G__22931 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22930,G__22931) : rf.call(null,G__22930,G__22931));
})());
})());
var G__22932 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22932) : rf.call(null,G__22932));
});
var G__22935__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__22933 = result;
var G__22934 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22933,G__22934) : rf.call(null,G__22933,G__22934));
} else {
return result;
}
});
G__22935 = function(result,input){
switch(arguments.length){
case 0:
return G__22935__0.call(this);
case 1:
return G__22935__1.call(this,result);
case 2:
return G__22935__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22935.cljs$core$IFn$_invoke$arity$0 = G__22935__0;
G__22935.cljs$core$IFn$_invoke$arity$1 = G__22935__1;
G__22935.cljs$core$IFn$_invoke$arity$2 = G__22935__2;
return G__22935;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__22948 = null;
var G__22948__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22948__1 = (function (result){
var G__22943 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22943) : rf.call(null,G__22943));
});
var G__22948__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__22944 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22944) : pred.call(null,G__22944));
})())){
var G__22945 = result;
var G__22946 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22945,G__22946) : rf.call(null,G__22945,G__22946));
} else {
return cljs.core.reduced(result);
}
});
G__22948 = function(result,input){
switch(arguments.length){
case 0:
return G__22948__0.call(this);
case 1:
return G__22948__1.call(this,result);
case 2:
return G__22948__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22948.cljs$core$IFn$_invoke$arity$0 = G__22948__0;
G__22948.cljs$core$IFn$_invoke$arity$1 = G__22948__1;
G__22948.cljs$core$IFn$_invoke$arity$2 = G__22948__2;
return G__22948;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__22947 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__22947) : pred.call(null,G__22947));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__22953 = (function (){var G__22955 = cljs.core._entry_key(sc,e);
var G__22956 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__22955,G__22956) : comp.call(null,G__22955,G__22956));
})();
var G__22954 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__22953,G__22954) : test.call(null,G__22953,G__22954));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22960 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22960,(0),null);
var s = vec__22960;
if(cljs.core.truth_((function (){var G__22961 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22961) : include.call(null,G__22961));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22962 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22962,(0),null);
var s = vec__22962;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22966 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22966,(0),null);
var s = vec__22966;
if(cljs.core.truth_((function (){var G__22967 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__22967) : include.call(null,G__22967));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__22968 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22968,(0),null);
var s = vec__22968;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__22969 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__22969) : Math.ceil.call(null,G__22969));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__4193__auto__ = self__.__hash;
if(!((h__4193__auto__ == null))){
return h__4193__auto__;
} else {
var h__4193__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__4193__auto____$1;

return h__4193__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__22970 = ret;
var G__22971 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22970,G__22971) : f.call(null,G__22970,G__22971));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__22972 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__22972) : cljs.core.deref.call(null,G__22972));
} else {
var G__22973 = (i + self__.step);
var G__22974 = ret__$1;
i = G__22973;
ret = G__22974;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__22992 = null;
var G__22992__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__22992__1 = (function (result){
var G__22989 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__22989) : rf.call(null,G__22989));
});
var G__22992__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__22990 = result;
var G__22991 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__22990,G__22991) : rf.call(null,G__22990,G__22991));
} else {
return result;
}
});
G__22992 = function(result,input){
switch(arguments.length){
case 0:
return G__22992__0.call(this);
case 1:
return G__22992__1.call(this,result);
case 2:
return G__22992__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__22992.cljs$core$IFn$_invoke$arity$0 = G__22992__0;
G__22992.cljs$core$IFn$_invoke$arity$1 = G__22992__1;
G__22992.cljs$core$IFn$_invoke$arity$2 = G__22992__2;
return G__22992;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$95);
return ((function (a,pa){
return (function() {
var G__23014 = null;
var G__23014__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23014__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__23005 = result;
var G__23006 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23005,G__23006) : rf.call(null,G__23005,G__23006));
})());
})());
var G__23007 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23007) : rf.call(null,G__23007));
});
var G__23014__2 = (function (result,input){
var pval = (function (){var G__23008 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23008) : cljs.core.deref.call(null,G__23008));
})();
var val = (function (){var G__23009 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23009) : f.call(null,G__23009));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$95)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__23010 = result;
var G__23011 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23010,G__23011) : rf.call(null,G__23010,G__23011));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__23014 = function(result,input){
switch(arguments.length){
case 0:
return G__23014__0.call(this);
case 1:
return G__23014__1.call(this,result);
case 2:
return G__23014__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23014.cljs$core$IFn$_invoke$arity$0 = G__23014__0;
G__23014.cljs$core$IFn$_invoke$arity$1 = G__23014__1;
G__23014.cljs$core$IFn$_invoke$arity$2 = G__23014__2;
return G__23014;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__23012 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23012) : f.call(null,G__23012));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__22993_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__23013 = p1__22993_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23013) : f.call(null,G__23013));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__23023 = init;
var G__23024 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23023,G__23024) : f.call(null,G__23023,G__23024));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__23119 = null;
var G__23119__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__23119__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23077 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23077) : f.call(null,G__23077));
})()],null));
});
var G__23119__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23078 = x;
var G__23079 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23078,G__23079) : f.call(null,G__23078,G__23079));
})()],null));
});
var G__23119__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23080 = x;
var G__23081 = y;
var G__23082 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23080,G__23081,G__23082) : f.call(null,G__23080,G__23081,G__23082));
})()],null));
});
var G__23119__4 = (function() { 
var G__23120__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__23120 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23121__i = 0, G__23121__a = new Array(arguments.length -  3);
while (G__23121__i < G__23121__a.length) {G__23121__a[G__23121__i] = arguments[G__23121__i + 3]; ++G__23121__i;}
  args = new cljs.core.IndexedSeq(G__23121__a,0);
} 
return G__23120__delegate.call(this,x,y,z,args);};
G__23120.cljs$lang$maxFixedArity = 3;
G__23120.cljs$lang$applyTo = (function (arglist__23122){
var x = cljs.core.first(arglist__23122);
arglist__23122 = cljs.core.next(arglist__23122);
var y = cljs.core.first(arglist__23122);
arglist__23122 = cljs.core.next(arglist__23122);
var z = cljs.core.first(arglist__23122);
var args = cljs.core.rest(arglist__23122);
return G__23120__delegate(x,y,z,args);
});
G__23120.cljs$core$IFn$_invoke$arity$variadic = G__23120__delegate;
return G__23120;
})()
;
G__23119 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23119__0.call(this);
case 1:
return G__23119__1.call(this,x);
case 2:
return G__23119__2.call(this,x,y);
case 3:
return G__23119__3.call(this,x,y,z);
default:
var G__23123 = null;
if (arguments.length > 3) {
var G__23124__i = 0, G__23124__a = new Array(arguments.length -  3);
while (G__23124__i < G__23124__a.length) {G__23124__a[G__23124__i] = arguments[G__23124__i + 3]; ++G__23124__i;}
G__23123 = new cljs.core.IndexedSeq(G__23124__a,0);
}
return G__23119__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23123);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23119.cljs$lang$maxFixedArity = 3;
G__23119.cljs$lang$applyTo = G__23119__4.cljs$lang$applyTo;
G__23119.cljs$core$IFn$_invoke$arity$0 = G__23119__0;
G__23119.cljs$core$IFn$_invoke$arity$1 = G__23119__1;
G__23119.cljs$core$IFn$_invoke$arity$2 = G__23119__2;
G__23119.cljs$core$IFn$_invoke$arity$3 = G__23119__3;
G__23119.cljs$core$IFn$_invoke$arity$variadic = G__23119__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23119;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__23125 = null;
var G__23125__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__23125__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23083 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23083) : f.call(null,G__23083));
})(),(function (){var G__23084 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23084) : g.call(null,G__23084));
})()],null));
});
var G__23125__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23085 = x;
var G__23086 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23085,G__23086) : f.call(null,G__23085,G__23086));
})(),(function (){var G__23087 = x;
var G__23088 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23087,G__23088) : g.call(null,G__23087,G__23088));
})()],null));
});
var G__23125__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23089 = x;
var G__23090 = y;
var G__23091 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23089,G__23090,G__23091) : f.call(null,G__23089,G__23090,G__23091));
})(),(function (){var G__23092 = x;
var G__23093 = y;
var G__23094 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23092,G__23093,G__23094) : g.call(null,G__23092,G__23093,G__23094));
})()],null));
});
var G__23125__4 = (function() { 
var G__23126__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__23126 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23127__i = 0, G__23127__a = new Array(arguments.length -  3);
while (G__23127__i < G__23127__a.length) {G__23127__a[G__23127__i] = arguments[G__23127__i + 3]; ++G__23127__i;}
  args = new cljs.core.IndexedSeq(G__23127__a,0);
} 
return G__23126__delegate.call(this,x,y,z,args);};
G__23126.cljs$lang$maxFixedArity = 3;
G__23126.cljs$lang$applyTo = (function (arglist__23128){
var x = cljs.core.first(arglist__23128);
arglist__23128 = cljs.core.next(arglist__23128);
var y = cljs.core.first(arglist__23128);
arglist__23128 = cljs.core.next(arglist__23128);
var z = cljs.core.first(arglist__23128);
var args = cljs.core.rest(arglist__23128);
return G__23126__delegate(x,y,z,args);
});
G__23126.cljs$core$IFn$_invoke$arity$variadic = G__23126__delegate;
return G__23126;
})()
;
G__23125 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23125__0.call(this);
case 1:
return G__23125__1.call(this,x);
case 2:
return G__23125__2.call(this,x,y);
case 3:
return G__23125__3.call(this,x,y,z);
default:
var G__23129 = null;
if (arguments.length > 3) {
var G__23130__i = 0, G__23130__a = new Array(arguments.length -  3);
while (G__23130__i < G__23130__a.length) {G__23130__a[G__23130__i] = arguments[G__23130__i + 3]; ++G__23130__i;}
G__23129 = new cljs.core.IndexedSeq(G__23130__a,0);
}
return G__23125__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23129);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23125.cljs$lang$maxFixedArity = 3;
G__23125.cljs$lang$applyTo = G__23125__4.cljs$lang$applyTo;
G__23125.cljs$core$IFn$_invoke$arity$0 = G__23125__0;
G__23125.cljs$core$IFn$_invoke$arity$1 = G__23125__1;
G__23125.cljs$core$IFn$_invoke$arity$2 = G__23125__2;
G__23125.cljs$core$IFn$_invoke$arity$3 = G__23125__3;
G__23125.cljs$core$IFn$_invoke$arity$variadic = G__23125__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23125;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__23131 = null;
var G__23131__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__23131__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23095 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23095) : f.call(null,G__23095));
})(),(function (){var G__23096 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__23096) : g.call(null,G__23096));
})(),(function (){var G__23097 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__23097) : h.call(null,G__23097));
})()],null));
});
var G__23131__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23098 = x;
var G__23099 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__23098,G__23099) : f.call(null,G__23098,G__23099));
})(),(function (){var G__23100 = x;
var G__23101 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__23100,G__23101) : g.call(null,G__23100,G__23101));
})(),(function (){var G__23102 = x;
var G__23103 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__23102,G__23103) : h.call(null,G__23102,G__23103));
})()],null));
});
var G__23131__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__23104 = x;
var G__23105 = y;
var G__23106 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__23104,G__23105,G__23106) : f.call(null,G__23104,G__23105,G__23106));
})(),(function (){var G__23107 = x;
var G__23108 = y;
var G__23109 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__23107,G__23108,G__23109) : g.call(null,G__23107,G__23108,G__23109));
})(),(function (){var G__23110 = x;
var G__23111 = y;
var G__23112 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__23110,G__23111,G__23112) : h.call(null,G__23110,G__23111,G__23112));
})()],null));
});
var G__23131__4 = (function() { 
var G__23132__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__23132 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23133__i = 0, G__23133__a = new Array(arguments.length -  3);
while (G__23133__i < G__23133__a.length) {G__23133__a[G__23133__i] = arguments[G__23133__i + 3]; ++G__23133__i;}
  args = new cljs.core.IndexedSeq(G__23133__a,0);
} 
return G__23132__delegate.call(this,x,y,z,args);};
G__23132.cljs$lang$maxFixedArity = 3;
G__23132.cljs$lang$applyTo = (function (arglist__23134){
var x = cljs.core.first(arglist__23134);
arglist__23134 = cljs.core.next(arglist__23134);
var y = cljs.core.first(arglist__23134);
arglist__23134 = cljs.core.next(arglist__23134);
var z = cljs.core.first(arglist__23134);
var args = cljs.core.rest(arglist__23134);
return G__23132__delegate(x,y,z,args);
});
G__23132.cljs$core$IFn$_invoke$arity$variadic = G__23132__delegate;
return G__23132;
})()
;
G__23131 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23131__0.call(this);
case 1:
return G__23131__1.call(this,x);
case 2:
return G__23131__2.call(this,x,y);
case 3:
return G__23131__3.call(this,x,y,z);
default:
var G__23135 = null;
if (arguments.length > 3) {
var G__23136__i = 0, G__23136__a = new Array(arguments.length -  3);
while (G__23136__i < G__23136__a.length) {G__23136__a[G__23136__i] = arguments[G__23136__i + 3]; ++G__23136__i;}
G__23135 = new cljs.core.IndexedSeq(G__23136__a,0);
}
return G__23131__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23135);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23131.cljs$lang$maxFixedArity = 3;
G__23131.cljs$lang$applyTo = G__23131__4.cljs$lang$applyTo;
G__23131.cljs$core$IFn$_invoke$arity$0 = G__23131__0;
G__23131.cljs$core$IFn$_invoke$arity$1 = G__23131__1;
G__23131.cljs$core$IFn$_invoke$arity$2 = G__23131__2;
G__23131.cljs$core$IFn$_invoke$arity$3 = G__23131__3;
G__23131.cljs$core$IFn$_invoke$arity$variadic = G__23131__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23131;
})()
});
var juxt__4 = (function() { 
var G__23137__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__23138 = null;
var G__23138__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23025_SHARP_,p2__23026_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23025_SHARP_,(function (){return (p2__23026_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__23026_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__23026_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23138__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23027_SHARP_,p2__23028_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23027_SHARP_,(function (){var G__23113 = x;
return (p2__23028_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__23028_SHARP_.cljs$core$IFn$_invoke$arity$1(G__23113) : p2__23028_SHARP_.call(null,G__23113));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23138__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23029_SHARP_,p2__23030_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23029_SHARP_,(function (){var G__23114 = x;
var G__23115 = y;
return (p2__23030_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__23030_SHARP_.cljs$core$IFn$_invoke$arity$2(G__23114,G__23115) : p2__23030_SHARP_.call(null,G__23114,G__23115));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23138__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23031_SHARP_,p2__23032_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23031_SHARP_,(function (){var G__23116 = x;
var G__23117 = y;
var G__23118 = z;
return (p2__23032_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__23032_SHARP_.cljs$core$IFn$_invoke$arity$3(G__23116,G__23117,G__23118) : p2__23032_SHARP_.call(null,G__23116,G__23117,G__23118));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__23138__4 = (function() { 
var G__23139__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__23033_SHARP_,p2__23034_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__23033_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__23034_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__23139 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__23140__i = 0, G__23140__a = new Array(arguments.length -  3);
while (G__23140__i < G__23140__a.length) {G__23140__a[G__23140__i] = arguments[G__23140__i + 3]; ++G__23140__i;}
  args = new cljs.core.IndexedSeq(G__23140__a,0);
} 
return G__23139__delegate.call(this,x,y,z,args);};
G__23139.cljs$lang$maxFixedArity = 3;
G__23139.cljs$lang$applyTo = (function (arglist__23141){
var x = cljs.core.first(arglist__23141);
arglist__23141 = cljs.core.next(arglist__23141);
var y = cljs.core.first(arglist__23141);
arglist__23141 = cljs.core.next(arglist__23141);
var z = cljs.core.first(arglist__23141);
var args = cljs.core.rest(arglist__23141);
return G__23139__delegate(x,y,z,args);
});
G__23139.cljs$core$IFn$_invoke$arity$variadic = G__23139__delegate;
return G__23139;
})()
;
G__23138 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__23138__0.call(this);
case 1:
return G__23138__1.call(this,x);
case 2:
return G__23138__2.call(this,x,y);
case 3:
return G__23138__3.call(this,x,y,z);
default:
var G__23142 = null;
if (arguments.length > 3) {
var G__23143__i = 0, G__23143__a = new Array(arguments.length -  3);
while (G__23143__i < G__23143__a.length) {G__23143__a[G__23143__i] = arguments[G__23143__i + 3]; ++G__23143__i;}
G__23142 = new cljs.core.IndexedSeq(G__23143__a,0);
}
return G__23138__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__23142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23138.cljs$lang$maxFixedArity = 3;
G__23138.cljs$lang$applyTo = G__23138__4.cljs$lang$applyTo;
G__23138.cljs$core$IFn$_invoke$arity$0 = G__23138__0;
G__23138.cljs$core$IFn$_invoke$arity$1 = G__23138__1;
G__23138.cljs$core$IFn$_invoke$arity$2 = G__23138__2;
G__23138.cljs$core$IFn$_invoke$arity$3 = G__23138__3;
G__23138.cljs$core$IFn$_invoke$arity$variadic = G__23138__4.cljs$core$IFn$_invoke$arity$variadic;
return G__23138;
})()
;})(fs__$1))
};
var G__23137 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__23144__i = 0, G__23144__a = new Array(arguments.length -  3);
while (G__23144__i < G__23144__a.length) {G__23144__a[G__23144__i] = arguments[G__23144__i + 3]; ++G__23144__i;}
  fs = new cljs.core.IndexedSeq(G__23144__a,0);
} 
return G__23137__delegate.call(this,f,g,h,fs);};
G__23137.cljs$lang$maxFixedArity = 3;
G__23137.cljs$lang$applyTo = (function (arglist__23145){
var f = cljs.core.first(arglist__23145);
arglist__23145 = cljs.core.next(arglist__23145);
var g = cljs.core.first(arglist__23145);
arglist__23145 = cljs.core.next(arglist__23145);
var h = cljs.core.first(arglist__23145);
var fs = cljs.core.rest(arglist__23145);
return G__23137__delegate(f,g,h,fs);
});
G__23137.cljs$core$IFn$_invoke$arity$variadic = G__23137__delegate;
return G__23137;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__23146 = null;
if (arguments.length > 3) {
var G__23147__i = 0, G__23147__a = new Array(arguments.length -  3);
while (G__23147__i < G__23147__a.length) {G__23147__a[G__23147__i] = arguments[G__23147__i + 3]; ++G__23147__i;}
G__23146 = new cljs.core.IndexedSeq(G__23147__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__23146);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__23148 = cljs.core.next(coll);
coll = G__23148;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__23149 = (n - (1));
var G__23150 = cljs.core.next(coll);
n = G__23149;
coll = G__23150;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__23154 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23154,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23154,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23154,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_23162 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if(cljs.core.seq(coll)){
var G__23163_23169 = cljs.core.first(coll);
var G__23164_23170 = writer;
var G__23165_23171 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23163_23169,G__23164_23170,G__23165_23171) : print_one.call(null,G__23163_23169,G__23164_23170,G__23165_23171));
} else {
}

var coll_23172__$1 = cljs.core.next(coll);
var n_23173 = (cljs.core.constant$keyword$85.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_23172__$1) && (((n_23173 == null)) || (!((n_23173 === (0)))))){
cljs.core._write(writer,sep);

var G__23166_23174 = cljs.core.first(coll_23172__$1);
var G__23167_23175 = writer;
var G__23168_23176 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23166_23174,G__23167_23175,G__23168_23176) : print_one.call(null,G__23166_23174,G__23167_23175,G__23168_23176));

var G__23177 = cljs.core.next(coll_23172__$1);
var G__23178 = (n_23173 - (1));
coll_23172__$1 = G__23177;
n_23173 = G__23178;
continue;
} else {
if((cljs.core.seq(coll_23172__$1)) && ((n_23173 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,"...");
} else {
}
}
break;
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_23162;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__23183 = cljs.core.seq(ss);
var chunk__23184 = null;
var count__23185 = (0);
var i__23186 = (0);
while(true){
if((i__23186 < count__23185)){
var s = chunk__23184.cljs$core$IIndexed$_nth$arity$2(null,i__23186);
cljs.core._write(writer,s);

var G__23187 = seq__23183;
var G__23188 = chunk__23184;
var G__23189 = count__23185;
var G__23190 = (i__23186 + (1));
seq__23183 = G__23187;
chunk__23184 = G__23188;
count__23185 = G__23189;
i__23186 = G__23190;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23183);
if(temp__4126__auto__){
var seq__23183__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23183__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__23183__$1);
var G__23191 = cljs.core.chunk_rest(seq__23183__$1);
var G__23192 = c__4559__auto__;
var G__23193 = cljs.core.count(c__4559__auto__);
var G__23194 = (0);
seq__23183 = G__23191;
chunk__23184 = G__23192;
count__23185 = G__23193;
i__23186 = G__23194;
continue;
} else {
var s = cljs.core.first(seq__23183__$1);
cljs.core._write(writer,s);

var G__23195 = cljs.core.next(seq__23183__$1);
var G__23196 = null;
var G__23197 = (0);
var G__23198 = (0);
seq__23183 = G__23195;
chunk__23184 = G__23196;
count__23185 = G__23197;
i__23186 = G__23198;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__23199__i = 0, G__23199__a = new Array(arguments.length -  1);
while (G__23199__i < G__23199__a.length) {G__23199__a[G__23199__i] = arguments[G__23199__i + 1]; ++G__23199__i;}
  ss = new cljs.core.IndexedSeq(G__23199__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__23200){
var writer = cljs.core.first(arglist__23200);
var ss = cljs.core.rest(arglist__23200);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj23202 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj23202;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__23205 = "[\\\\\"\b\f\n\r\t]";
var G__23206 = "g";
return RegExp(G__23205,G__23206);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__3760__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$83);
if(cljs.core.truth_(and__3760__auto__)){
var and__3760__auto____$1 = (function (){var G__23220 = obj;
if(G__23220){
var bit__4453__auto__ = (G__23220.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__4453__auto__) || (G__23220.cljs$core$IMeta$)){
return true;
} else {
if((!G__23220.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23220);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__23220);
}
})();
if(and__3760__auto____$1){
return cljs.core.meta(obj);
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
})())){
cljs.core._write(writer,"^");

pr_writer(cljs.core.meta(obj),writer,opts);

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__23221 = obj;
if(G__23221){
var bit__4446__auto__ = (G__23221.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4446__auto__) || (G__23221.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__23222 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__23223 = pr_writer;
var G__23224 = writer;
var G__23225 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__23222,G__23223,G__23224,G__23225) : cljs.core.print_map.call(null,G__23222,G__23223,G__23224,G__23225));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__23226 = obj;
return goog.isString(G__23226);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$82.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__23228 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__23228;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__23227 = obj;
if(G__23227){
var bit__4453__auto__ = (G__23227.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__4453__auto__) || (G__23227.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__23227.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23227);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__23227);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__23233 = cljs.core.seq(cljs.core.next(objs));
var chunk__23234 = null;
var count__23235 = (0);
var i__23236 = (0);
while(true){
if((i__23236 < count__23235)){
var obj = chunk__23234.cljs$core$IIndexed$_nth$arity$2(null,i__23236);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23237 = seq__23233;
var G__23238 = chunk__23234;
var G__23239 = count__23235;
var G__23240 = (i__23236 + (1));
seq__23233 = G__23237;
chunk__23234 = G__23238;
count__23235 = G__23239;
i__23236 = G__23240;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__23233);
if(temp__4126__auto__){
var seq__23233__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__23233__$1)){
var c__4559__auto__ = cljs.core.chunk_first(seq__23233__$1);
var G__23241 = cljs.core.chunk_rest(seq__23233__$1);
var G__23242 = c__4559__auto__;
var G__23243 = cljs.core.count(c__4559__auto__);
var G__23244 = (0);
seq__23233 = G__23241;
chunk__23234 = G__23242;
count__23235 = G__23243;
i__23236 = G__23244;
continue;
} else {
var obj = cljs.core.first(seq__23233__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__23245 = cljs.core.next(seq__23233__$1);
var G__23246 = null;
var G__23247 = (0);
var G__23248 = (0);
seq__23233 = G__23245;
chunk__23234 = G__23246;
count__23235 = G__23247;
i__23236 = G__23248;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$81))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23249__i = 0, G__23249__a = new Array(arguments.length -  0);
while (G__23249__i < G__23249__a.length) {G__23249__a[G__23249__i] = arguments[G__23249__i + 0]; ++G__23249__i;}
  objs = new cljs.core.IndexedSeq(G__23249__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__23250){
var objs = cljs.core.seq(arglist__23250);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23251__i = 0, G__23251__a = new Array(arguments.length -  0);
while (G__23251__i < G__23251__a.length) {G__23251__a[G__23251__i] = arguments[G__23251__i + 0]; ++G__23251__i;}
  objs = new cljs.core.IndexedSeq(G__23251__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__23252){
var objs = cljs.core.seq(arglist__23252);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23253__i = 0, G__23253__a = new Array(arguments.length -  0);
while (G__23253__i < G__23253__a.length) {G__23253__a[G__23253__i] = arguments[G__23253__i + 0]; ++G__23253__i;}
  objs = new cljs.core.IndexedSeq(G__23253__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__23254){
var objs = cljs.core.seq(arglist__23254);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$82,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23255__i = 0, G__23255__a = new Array(arguments.length -  0);
while (G__23255__i < G__23255__a.length) {G__23255__a[G__23255__i] = arguments[G__23255__i + 0]; ++G__23255__i;}
  objs = new cljs.core.IndexedSeq(G__23255__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__23256){
var objs = cljs.core.seq(arglist__23256);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$82,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23257__i = 0, G__23257__a = new Array(arguments.length -  0);
while (G__23257__i < G__23257__a.length) {G__23257__a[G__23257__i] = arguments[G__23257__i + 0]; ++G__23257__i;}
  objs = new cljs.core.IndexedSeq(G__23257__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__23258){
var objs = cljs.core.seq(arglist__23258);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$82,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23259__i = 0, G__23259__a = new Array(arguments.length -  0);
while (G__23259__i < G__23259__a.length) {G__23259__a[G__23259__i] = arguments[G__23259__i + 0]; ++G__23259__i;}
  objs = new cljs.core.IndexedSeq(G__23259__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__23260){
var objs = cljs.core.seq(arglist__23260);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$82,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23261__i = 0, G__23261__a = new Array(arguments.length -  0);
while (G__23261__i < G__23261__a.length) {G__23261__a[G__23261__i] = arguments[G__23261__i + 0]; ++G__23261__i;}
  objs = new cljs.core.IndexedSeq(G__23261__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__23262){
var objs = cljs.core.seq(arglist__23262);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__23263__i = 0, G__23263__a = new Array(arguments.length -  0);
while (G__23263__i < G__23263__a.length) {G__23263__a[G__23263__i] = arguments[G__23263__i + 0]; ++G__23263__i;}
  objs = new cljs.core.IndexedSeq(G__23263__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__23264){
var objs = cljs.core.seq(arglist__23264);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__23271_23277 = cljs.core.key(e);
var G__23272_23278 = w;
var G__23273_23279 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23271_23277,G__23272_23278,G__23273_23279) : print_one.call(null,G__23271_23277,G__23272_23278,G__23273_23279));

cljs.core._write(w," ");

var G__23274 = cljs.core.val(e);
var G__23275 = w;
var G__23276 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__23274,G__23275,G__23276) : print_one.call(null,G__23274,G__23275,G__23276));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__23280__i = 0, G__23280__a = new Array(arguments.length -  2);
while (G__23280__i < G__23280__a.length) {G__23280__a[G__23280__i] = arguments[G__23280__i + 2]; ++G__23280__i;}
  args = new cljs.core.IndexedSeq(G__23280__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__23281){
var iref = cljs.core.first(arglist__23281);
arglist__23281 = cljs.core.next(arglist__23281);
var f = cljs.core.first(arglist__23281);
var args = cljs.core.rest(arglist__23281);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__23284 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23284) : cljs.core.atom.call(null,G__23284));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__23286 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23286) : cljs.core.deref.call(null,G__23286));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__23287_SHARP_,p2__23288_SHARP_){
var ret = (function (){var G__23291 = p1__23287_SHARP_;
var G__23292 = p2__23288_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23291,G__23292) : rf.call(null,G__23291,G__23292));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__23295 = null;
var G__23295__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23295__1 = (function (result){
var G__23294 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23294) : rf.call(null,G__23294));
});
var G__23295__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__23295 = function(result,input){
switch(arguments.length){
case 0:
return G__23295__0.call(this);
case 1:
return G__23295__1.call(this,result);
case 2:
return G__23295__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23295.cljs$core$IFn$_invoke$arity$0 = G__23295__0;
G__23295.cljs$core$IFn$_invoke$arity$1 = G__23295__1;
G__23295.cljs$core$IFn$_invoke$arity$2 = G__23295__2;
return G__23295;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$95);
return ((function (pa){
return (function() {
var G__23304 = null;
var G__23304__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__23304__1 = (function (result){
var G__23300 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__23300) : rf.call(null,G__23300));
});
var G__23304__2 = (function (result,input){
var prior = (function (){var G__23301 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23301) : cljs.core.deref.call(null,G__23301));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__23302 = result;
var G__23303 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__23302,G__23303) : rf.call(null,G__23302,G__23303));
}
});
G__23304 = function(result,input){
switch(arguments.length){
case 0:
return G__23304__0.call(this);
case 1:
return G__23304__1.call(this,result);
case 2:
return G__23304__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__23304.cljs$core$IFn$_invoke$arity$0 = G__23304__0;
G__23304.cljs$core$IFn$_invoke$arity$1 = G__23304__1;
G__23304.cljs$core$IFn$_invoke$arity$2 = G__23304__2;
return G__23304;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__4750__auto__ = this;
return cljs.core.es6_iterator(this__4750__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__23306_SHARP_,p2__23305_SHARP_){
var G__23308 = p2__23305_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__23308) : proc.call(null,G__23308));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj23310 = {};
return obj23310;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._clj__GT_js[(function (){var G__23314 = x__4416__auto__;
return goog.typeOf(G__23314);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._key__GT_js[(function (){var G__23318 = x__4416__auto__;
return goog.typeOf(G__23318);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__23321 = k;
if(G__23321){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__23321.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__23321.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23321);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23321);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__23322 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__23322) : cljs.core.clj__GT_js.call(null,G__23322));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__23338 = x;
if(G__23338){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__23338.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__23338.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23338);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__23338);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj23340 = {};
return obj23340;
})();
var seq__23341_23351 = cljs.core.seq(x);
var chunk__23342_23352 = null;
var count__23343_23353 = (0);
var i__23344_23354 = (0);
while(true){
if((i__23344_23354 < count__23343_23353)){
var vec__23345_23355 = chunk__23342_23352.cljs$core$IIndexed$_nth$arity$2(null,i__23344_23354);
var k_23356 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23345_23355,(0),null);
var v_23357 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23345_23355,(1),null);
(m[cljs.core.key__GT_js(k_23356)] = clj__GT_js(v_23357));

var G__23358 = seq__23341_23351;
var G__23359 = chunk__23342_23352;
var G__23360 = count__23343_23353;
var G__23361 = (i__23344_23354 + (1));
seq__23341_23351 = G__23358;
chunk__23342_23352 = G__23359;
count__23343_23353 = G__23360;
i__23344_23354 = G__23361;
continue;
} else {
var temp__4126__auto___23362 = cljs.core.seq(seq__23341_23351);
if(temp__4126__auto___23362){
var seq__23341_23363__$1 = temp__4126__auto___23362;
if(cljs.core.chunked_seq_QMARK_(seq__23341_23363__$1)){
var c__4559__auto___23364 = cljs.core.chunk_first(seq__23341_23363__$1);
var G__23365 = cljs.core.chunk_rest(seq__23341_23363__$1);
var G__23366 = c__4559__auto___23364;
var G__23367 = cljs.core.count(c__4559__auto___23364);
var G__23368 = (0);
seq__23341_23351 = G__23365;
chunk__23342_23352 = G__23366;
count__23343_23353 = G__23367;
i__23344_23354 = G__23368;
continue;
} else {
var vec__23346_23369 = cljs.core.first(seq__23341_23363__$1);
var k_23370 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23346_23369,(0),null);
var v_23371 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23346_23369,(1),null);
(m[cljs.core.key__GT_js(k_23370)] = clj__GT_js(v_23371));

var G__23372 = cljs.core.next(seq__23341_23363__$1);
var G__23373 = null;
var G__23374 = (0);
var G__23375 = (0);
seq__23341_23351 = G__23372;
chunk__23342_23352 = G__23373;
count__23343_23353 = G__23374;
i__23344_23354 = G__23375;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__23347_23376 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__23348_23377 = null;
var count__23349_23378 = (0);
var i__23350_23379 = (0);
while(true){
if((i__23350_23379 < count__23349_23378)){
var x_23380__$1 = chunk__23348_23377.cljs$core$IIndexed$_nth$arity$2(null,i__23350_23379);
arr.push(x_23380__$1);

var G__23381 = seq__23347_23376;
var G__23382 = chunk__23348_23377;
var G__23383 = count__23349_23378;
var G__23384 = (i__23350_23379 + (1));
seq__23347_23376 = G__23381;
chunk__23348_23377 = G__23382;
count__23349_23378 = G__23383;
i__23350_23379 = G__23384;
continue;
} else {
var temp__4126__auto___23385 = cljs.core.seq(seq__23347_23376);
if(temp__4126__auto___23385){
var seq__23347_23386__$1 = temp__4126__auto___23385;
if(cljs.core.chunked_seq_QMARK_(seq__23347_23386__$1)){
var c__4559__auto___23387 = cljs.core.chunk_first(seq__23347_23386__$1);
var G__23388 = cljs.core.chunk_rest(seq__23347_23386__$1);
var G__23389 = c__4559__auto___23387;
var G__23390 = cljs.core.count(c__4559__auto___23387);
var G__23391 = (0);
seq__23347_23376 = G__23388;
chunk__23348_23377 = G__23389;
count__23349_23378 = G__23390;
i__23350_23379 = G__23391;
continue;
} else {
var x_23392__$1 = cljs.core.first(seq__23347_23386__$1);
arr.push(x_23392__$1);

var G__23393 = cljs.core.next(seq__23347_23386__$1);
var G__23394 = null;
var G__23395 = (0);
var G__23396 = (0);
seq__23347_23376 = G__23393;
chunk__23348_23377 = G__23394;
count__23349_23378 = G__23395;
i__23350_23379 = G__23396;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj23398 = {};
return obj23398;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__3760__auto__ = x;
if(and__3760__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__3760__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__4416__auto__ = (((x == null))?null:x);
return (function (){var or__3772__auto__ = (cljs.core._js__GT_clj[(function (){var G__23402 = x__4416__auto__;
return goog.typeOf(G__23402);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$96,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__23459__delegate = function (x,opts){
var map__23432 = opts;
var map__23432__$1 = ((cljs.core.seq_QMARK_(map__23432))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__23432):map__23432);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23432__$1,cljs.core.constant$keyword$96);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__23432,map__23432__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__23448 = x__$1;
if(G__23448){
var bit__4453__auto__ = null;
if(cljs.core.truth_((function (){var or__3772__auto__ = bit__4453__auto__;
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return G__23448.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__23448.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__23448);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__23448);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__4528__auto__ = ((function (map__23432,map__23432__$1,keywordize_keys,keyfn){
return (function iter__23449(s__23450){
return (new cljs.core.LazySeq(null,((function (map__23432,map__23432__$1,keywordize_keys,keyfn){
return (function (){
var s__23450__$1 = s__23450;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__23450__$1);
if(temp__4126__auto__){
var s__23450__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__23450__$2)){
var c__4526__auto__ = cljs.core.chunk_first(s__23450__$2);
var size__4527__auto__ = cljs.core.count(c__4526__auto__);
var b__23452 = cljs.core.chunk_buffer(size__4527__auto__);
if((function (){var i__23451 = (0);
while(true){
if((i__23451 < size__4527__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4526__auto__,i__23451);
cljs.core.chunk_append(b__23452,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__23457 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23457) : keyfn.call(null,G__23457));
})(),thisfn((x__$1[k]))], null));

var G__23460 = (i__23451 + (1));
i__23451 = G__23460;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__23452),iter__23449(cljs.core.chunk_rest(s__23450__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__23452),null);
}
} else {
var k = cljs.core.first(s__23450__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__23458 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__23458) : keyfn.call(null,G__23458));
})(),thisfn((x__$1[k]))], null),iter__23449(cljs.core.rest(s__23450__$2)));
}
} else {
return null;
}
break;
}
});})(map__23432,map__23432__$1,keywordize_keys,keyfn))
,null,null));
});})(map__23432,map__23432__$1,keywordize_keys,keyfn))
;
return iter__4528__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__23432,map__23432__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__23459 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__23461__i = 0, G__23461__a = new Array(arguments.length -  1);
while (G__23461__i < G__23461__a.length) {G__23461__a[G__23461__i] = arguments[G__23461__i + 1]; ++G__23461__i;}
  opts = new cljs.core.IndexedSeq(G__23461__a,0);
} 
return G__23459__delegate.call(this,x,opts);};
G__23459.cljs$lang$maxFixedArity = 1;
G__23459.cljs$lang$applyTo = (function (arglist__23462){
var x = cljs.core.first(arglist__23462);
var opts = cljs.core.rest(arglist__23462);
return G__23459__delegate(x,opts);
});
G__23459.cljs$core$IFn$_invoke$arity$variadic = G__23459__delegate;
return G__23459;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__23463 = null;
if (arguments.length > 1) {
var G__23464__i = 0, G__23464__a = new Array(arguments.length -  1);
while (G__23464__i < G__23464__a.length) {G__23464__a[G__23464__i] = arguments[G__23464__i + 1]; ++G__23464__i;}
G__23463 = new cljs.core.IndexedSeq(G__23464__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__23463);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__23467 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23467) : cljs.core.atom.call(null,G__23467));
})();
return ((function (mem){
return (function() { 
var G__23469__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__23468 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23468) : cljs.core.deref.call(null,G__23468));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__23469 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__23470__i = 0, G__23470__a = new Array(arguments.length -  0);
while (G__23470__i < G__23470__a.length) {G__23470__a[G__23470__i] = arguments[G__23470__i + 0]; ++G__23470__i;}
  args = new cljs.core.IndexedSeq(G__23470__a,0);
} 
return G__23469__delegate.call(this,args);};
G__23469.cljs$lang$maxFixedArity = 0;
G__23469.cljs$lang$applyTo = (function (arglist__23471){
var args = cljs.core.seq(arglist__23471);
return G__23469__delegate(args);
});
G__23469.cljs$core$IFn$_invoke$arity$variadic = G__23469__delegate;
return G__23469;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__23473 = ret;
f = G__23473;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__23474__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__23474 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__23475__i = 0, G__23475__a = new Array(arguments.length -  1);
while (G__23475__i < G__23475__a.length) {G__23475__a[G__23475__i] = arguments[G__23475__i + 1]; ++G__23475__i;}
  args = new cljs.core.IndexedSeq(G__23475__a,0);
} 
return G__23474__delegate.call(this,f,args);};
G__23474.cljs$lang$maxFixedArity = 1;
G__23474.cljs$lang$applyTo = (function (arglist__23476){
var f = cljs.core.first(arglist__23476);
var args = cljs.core.rest(arglist__23476);
return G__23474__delegate(f,args);
});
G__23474.cljs$core$IFn$_invoke$arity$variadic = G__23474__delegate;
return G__23474;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__23477 = null;
if (arguments.length > 1) {
var G__23478__i = 0, G__23478__a = new Array(arguments.length -  1);
while (G__23478__i < G__23478__a.length) {G__23478__a[G__23478__i] = arguments[G__23478__i + 1]; ++G__23478__i;}
G__23477 = new cljs.core.IndexedSeq(G__23478__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__23477);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__23481 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__23481) : Math.floor.call(null,G__23481));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__23483 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__23483) : f.call(null,G__23483));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$97,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$98,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$99,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__23485 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__23485) : cljs.core.atom.call(null,G__23485));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__23486__i = 0, G__23486__a = new Array(arguments.length -  1);
while (G__23486__i < G__23486__a.length) {G__23486__a[G__23486__i] = arguments[G__23486__i + 1]; ++G__23486__i;}
  args = new cljs.core.IndexedSeq(G__23486__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__23487){
var f = cljs.core.first(arglist__23487);
var args = cljs.core.rest(arglist__23487);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__23552 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23552) : cljs.core.deref.call(null,G__23552));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__3772__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$99.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
var and__3760__auto__ = cljs.core.vector_QMARK_(parent);
if(and__3760__auto__){
var and__3760__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__3760__auto____$1){
var and__3760__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__3760__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__23577 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__23575 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__23575) : child.call(null,G__23575));
})(),(function (){var G__23576 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__23576) : parent.call(null,G__23576));
})());
var G__23578 = (i + (1));
ret = G__23577;
i = G__23578;
continue;
}
break;
}
} else {
return and__3760__auto____$2;
}
} else {
return and__3760__auto____$1;
}
} else {
return and__3760__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__23582 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23582) : cljs.core.deref.call(null,G__23582));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$97.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__23586 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23586) : cljs.core.deref.call(null,G__23586));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$99.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__23590 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23590) : cljs.core.deref.call(null,G__23590));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$98.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$97.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$98.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$99.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__23599 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__23599) : targets.call(null,G__23599));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__23600 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__23600) : sources.call(null,G__23600));
})()));
});})(tp,td,ta))
;
var or__3772__auto__ = ((cljs.core.contains_QMARK_((function (){var G__23604 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__23604) : tp.call(null,G__23604));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__23605 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__23605) : ta.call(null,G__23605));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__23606 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__23606) : ta.call(null,G__23606));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$97,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$97.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$99,tf(cljs.core.constant$keyword$99.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$98,tf(cljs.core.constant$keyword$98.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$97.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__23613 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23613) : parentMap.call(null,G__23613));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__23614 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23614) : parentMap.call(null,G__23614));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__23607_SHARP_){
return cljs.core.cons(cljs.core.first(p1__23607_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__23607_SHARP_),cljs.core.second(p1__23607_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__23615 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__23615) : parentMap.call(null,G__23615));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__23608_SHARP_,p2__23609_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__23608_SHARP_,p2__23609_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__23618 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23618) : cljs.core.deref.call(null,G__23618));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__23619 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23619) : cljs.core.deref.call(null,G__23619));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__23635 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23635) : cljs.core.deref.call(null,G__23635));
})().call(null,x);
var or__3772__auto__ = (cljs.core.truth_((function (){var and__3760__auto__ = xprefs;
if(cljs.core.truth_(and__3760__auto__)){
var G__23637 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__23637) : xprefs.call(null,G__23637));
} else {
return and__3760__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__23638 = cljs.core.rest(ps);
ps = G__23638;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3772__auto____$1)){
return or__3772__auto____$1;
} else {
var or__3772__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__23639 = cljs.core.rest(ps);
ps = G__23639;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__3772__auto____$2)){
return or__3772__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__3772__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__3772__auto__)){
return or__3772__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__23653){
var vec__23654 = p__23653;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23654,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__23654,(1),null);
var e = vec__23654;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__23655 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23655) : cljs.core.deref.call(null,G__23655));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__3772__auto__ = (be == null);
if(or__3772__auto__){
return or__3772__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__23656 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23656) : cljs.core.deref.call(null,G__23656));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__23657 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23657) : cljs.core.deref.call(null,G__23657));
})(),(function (){var G__23658 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23658) : cljs.core.deref.call(null,G__23658));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj23660 = {};
return obj23660;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._reset[(function (){var G__23664 = x__4416__auto__;
return goog.typeOf(G__23664);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._reset["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._add_method[(function (){var G__23668 = x__4416__auto__;
return goog.typeOf(G__23668);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._add_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._remove_method[(function (){var G__23672 = x__4416__auto__;
return goog.typeOf(G__23672);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._remove_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._prefer_method[(function (){var G__23676 = x__4416__auto__;
return goog.typeOf(G__23676);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._get_method[(function (){var G__23680 = x__4416__auto__;
return goog.typeOf(G__23680);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._get_method["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._methods[(function (){var G__23684 = x__4416__auto__;
return goog.typeOf(G__23684);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._methods["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__3760__auto__ = mf;
if(and__3760__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__3760__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__4416__auto__ = (((mf == null))?null:mf);
return (function (){var or__3772__auto__ = (cljs.core._prefers[(function (){var G__23688 = x__4416__auto__;
return goog.typeOf(G__23688);
})()]);
if(or__3772__auto__){
return or__3772__auto__;
} else {
var or__3772__auto____$1 = (cljs.core._prefers["_"]);
if(or__3772__auto____$1){
return or__3772__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__23690 = this$__$1;
return goog.getUid(G__23690);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__23691 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23691) : cljs.core.deref.call(null,G__23691));
})(),(function (){var G__23692 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23692) : cljs.core.deref.call(null,G__23692));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__23693 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23693) : cljs.core.deref.call(null,G__23693));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__23694 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23694) : cljs.core.deref.call(null,G__23694));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__23695 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23695) : cljs.core.deref.call(null,G__23695));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__23696 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__23696) : cljs.core.deref.call(null,G__23696));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__24537 = null;
var G__24537__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__24537__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23697 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__23697) : self__.dispatch_fn.call(null,G__23697));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23698 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__23698) : target_fn.call(null,G__23698));
});
var G__24537__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23699 = a;
var G__23700 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__23699,G__23700) : self__.dispatch_fn.call(null,G__23699,G__23700));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23701 = a;
var G__23702 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__23701,G__23702) : target_fn.call(null,G__23701,G__23702));
});
var G__24537__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23703 = a;
var G__23704 = b;
var G__23705 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__23703,G__23704,G__23705) : self__.dispatch_fn.call(null,G__23703,G__23704,G__23705));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23706 = a;
var G__23707 = b;
var G__23708 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__23706,G__23707,G__23708) : target_fn.call(null,G__23706,G__23707,G__23708));
});
var G__24537__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23709 = a;
var G__23710 = b;
var G__23711 = c;
var G__23712 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__23709,G__23710,G__23711,G__23712) : self__.dispatch_fn.call(null,G__23709,G__23710,G__23711,G__23712));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23713 = a;
var G__23714 = b;
var G__23715 = c;
var G__23716 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__23713,G__23714,G__23715,G__23716) : target_fn.call(null,G__23713,G__23714,G__23715,G__23716));
});
var G__24537__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23717 = a;
var G__23718 = b;
var G__23719 = c;
var G__23720 = d;
var G__23721 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__23717,G__23718,G__23719,G__23720,G__23721) : self__.dispatch_fn.call(null,G__23717,G__23718,G__23719,G__23720,G__23721));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23722 = a;
var G__23723 = b;
var G__23724 = c;
var G__23725 = d;
var G__23726 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__23722,G__23723,G__23724,G__23725,G__23726) : target_fn.call(null,G__23722,G__23723,G__23724,G__23725,G__23726));
});
var G__24537__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23727 = a;
var G__23728 = b;
var G__23729 = c;
var G__23730 = d;
var G__23731 = e;
var G__23732 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__23727,G__23728,G__23729,G__23730,G__23731,G__23732) : self__.dispatch_fn.call(null,G__23727,G__23728,G__23729,G__23730,G__23731,G__23732));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23733 = a;
var G__23734 = b;
var G__23735 = c;
var G__23736 = d;
var G__23737 = e;
var G__23738 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__23733,G__23734,G__23735,G__23736,G__23737,G__23738) : target_fn.call(null,G__23733,G__23734,G__23735,G__23736,G__23737,G__23738));
});
var G__24537__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23739 = a;
var G__23740 = b;
var G__23741 = c;
var G__23742 = d;
var G__23743 = e;
var G__23744 = f;
var G__23745 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__23739,G__23740,G__23741,G__23742,G__23743,G__23744,G__23745) : self__.dispatch_fn.call(null,G__23739,G__23740,G__23741,G__23742,G__23743,G__23744,G__23745));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23746 = a;
var G__23747 = b;
var G__23748 = c;
var G__23749 = d;
var G__23750 = e;
var G__23751 = f;
var G__23752 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752) : target_fn.call(null,G__23746,G__23747,G__23748,G__23749,G__23750,G__23751,G__23752));
});
var G__24537__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23753 = a;
var G__23754 = b;
var G__23755 = c;
var G__23756 = d;
var G__23757 = e;
var G__23758 = f;
var G__23759 = g;
var G__23760 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760) : self__.dispatch_fn.call(null,G__23753,G__23754,G__23755,G__23756,G__23757,G__23758,G__23759,G__23760));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23761 = a;
var G__23762 = b;
var G__23763 = c;
var G__23764 = d;
var G__23765 = e;
var G__23766 = f;
var G__23767 = g;
var G__23768 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768) : target_fn.call(null,G__23761,G__23762,G__23763,G__23764,G__23765,G__23766,G__23767,G__23768));
});
var G__24537__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23769 = a;
var G__23770 = b;
var G__23771 = c;
var G__23772 = d;
var G__23773 = e;
var G__23774 = f;
var G__23775 = g;
var G__23776 = h;
var G__23777 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__23769,G__23770,G__23771,G__23772,G__23773,G__23774,G__23775,G__23776,G__23777) : self__.dispatch_fn.call(null,G__23769,G__23770,G__23771,G__23772,G__23773,G__23774,G__23775,G__23776,G__23777));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23778 = a;
var G__23779 = b;
var G__23780 = c;
var G__23781 = d;
var G__23782 = e;
var G__23783 = f;
var G__23784 = g;
var G__23785 = h;
var G__23786 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786) : target_fn.call(null,G__23778,G__23779,G__23780,G__23781,G__23782,G__23783,G__23784,G__23785,G__23786));
});
var G__24537__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23787 = a;
var G__23788 = b;
var G__23789 = c;
var G__23790 = d;
var G__23791 = e;
var G__23792 = f;
var G__23793 = g;
var G__23794 = h;
var G__23795 = i;
var G__23796 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__23787,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793,G__23794,G__23795,G__23796) : self__.dispatch_fn.call(null,G__23787,G__23788,G__23789,G__23790,G__23791,G__23792,G__23793,G__23794,G__23795,G__23796));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23797 = a;
var G__23798 = b;
var G__23799 = c;
var G__23800 = d;
var G__23801 = e;
var G__23802 = f;
var G__23803 = g;
var G__23804 = h;
var G__23805 = i;
var G__23806 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803,G__23804,G__23805,G__23806) : target_fn.call(null,G__23797,G__23798,G__23799,G__23800,G__23801,G__23802,G__23803,G__23804,G__23805,G__23806));
});
var G__24537__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23807 = a;
var G__23808 = b;
var G__23809 = c;
var G__23810 = d;
var G__23811 = e;
var G__23812 = f;
var G__23813 = g;
var G__23814 = h;
var G__23815 = i;
var G__23816 = j;
var G__23817 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817) : self__.dispatch_fn.call(null,G__23807,G__23808,G__23809,G__23810,G__23811,G__23812,G__23813,G__23814,G__23815,G__23816,G__23817));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23818 = a;
var G__23819 = b;
var G__23820 = c;
var G__23821 = d;
var G__23822 = e;
var G__23823 = f;
var G__23824 = g;
var G__23825 = h;
var G__23826 = i;
var G__23827 = j;
var G__23828 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__23818,G__23819,G__23820,G__23821,G__23822,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828) : target_fn.call(null,G__23818,G__23819,G__23820,G__23821,G__23822,G__23823,G__23824,G__23825,G__23826,G__23827,G__23828));
});
var G__24537__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23829 = a;
var G__23830 = b;
var G__23831 = c;
var G__23832 = d;
var G__23833 = e;
var G__23834 = f;
var G__23835 = g;
var G__23836 = h;
var G__23837 = i;
var G__23838 = j;
var G__23839 = k;
var G__23840 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839,G__23840) : self__.dispatch_fn.call(null,G__23829,G__23830,G__23831,G__23832,G__23833,G__23834,G__23835,G__23836,G__23837,G__23838,G__23839,G__23840));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23841 = a;
var G__23842 = b;
var G__23843 = c;
var G__23844 = d;
var G__23845 = e;
var G__23846 = f;
var G__23847 = g;
var G__23848 = h;
var G__23849 = i;
var G__23850 = j;
var G__23851 = k;
var G__23852 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852) : target_fn.call(null,G__23841,G__23842,G__23843,G__23844,G__23845,G__23846,G__23847,G__23848,G__23849,G__23850,G__23851,G__23852));
});
var G__24537__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23853 = a;
var G__23854 = b;
var G__23855 = c;
var G__23856 = d;
var G__23857 = e;
var G__23858 = f;
var G__23859 = g;
var G__23860 = h;
var G__23861 = i;
var G__23862 = j;
var G__23863 = k;
var G__23864 = l;
var G__23865 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__23853,G__23854,G__23855,G__23856,G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865) : self__.dispatch_fn.call(null,G__23853,G__23854,G__23855,G__23856,G__23857,G__23858,G__23859,G__23860,G__23861,G__23862,G__23863,G__23864,G__23865));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23866 = a;
var G__23867 = b;
var G__23868 = c;
var G__23869 = d;
var G__23870 = e;
var G__23871 = f;
var G__23872 = g;
var G__23873 = h;
var G__23874 = i;
var G__23875 = j;
var G__23876 = k;
var G__23877 = l;
var G__23878 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__23866,G__23867,G__23868,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878) : target_fn.call(null,G__23866,G__23867,G__23868,G__23869,G__23870,G__23871,G__23872,G__23873,G__23874,G__23875,G__23876,G__23877,G__23878));
});
var G__24537__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23879 = a;
var G__23880 = b;
var G__23881 = c;
var G__23882 = d;
var G__23883 = e;
var G__23884 = f;
var G__23885 = g;
var G__23886 = h;
var G__23887 = i;
var G__23888 = j;
var G__23889 = k;
var G__23890 = l;
var G__23891 = m;
var G__23892 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892) : self__.dispatch_fn.call(null,G__23879,G__23880,G__23881,G__23882,G__23883,G__23884,G__23885,G__23886,G__23887,G__23888,G__23889,G__23890,G__23891,G__23892));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23893 = a;
var G__23894 = b;
var G__23895 = c;
var G__23896 = d;
var G__23897 = e;
var G__23898 = f;
var G__23899 = g;
var G__23900 = h;
var G__23901 = i;
var G__23902 = j;
var G__23903 = k;
var G__23904 = l;
var G__23905 = m;
var G__23906 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906) : target_fn.call(null,G__23893,G__23894,G__23895,G__23896,G__23897,G__23898,G__23899,G__23900,G__23901,G__23902,G__23903,G__23904,G__23905,G__23906));
});
var G__24537__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23907 = a;
var G__23908 = b;
var G__23909 = c;
var G__23910 = d;
var G__23911 = e;
var G__23912 = f;
var G__23913 = g;
var G__23914 = h;
var G__23915 = i;
var G__23916 = j;
var G__23917 = k;
var G__23918 = l;
var G__23919 = m;
var G__23920 = n;
var G__23921 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921) : self__.dispatch_fn.call(null,G__23907,G__23908,G__23909,G__23910,G__23911,G__23912,G__23913,G__23914,G__23915,G__23916,G__23917,G__23918,G__23919,G__23920,G__23921));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23922 = a;
var G__23923 = b;
var G__23924 = c;
var G__23925 = d;
var G__23926 = e;
var G__23927 = f;
var G__23928 = g;
var G__23929 = h;
var G__23930 = i;
var G__23931 = j;
var G__23932 = k;
var G__23933 = l;
var G__23934 = m;
var G__23935 = n;
var G__23936 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__23922,G__23923,G__23924,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936) : target_fn.call(null,G__23922,G__23923,G__23924,G__23925,G__23926,G__23927,G__23928,G__23929,G__23930,G__23931,G__23932,G__23933,G__23934,G__23935,G__23936));
});
var G__24537__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23937 = a;
var G__23938 = b;
var G__23939 = c;
var G__23940 = d;
var G__23941 = e;
var G__23942 = f;
var G__23943 = g;
var G__23944 = h;
var G__23945 = i;
var G__23946 = j;
var G__23947 = k;
var G__23948 = l;
var G__23949 = m;
var G__23950 = n;
var G__23951 = o;
var G__23952 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__23937,G__23938,G__23939,G__23940,G__23941,G__23942,G__23943,G__23944,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950,G__23951,G__23952) : self__.dispatch_fn.call(null,G__23937,G__23938,G__23939,G__23940,G__23941,G__23942,G__23943,G__23944,G__23945,G__23946,G__23947,G__23948,G__23949,G__23950,G__23951,G__23952));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23953 = a;
var G__23954 = b;
var G__23955 = c;
var G__23956 = d;
var G__23957 = e;
var G__23958 = f;
var G__23959 = g;
var G__23960 = h;
var G__23961 = i;
var G__23962 = j;
var G__23963 = k;
var G__23964 = l;
var G__23965 = m;
var G__23966 = n;
var G__23967 = o;
var G__23968 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__23953,G__23954,G__23955,G__23956,G__23957,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966,G__23967,G__23968) : target_fn.call(null,G__23953,G__23954,G__23955,G__23956,G__23957,G__23958,G__23959,G__23960,G__23961,G__23962,G__23963,G__23964,G__23965,G__23966,G__23967,G__23968));
});
var G__24537__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__23969 = a;
var G__23970 = b;
var G__23971 = c;
var G__23972 = d;
var G__23973 = e;
var G__23974 = f;
var G__23975 = g;
var G__23976 = h;
var G__23977 = i;
var G__23978 = j;
var G__23979 = k;
var G__23980 = l;
var G__23981 = m;
var G__23982 = n;
var G__23983 = o;
var G__23984 = p;
var G__23985 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__23969,G__23970,G__23971,G__23972,G__23973,G__23974,G__23975,G__23976,G__23977,G__23978,G__23979,G__23980,G__23981,G__23982,G__23983,G__23984,G__23985) : self__.dispatch_fn.call(null,G__23969,G__23970,G__23971,G__23972,G__23973,G__23974,G__23975,G__23976,G__23977,G__23978,G__23979,G__23980,G__23981,G__23982,G__23983,G__23984,G__23985));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__23986 = a;
var G__23987 = b;
var G__23988 = c;
var G__23989 = d;
var G__23990 = e;
var G__23991 = f;
var G__23992 = g;
var G__23993 = h;
var G__23994 = i;
var G__23995 = j;
var G__23996 = k;
var G__23997 = l;
var G__23998 = m;
var G__23999 = n;
var G__24000 = o;
var G__24001 = p;
var G__24002 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__23986,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994,G__23995,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002) : target_fn.call(null,G__23986,G__23987,G__23988,G__23989,G__23990,G__23991,G__23992,G__23993,G__23994,G__23995,G__23996,G__23997,G__23998,G__23999,G__24000,G__24001,G__24002));
});
var G__24537__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24003 = a;
var G__24004 = b;
var G__24005 = c;
var G__24006 = d;
var G__24007 = e;
var G__24008 = f;
var G__24009 = g;
var G__24010 = h;
var G__24011 = i;
var G__24012 = j;
var G__24013 = k;
var G__24014 = l;
var G__24015 = m;
var G__24016 = n;
var G__24017 = o;
var G__24018 = p;
var G__24019 = q;
var G__24020 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__24003,G__24004,G__24005,G__24006,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013,G__24014,G__24015,G__24016,G__24017,G__24018,G__24019,G__24020) : self__.dispatch_fn.call(null,G__24003,G__24004,G__24005,G__24006,G__24007,G__24008,G__24009,G__24010,G__24011,G__24012,G__24013,G__24014,G__24015,G__24016,G__24017,G__24018,G__24019,G__24020));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24021 = a;
var G__24022 = b;
var G__24023 = c;
var G__24024 = d;
var G__24025 = e;
var G__24026 = f;
var G__24027 = g;
var G__24028 = h;
var G__24029 = i;
var G__24030 = j;
var G__24031 = k;
var G__24032 = l;
var G__24033 = m;
var G__24034 = n;
var G__24035 = o;
var G__24036 = p;
var G__24037 = q;
var G__24038 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032,G__24033,G__24034,G__24035,G__24036,G__24037,G__24038) : target_fn.call(null,G__24021,G__24022,G__24023,G__24024,G__24025,G__24026,G__24027,G__24028,G__24029,G__24030,G__24031,G__24032,G__24033,G__24034,G__24035,G__24036,G__24037,G__24038));
});
var G__24537__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24039 = a;
var G__24040 = b;
var G__24041 = c;
var G__24042 = d;
var G__24043 = e;
var G__24044 = f;
var G__24045 = g;
var G__24046 = h;
var G__24047 = i;
var G__24048 = j;
var G__24049 = k;
var G__24050 = l;
var G__24051 = m;
var G__24052 = n;
var G__24053 = o;
var G__24054 = p;
var G__24055 = q;
var G__24056 = r;
var G__24057 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__24039,G__24040,G__24041,G__24042,G__24043,G__24044,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053,G__24054,G__24055,G__24056,G__24057) : self__.dispatch_fn.call(null,G__24039,G__24040,G__24041,G__24042,G__24043,G__24044,G__24045,G__24046,G__24047,G__24048,G__24049,G__24050,G__24051,G__24052,G__24053,G__24054,G__24055,G__24056,G__24057));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24058 = a;
var G__24059 = b;
var G__24060 = c;
var G__24061 = d;
var G__24062 = e;
var G__24063 = f;
var G__24064 = g;
var G__24065 = h;
var G__24066 = i;
var G__24067 = j;
var G__24068 = k;
var G__24069 = l;
var G__24070 = m;
var G__24071 = n;
var G__24072 = o;
var G__24073 = p;
var G__24074 = q;
var G__24075 = r;
var G__24076 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__24058,G__24059,G__24060,G__24061,G__24062,G__24063,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070,G__24071,G__24072,G__24073,G__24074,G__24075,G__24076) : target_fn.call(null,G__24058,G__24059,G__24060,G__24061,G__24062,G__24063,G__24064,G__24065,G__24066,G__24067,G__24068,G__24069,G__24070,G__24071,G__24072,G__24073,G__24074,G__24075,G__24076));
});
var G__24537__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__24077 = a;
var G__24078 = b;
var G__24079 = c;
var G__24080 = d;
var G__24081 = e;
var G__24082 = f;
var G__24083 = g;
var G__24084 = h;
var G__24085 = i;
var G__24086 = j;
var G__24087 = k;
var G__24088 = l;
var G__24089 = m;
var G__24090 = n;
var G__24091 = o;
var G__24092 = p;
var G__24093 = q;
var G__24094 = r;
var G__24095 = s;
var G__24096 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__24077,G__24078,G__24079,G__24080,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090,G__24091,G__24092,G__24093,G__24094,G__24095,G__24096) : self__.dispatch_fn.call(null,G__24077,G__24078,G__24079,G__24080,G__24081,G__24082,G__24083,G__24084,G__24085,G__24086,G__24087,G__24088,G__24089,G__24090,G__24091,G__24092,G__24093,G__24094,G__24095,G__24096));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24097 = a;
var G__24098 = b;
var G__24099 = c;
var G__24100 = d;
var G__24101 = e;
var G__24102 = f;
var G__24103 = g;
var G__24104 = h;
var G__24105 = i;
var G__24106 = j;
var G__24107 = k;
var G__24108 = l;
var G__24109 = m;
var G__24110 = n;
var G__24111 = o;
var G__24112 = p;
var G__24113 = q;
var G__24114 = r;
var G__24115 = s;
var G__24116 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__24097,G__24098,G__24099,G__24100,G__24101,G__24102,G__24103,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116) : target_fn.call(null,G__24097,G__24098,G__24099,G__24100,G__24101,G__24102,G__24103,G__24104,G__24105,G__24106,G__24107,G__24108,G__24109,G__24110,G__24111,G__24112,G__24113,G__24114,G__24115,G__24116));
});
var G__24537__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__24537 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__24537__1.call(this,self__);
case 2:
return G__24537__2.call(this,self__,a);
case 3:
return G__24537__3.call(this,self__,a,b);
case 4:
return G__24537__4.call(this,self__,a,b,c);
case 5:
return G__24537__5.call(this,self__,a,b,c,d);
case 6:
return G__24537__6.call(this,self__,a,b,c,d,e);
case 7:
return G__24537__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__24537__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__24537__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__24537__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__24537__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__24537__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__24537__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__24537__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__24537__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__24537__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__24537__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__24537__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__24537__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__24537__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__24537__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__24537__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__24537.cljs$core$IFn$_invoke$arity$1 = G__24537__1;
G__24537.cljs$core$IFn$_invoke$arity$2 = G__24537__2;
G__24537.cljs$core$IFn$_invoke$arity$3 = G__24537__3;
G__24537.cljs$core$IFn$_invoke$arity$4 = G__24537__4;
G__24537.cljs$core$IFn$_invoke$arity$5 = G__24537__5;
G__24537.cljs$core$IFn$_invoke$arity$6 = G__24537__6;
G__24537.cljs$core$IFn$_invoke$arity$7 = G__24537__7;
G__24537.cljs$core$IFn$_invoke$arity$8 = G__24537__8;
G__24537.cljs$core$IFn$_invoke$arity$9 = G__24537__9;
G__24537.cljs$core$IFn$_invoke$arity$10 = G__24537__10;
G__24537.cljs$core$IFn$_invoke$arity$11 = G__24537__11;
G__24537.cljs$core$IFn$_invoke$arity$12 = G__24537__12;
G__24537.cljs$core$IFn$_invoke$arity$13 = G__24537__13;
G__24537.cljs$core$IFn$_invoke$arity$14 = G__24537__14;
G__24537.cljs$core$IFn$_invoke$arity$15 = G__24537__15;
G__24537.cljs$core$IFn$_invoke$arity$16 = G__24537__16;
G__24537.cljs$core$IFn$_invoke$arity$17 = G__24537__17;
G__24537.cljs$core$IFn$_invoke$arity$18 = G__24537__18;
G__24537.cljs$core$IFn$_invoke$arity$19 = G__24537__19;
G__24537.cljs$core$IFn$_invoke$arity$20 = G__24537__20;
G__24537.cljs$core$IFn$_invoke$arity$21 = G__24537__21;
G__24537.cljs$core$IFn$_invoke$arity$22 = G__24537__22;
return G__24537;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args23689){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args23689)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24117 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__24117) : self__.dispatch_fn.call(null,G__24117));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24118 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__24118) : target_fn.call(null,G__24118));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24119 = a;
var G__24120 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__24119,G__24120) : self__.dispatch_fn.call(null,G__24119,G__24120));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24121 = a;
var G__24122 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__24121,G__24122) : target_fn.call(null,G__24121,G__24122));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24123 = a;
var G__24124 = b;
var G__24125 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__24123,G__24124,G__24125) : self__.dispatch_fn.call(null,G__24123,G__24124,G__24125));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24126 = a;
var G__24127 = b;
var G__24128 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__24126,G__24127,G__24128) : target_fn.call(null,G__24126,G__24127,G__24128));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24129 = a;
var G__24130 = b;
var G__24131 = c;
var G__24132 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__24129,G__24130,G__24131,G__24132) : self__.dispatch_fn.call(null,G__24129,G__24130,G__24131,G__24132));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24133 = a;
var G__24134 = b;
var G__24135 = c;
var G__24136 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__24133,G__24134,G__24135,G__24136) : target_fn.call(null,G__24133,G__24134,G__24135,G__24136));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24137 = a;
var G__24138 = b;
var G__24139 = c;
var G__24140 = d;
var G__24141 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__24137,G__24138,G__24139,G__24140,G__24141) : self__.dispatch_fn.call(null,G__24137,G__24138,G__24139,G__24140,G__24141));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24142 = a;
var G__24143 = b;
var G__24144 = c;
var G__24145 = d;
var G__24146 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__24142,G__24143,G__24144,G__24145,G__24146) : target_fn.call(null,G__24142,G__24143,G__24144,G__24145,G__24146));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24147 = a;
var G__24148 = b;
var G__24149 = c;
var G__24150 = d;
var G__24151 = e;
var G__24152 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__24147,G__24148,G__24149,G__24150,G__24151,G__24152) : self__.dispatch_fn.call(null,G__24147,G__24148,G__24149,G__24150,G__24151,G__24152));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24153 = a;
var G__24154 = b;
var G__24155 = c;
var G__24156 = d;
var G__24157 = e;
var G__24158 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__24153,G__24154,G__24155,G__24156,G__24157,G__24158) : target_fn.call(null,G__24153,G__24154,G__24155,G__24156,G__24157,G__24158));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24159 = a;
var G__24160 = b;
var G__24161 = c;
var G__24162 = d;
var G__24163 = e;
var G__24164 = f;
var G__24165 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__24159,G__24160,G__24161,G__24162,G__24163,G__24164,G__24165) : self__.dispatch_fn.call(null,G__24159,G__24160,G__24161,G__24162,G__24163,G__24164,G__24165));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24166 = a;
var G__24167 = b;
var G__24168 = c;
var G__24169 = d;
var G__24170 = e;
var G__24171 = f;
var G__24172 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172) : target_fn.call(null,G__24166,G__24167,G__24168,G__24169,G__24170,G__24171,G__24172));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24173 = a;
var G__24174 = b;
var G__24175 = c;
var G__24176 = d;
var G__24177 = e;
var G__24178 = f;
var G__24179 = g;
var G__24180 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__24173,G__24174,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180) : self__.dispatch_fn.call(null,G__24173,G__24174,G__24175,G__24176,G__24177,G__24178,G__24179,G__24180));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24181 = a;
var G__24182 = b;
var G__24183 = c;
var G__24184 = d;
var G__24185 = e;
var G__24186 = f;
var G__24187 = g;
var G__24188 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188) : target_fn.call(null,G__24181,G__24182,G__24183,G__24184,G__24185,G__24186,G__24187,G__24188));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24189 = a;
var G__24190 = b;
var G__24191 = c;
var G__24192 = d;
var G__24193 = e;
var G__24194 = f;
var G__24195 = g;
var G__24196 = h;
var G__24197 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196,G__24197) : self__.dispatch_fn.call(null,G__24189,G__24190,G__24191,G__24192,G__24193,G__24194,G__24195,G__24196,G__24197));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24198 = a;
var G__24199 = b;
var G__24200 = c;
var G__24201 = d;
var G__24202 = e;
var G__24203 = f;
var G__24204 = g;
var G__24205 = h;
var G__24206 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206) : target_fn.call(null,G__24198,G__24199,G__24200,G__24201,G__24202,G__24203,G__24204,G__24205,G__24206));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24207 = a;
var G__24208 = b;
var G__24209 = c;
var G__24210 = d;
var G__24211 = e;
var G__24212 = f;
var G__24213 = g;
var G__24214 = h;
var G__24215 = i;
var G__24216 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214,G__24215,G__24216) : self__.dispatch_fn.call(null,G__24207,G__24208,G__24209,G__24210,G__24211,G__24212,G__24213,G__24214,G__24215,G__24216));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24217 = a;
var G__24218 = b;
var G__24219 = c;
var G__24220 = d;
var G__24221 = e;
var G__24222 = f;
var G__24223 = g;
var G__24224 = h;
var G__24225 = i;
var G__24226 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226) : target_fn.call(null,G__24217,G__24218,G__24219,G__24220,G__24221,G__24222,G__24223,G__24224,G__24225,G__24226));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24227 = a;
var G__24228 = b;
var G__24229 = c;
var G__24230 = d;
var G__24231 = e;
var G__24232 = f;
var G__24233 = g;
var G__24234 = h;
var G__24235 = i;
var G__24236 = j;
var G__24237 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237) : self__.dispatch_fn.call(null,G__24227,G__24228,G__24229,G__24230,G__24231,G__24232,G__24233,G__24234,G__24235,G__24236,G__24237));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24238 = a;
var G__24239 = b;
var G__24240 = c;
var G__24241 = d;
var G__24242 = e;
var G__24243 = f;
var G__24244 = g;
var G__24245 = h;
var G__24246 = i;
var G__24247 = j;
var G__24248 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__24238,G__24239,G__24240,G__24241,G__24242,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248) : target_fn.call(null,G__24238,G__24239,G__24240,G__24241,G__24242,G__24243,G__24244,G__24245,G__24246,G__24247,G__24248));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24249 = a;
var G__24250 = b;
var G__24251 = c;
var G__24252 = d;
var G__24253 = e;
var G__24254 = f;
var G__24255 = g;
var G__24256 = h;
var G__24257 = i;
var G__24258 = j;
var G__24259 = k;
var G__24260 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__24249,G__24250,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260) : self__.dispatch_fn.call(null,G__24249,G__24250,G__24251,G__24252,G__24253,G__24254,G__24255,G__24256,G__24257,G__24258,G__24259,G__24260));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24261 = a;
var G__24262 = b;
var G__24263 = c;
var G__24264 = d;
var G__24265 = e;
var G__24266 = f;
var G__24267 = g;
var G__24268 = h;
var G__24269 = i;
var G__24270 = j;
var G__24271 = k;
var G__24272 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272) : target_fn.call(null,G__24261,G__24262,G__24263,G__24264,G__24265,G__24266,G__24267,G__24268,G__24269,G__24270,G__24271,G__24272));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24273 = a;
var G__24274 = b;
var G__24275 = c;
var G__24276 = d;
var G__24277 = e;
var G__24278 = f;
var G__24279 = g;
var G__24280 = h;
var G__24281 = i;
var G__24282 = j;
var G__24283 = k;
var G__24284 = l;
var G__24285 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__24273,G__24274,G__24275,G__24276,G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285) : self__.dispatch_fn.call(null,G__24273,G__24274,G__24275,G__24276,G__24277,G__24278,G__24279,G__24280,G__24281,G__24282,G__24283,G__24284,G__24285));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24286 = a;
var G__24287 = b;
var G__24288 = c;
var G__24289 = d;
var G__24290 = e;
var G__24291 = f;
var G__24292 = g;
var G__24293 = h;
var G__24294 = i;
var G__24295 = j;
var G__24296 = k;
var G__24297 = l;
var G__24298 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__24286,G__24287,G__24288,G__24289,G__24290,G__24291,G__24292,G__24293,G__24294,G__24295,G__24296,G__24297,G__24298) : target_fn.call(null,G__24286,G__24287,G__24288,G__24289,G__24290,G__24291,G__24292,G__24293,G__24294,G__24295,G__24296,G__24297,G__24298));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24299 = a;
var G__24300 = b;
var G__24301 = c;
var G__24302 = d;
var G__24303 = e;
var G__24304 = f;
var G__24305 = g;
var G__24306 = h;
var G__24307 = i;
var G__24308 = j;
var G__24309 = k;
var G__24310 = l;
var G__24311 = m;
var G__24312 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__24299,G__24300,G__24301,G__24302,G__24303,G__24304,G__24305,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312) : self__.dispatch_fn.call(null,G__24299,G__24300,G__24301,G__24302,G__24303,G__24304,G__24305,G__24306,G__24307,G__24308,G__24309,G__24310,G__24311,G__24312));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24313 = a;
var G__24314 = b;
var G__24315 = c;
var G__24316 = d;
var G__24317 = e;
var G__24318 = f;
var G__24319 = g;
var G__24320 = h;
var G__24321 = i;
var G__24322 = j;
var G__24323 = k;
var G__24324 = l;
var G__24325 = m;
var G__24326 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__24313,G__24314,G__24315,G__24316,G__24317,G__24318,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326) : target_fn.call(null,G__24313,G__24314,G__24315,G__24316,G__24317,G__24318,G__24319,G__24320,G__24321,G__24322,G__24323,G__24324,G__24325,G__24326));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24327 = a;
var G__24328 = b;
var G__24329 = c;
var G__24330 = d;
var G__24331 = e;
var G__24332 = f;
var G__24333 = g;
var G__24334 = h;
var G__24335 = i;
var G__24336 = j;
var G__24337 = k;
var G__24338 = l;
var G__24339 = m;
var G__24340 = n;
var G__24341 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__24327,G__24328,G__24329,G__24330,G__24331,G__24332,G__24333,G__24334,G__24335,G__24336,G__24337,G__24338,G__24339,G__24340,G__24341) : self__.dispatch_fn.call(null,G__24327,G__24328,G__24329,G__24330,G__24331,G__24332,G__24333,G__24334,G__24335,G__24336,G__24337,G__24338,G__24339,G__24340,G__24341));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24342 = a;
var G__24343 = b;
var G__24344 = c;
var G__24345 = d;
var G__24346 = e;
var G__24347 = f;
var G__24348 = g;
var G__24349 = h;
var G__24350 = i;
var G__24351 = j;
var G__24352 = k;
var G__24353 = l;
var G__24354 = m;
var G__24355 = n;
var G__24356 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__24342,G__24343,G__24344,G__24345,G__24346,G__24347,G__24348,G__24349,G__24350,G__24351,G__24352,G__24353,G__24354,G__24355,G__24356) : target_fn.call(null,G__24342,G__24343,G__24344,G__24345,G__24346,G__24347,G__24348,G__24349,G__24350,G__24351,G__24352,G__24353,G__24354,G__24355,G__24356));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24357 = a;
var G__24358 = b;
var G__24359 = c;
var G__24360 = d;
var G__24361 = e;
var G__24362 = f;
var G__24363 = g;
var G__24364 = h;
var G__24365 = i;
var G__24366 = j;
var G__24367 = k;
var G__24368 = l;
var G__24369 = m;
var G__24370 = n;
var G__24371 = o;
var G__24372 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__24357,G__24358,G__24359,G__24360,G__24361,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370,G__24371,G__24372) : self__.dispatch_fn.call(null,G__24357,G__24358,G__24359,G__24360,G__24361,G__24362,G__24363,G__24364,G__24365,G__24366,G__24367,G__24368,G__24369,G__24370,G__24371,G__24372));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24373 = a;
var G__24374 = b;
var G__24375 = c;
var G__24376 = d;
var G__24377 = e;
var G__24378 = f;
var G__24379 = g;
var G__24380 = h;
var G__24381 = i;
var G__24382 = j;
var G__24383 = k;
var G__24384 = l;
var G__24385 = m;
var G__24386 = n;
var G__24387 = o;
var G__24388 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__24373,G__24374,G__24375,G__24376,G__24377,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388) : target_fn.call(null,G__24373,G__24374,G__24375,G__24376,G__24377,G__24378,G__24379,G__24380,G__24381,G__24382,G__24383,G__24384,G__24385,G__24386,G__24387,G__24388));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24389 = a;
var G__24390 = b;
var G__24391 = c;
var G__24392 = d;
var G__24393 = e;
var G__24394 = f;
var G__24395 = g;
var G__24396 = h;
var G__24397 = i;
var G__24398 = j;
var G__24399 = k;
var G__24400 = l;
var G__24401 = m;
var G__24402 = n;
var G__24403 = o;
var G__24404 = p;
var G__24405 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__24389,G__24390,G__24391,G__24392,G__24393,G__24394,G__24395,G__24396,G__24397,G__24398,G__24399,G__24400,G__24401,G__24402,G__24403,G__24404,G__24405) : self__.dispatch_fn.call(null,G__24389,G__24390,G__24391,G__24392,G__24393,G__24394,G__24395,G__24396,G__24397,G__24398,G__24399,G__24400,G__24401,G__24402,G__24403,G__24404,G__24405));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24406 = a;
var G__24407 = b;
var G__24408 = c;
var G__24409 = d;
var G__24410 = e;
var G__24411 = f;
var G__24412 = g;
var G__24413 = h;
var G__24414 = i;
var G__24415 = j;
var G__24416 = k;
var G__24417 = l;
var G__24418 = m;
var G__24419 = n;
var G__24420 = o;
var G__24421 = p;
var G__24422 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__24406,G__24407,G__24408,G__24409,G__24410,G__24411,G__24412,G__24413,G__24414,G__24415,G__24416,G__24417,G__24418,G__24419,G__24420,G__24421,G__24422) : target_fn.call(null,G__24406,G__24407,G__24408,G__24409,G__24410,G__24411,G__24412,G__24413,G__24414,G__24415,G__24416,G__24417,G__24418,G__24419,G__24420,G__24421,G__24422));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24423 = a;
var G__24424 = b;
var G__24425 = c;
var G__24426 = d;
var G__24427 = e;
var G__24428 = f;
var G__24429 = g;
var G__24430 = h;
var G__24431 = i;
var G__24432 = j;
var G__24433 = k;
var G__24434 = l;
var G__24435 = m;
var G__24436 = n;
var G__24437 = o;
var G__24438 = p;
var G__24439 = q;
var G__24440 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__24423,G__24424,G__24425,G__24426,G__24427,G__24428,G__24429,G__24430,G__24431,G__24432,G__24433,G__24434,G__24435,G__24436,G__24437,G__24438,G__24439,G__24440) : self__.dispatch_fn.call(null,G__24423,G__24424,G__24425,G__24426,G__24427,G__24428,G__24429,G__24430,G__24431,G__24432,G__24433,G__24434,G__24435,G__24436,G__24437,G__24438,G__24439,G__24440));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24441 = a;
var G__24442 = b;
var G__24443 = c;
var G__24444 = d;
var G__24445 = e;
var G__24446 = f;
var G__24447 = g;
var G__24448 = h;
var G__24449 = i;
var G__24450 = j;
var G__24451 = k;
var G__24452 = l;
var G__24453 = m;
var G__24454 = n;
var G__24455 = o;
var G__24456 = p;
var G__24457 = q;
var G__24458 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__24441,G__24442,G__24443,G__24444,G__24445,G__24446,G__24447,G__24448,G__24449,G__24450,G__24451,G__24452,G__24453,G__24454,G__24455,G__24456,G__24457,G__24458) : target_fn.call(null,G__24441,G__24442,G__24443,G__24444,G__24445,G__24446,G__24447,G__24448,G__24449,G__24450,G__24451,G__24452,G__24453,G__24454,G__24455,G__24456,G__24457,G__24458));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24459 = a;
var G__24460 = b;
var G__24461 = c;
var G__24462 = d;
var G__24463 = e;
var G__24464 = f;
var G__24465 = g;
var G__24466 = h;
var G__24467 = i;
var G__24468 = j;
var G__24469 = k;
var G__24470 = l;
var G__24471 = m;
var G__24472 = n;
var G__24473 = o;
var G__24474 = p;
var G__24475 = q;
var G__24476 = r;
var G__24477 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__24459,G__24460,G__24461,G__24462,G__24463,G__24464,G__24465,G__24466,G__24467,G__24468,G__24469,G__24470,G__24471,G__24472,G__24473,G__24474,G__24475,G__24476,G__24477) : self__.dispatch_fn.call(null,G__24459,G__24460,G__24461,G__24462,G__24463,G__24464,G__24465,G__24466,G__24467,G__24468,G__24469,G__24470,G__24471,G__24472,G__24473,G__24474,G__24475,G__24476,G__24477));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24478 = a;
var G__24479 = b;
var G__24480 = c;
var G__24481 = d;
var G__24482 = e;
var G__24483 = f;
var G__24484 = g;
var G__24485 = h;
var G__24486 = i;
var G__24487 = j;
var G__24488 = k;
var G__24489 = l;
var G__24490 = m;
var G__24491 = n;
var G__24492 = o;
var G__24493 = p;
var G__24494 = q;
var G__24495 = r;
var G__24496 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__24478,G__24479,G__24480,G__24481,G__24482,G__24483,G__24484,G__24485,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491,G__24492,G__24493,G__24494,G__24495,G__24496) : target_fn.call(null,G__24478,G__24479,G__24480,G__24481,G__24482,G__24483,G__24484,G__24485,G__24486,G__24487,G__24488,G__24489,G__24490,G__24491,G__24492,G__24493,G__24494,G__24495,G__24496));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__24497 = a;
var G__24498 = b;
var G__24499 = c;
var G__24500 = d;
var G__24501 = e;
var G__24502 = f;
var G__24503 = g;
var G__24504 = h;
var G__24505 = i;
var G__24506 = j;
var G__24507 = k;
var G__24508 = l;
var G__24509 = m;
var G__24510 = n;
var G__24511 = o;
var G__24512 = p;
var G__24513 = q;
var G__24514 = r;
var G__24515 = s;
var G__24516 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__24497,G__24498,G__24499,G__24500,G__24501,G__24502,G__24503,G__24504,G__24505,G__24506,G__24507,G__24508,G__24509,G__24510,G__24511,G__24512,G__24513,G__24514,G__24515,G__24516) : self__.dispatch_fn.call(null,G__24497,G__24498,G__24499,G__24500,G__24501,G__24502,G__24503,G__24504,G__24505,G__24506,G__24507,G__24508,G__24509,G__24510,G__24511,G__24512,G__24513,G__24514,G__24515,G__24516));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__24517 = a;
var G__24518 = b;
var G__24519 = c;
var G__24520 = d;
var G__24521 = e;
var G__24522 = f;
var G__24523 = g;
var G__24524 = h;
var G__24525 = i;
var G__24526 = j;
var G__24527 = k;
var G__24528 = l;
var G__24529 = m;
var G__24530 = n;
var G__24531 = o;
var G__24532 = p;
var G__24533 = q;
var G__24534 = r;
var G__24535 = s;
var G__24536 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__24517,G__24518,G__24519,G__24520,G__24521,G__24522,G__24523,G__24524,G__24525,G__24526,G__24527,G__24528,G__24529,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536) : target_fn.call(null,G__24517,G__24518,G__24519,G__24520,G__24521,G__24522,G__24523,G__24524,G__24525,G__24526,G__24527,G__24528,G__24529,G__24530,G__24531,G__24532,G__24533,G__24534,G__24535,G__24536));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__24538 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__24538);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__4359__auto__,writer__4360__auto__,opt__4361__auto__){
return cljs.core._write(writer__4360__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__24543 = msg;
return Error(G__24543);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__24548 = x;
var G__24549 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__24548,G__24549) : pred.call(null,G__24548,G__24549));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__24550 = y;
var G__24551 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__24550,G__24551) : pred.call(null,G__24550,G__24551));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$100;
} else {
return cljs.core.constant$keyword$101;
}
});
